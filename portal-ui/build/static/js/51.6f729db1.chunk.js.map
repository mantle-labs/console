{"version":3,"file":"static/js/51.6f729db1.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #E2E2E2\",\r\n      borderRadius: 2,\r\n      backgroundColor: \"#FBFAFA\",\r\n      paddingLeft: 25,\r\n      paddingTop: 31,\r\n      paddingBottom: 21,\r\n      paddingRight: 30,\r\n    },\r\n    leftItems: {\r\n      fontSize: 16,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 15,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& .min-icon\": {\r\n        marginRight: 15,\r\n        height: 28,\r\n        width: 38,\r\n      },\r\n    },\r\n    helpText: {\r\n      fontSize: 16,\r\n      paddingLeft: 5,\r\n    },\r\n  });\r\n\r\ninterface IHelpBox {\r\n  classes: any;\r\n  iconComponent: any;\r\n  title: string;\r\n  help: any;\r\n}\r\n\r\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.leftItems}>\r\n          {iconComponent}\r\n          {title}\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.helpText}>\r\n          {help}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(HelpBox);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  LinearProgress,\r\n  SelectChangeEvent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport get from \"lodash/get\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalStyleUtils,\r\n  spacingUtils,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { LifeCycleItem } from \"../types\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport { LifecycleConfigIcon } from \"../../../../icons\";\r\nimport { ITiersDropDown } from \"./AddLifecycleModal\";\r\nimport {\r\n  ITierElement,\r\n  ITierResponse,\r\n} from \"../../Configurations/TiersConfiguration/types\";\r\nimport api from \"../../../../common/api\";\r\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\r\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\r\n\r\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    dateSelector: {\r\n      \"& div\": {\r\n        borderBottom: 0,\r\n        marginBottom: 0,\r\n\r\n        \"& div:nth-child(2)\": {\r\n          border: \"1px solid #EAEAEA\",\r\n          paddingLeft: 5,\r\n\r\n          \"& div\": {\r\n            border: 0,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    formFieldRowAccordion: {\r\n      \"& .MuiPaper-root\": { padding: 0 },\r\n    },\r\n    ...spacingUtils,\r\n    ...modalStyleUtils,\r\n    ...formFieldStyles,\r\n    ...createTenantCommon,\r\n  });\r\n\r\ninterface IAddUserContentProps {\r\n  classes: any;\r\n  closeModalAndRefresh: (reload: boolean) => void;\r\n  selectedBucket: string;\r\n  lifecycleRule: LifeCycleItem;\r\n  open: boolean;\r\n}\r\n\r\nconst EditLifecycleConfiguration = ({\r\n  classes,\r\n  closeModalAndRefresh,\r\n  selectedBucket,\r\n  lifecycleRule,\r\n  open,\r\n}: IAddUserContentProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\r\n  const [addLoading, setAddLoading] = useState<boolean>(false);\r\n  const [tags, setTags] = useState<string>(\"\");\r\n  const [enabled, setEnabled] = useState<boolean>(false);\r\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\r\n  const [prefix, setPrefix] = useState(\"\");\r\n  const [storageClass, setStorageClass] = useState(\"\");\r\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\r\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\r\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\r\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\r\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\r\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\r\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\r\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (loadingTiers) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\r\n        .then((res: ITierResponse) => {\r\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\r\n\r\n          if (tiersList !== null && tiersList.length >= 1) {\r\n            const objList = tiersList.map((tier: ITierElement) => {\r\n              const tierType = tier.type;\r\n              const value = get(tier, `${tierType}.name`, \"\");\r\n\r\n              return { label: value, value: value };\r\n            });\r\n\r\n            setTiersList(objList);\r\n            if (objList.length > 0) {\r\n              setStorageClass(objList[0].value);\r\n            }\r\n          }\r\n          setLoadingTiers(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setLoadingTiers(false);\r\n        });\r\n    }\r\n  }, [loadingTiers]);\r\n\r\n  useEffect(() => {\r\n    let valid = true;\r\n\r\n    if (ilmType !== \"expiry\") {\r\n      if (storageClass === \"\") {\r\n        valid = false;\r\n      }\r\n    }\r\n    setIsFormValid(valid);\r\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\r\n\r\n  useEffect(() => {\r\n    if (lifecycleRule.status === \"Enabled\") {\r\n      setEnabled(true);\r\n    }\r\n\r\n    let transitionMode = false;\r\n\r\n    if (lifecycleRule.transition) {\r\n      if (\r\n        lifecycleRule.transition.days &&\r\n        lifecycleRule.transition.days !== 0\r\n      ) {\r\n        setTransitionDays(lifecycleRule.transition.days.toString());\r\n        setIlmType(\"transition\");\r\n        transitionMode = true;\r\n      }\r\n      if (\r\n        lifecycleRule.transition.noncurrent_transition_days &&\r\n        lifecycleRule.transition.noncurrent_transition_days !== 0\r\n      ) {\r\n        setNCTransitionDays(\r\n          lifecycleRule.transition.noncurrent_transition_days.toString()\r\n        );\r\n        setIlmType(\"transition\");\r\n        transitionMode = true;\r\n      }\r\n\r\n      // Fallback to old rules by date\r\n      if (\r\n        lifecycleRule.transition.date &&\r\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\r\n      ) {\r\n        setIlmType(\"transition\");\r\n        transitionMode = true;\r\n      }\r\n    }\r\n\r\n    if (lifecycleRule.expiration) {\r\n      if (\r\n        lifecycleRule.expiration.days &&\r\n        lifecycleRule.expiration.days !== 0\r\n      ) {\r\n        setExpiryDays(lifecycleRule.expiration.days.toString());\r\n        setIlmType(\"expiry\");\r\n        transitionMode = false;\r\n      }\r\n      if (\r\n        lifecycleRule.expiration.noncurrent_expiration_days &&\r\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\r\n      ) {\r\n        setNCExpirationDays(\r\n          lifecycleRule.expiration.noncurrent_expiration_days.toString()\r\n        );\r\n        setIlmType(\"expiry\");\r\n        transitionMode = false;\r\n      }\r\n\r\n      // Fallback to old rules by date\r\n      if (\r\n        lifecycleRule.expiration.date &&\r\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\r\n      ) {\r\n        setIlmType(\"expiry\");\r\n        transitionMode = false;\r\n      }\r\n    }\r\n\r\n    // Transition fields\r\n    if (transitionMode) {\r\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\r\n      setNCTransitionDays(\r\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\"\r\n      );\r\n      setNCTransitionSC(\r\n        lifecycleRule.transition?.noncurrent_storage_class || \"\"\r\n      );\r\n    } else {\r\n      // Expiry fields\r\n      setNCExpirationDays(\r\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\"\r\n      );\r\n    }\r\n\r\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\r\n    setPrefix(lifecycleRule.prefix || \"\");\r\n\r\n    if (lifecycleRule.tags) {\r\n      const tgs = lifecycleRule.tags.reduce(\r\n        (stringLab: string, currItem: any, index: number) => {\r\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\r\n            currItem.value\r\n          }`;\r\n        },\r\n        \"\"\r\n      );\r\n\r\n      setTags(tgs);\r\n    }\r\n  }, [lifecycleRule]);\r\n\r\n  const saveRecord = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    if (addLoading) {\r\n      return;\r\n    }\r\n    setAddLoading(true);\r\n    if (selectedBucket !== null && lifecycleRule !== null) {\r\n      let rules = {};\r\n\r\n      if (ilmType === \"expiry\") {\r\n        let expiry: { [key: string]: number } = {};\r\n\r\n        if (\r\n          lifecycleRule.expiration?.days &&\r\n          lifecycleRule.expiration?.days > 0\r\n        ) {\r\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\r\n        }\r\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\r\n          expiry[\"noncurrentversion_expiration_days\"] =\r\n            parseInt(NCExpirationDays);\r\n        }\r\n\r\n        rules = {\r\n          ...expiry,\r\n        };\r\n      } else {\r\n        let transition: { [key: string]: number | string } = {};\r\n\r\n        if (\r\n          lifecycleRule.expiration?.days &&\r\n          lifecycleRule.expiration?.days > 0\r\n        ) {\r\n          transition[\"transition_days\"] = parseInt(expiryDays);\r\n          transition[\"storage_class\"] = storageClass;\r\n        }\r\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\r\n          transition[\"noncurrentversion_transition_days\"] =\r\n            parseInt(NCExpirationDays);\r\n          transition[\"noncurrentversion_transition_storage_class\"] =\r\n            NCTransitionSC;\r\n        }\r\n\r\n        rules = {\r\n          ...transition,\r\n        };\r\n      }\r\n\r\n      const lifecycleUpdate = {\r\n        type: ilmType,\r\n        disable: !enabled,\r\n        prefix,\r\n        tags,\r\n        expired_object_delete_marker: expiredObjectDM,\r\n        ...rules,\r\n      };\r\n\r\n      api\r\n        .invoke(\r\n          \"PUT\",\r\n          `/api/v1/buckets/${selectedBucket}/lifecycle/${lifecycleRule.id}`,\r\n          lifecycleUpdate\r\n        )\r\n        .then((res) => {\r\n          setAddLoading(false);\r\n          closeModalAndRefresh(true);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setAddLoading(false);\r\n          dispatch(setModalErrorSnackMessage(err));\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalWrapper\r\n      onClose={() => {\r\n        closeModalAndRefresh(false);\r\n      }}\r\n      modalOpen={open}\r\n      title={\"Edit Lifecycle Configuration\"}\r\n      titleIcon={<LifecycleConfigIcon />}\r\n    >\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\r\n          saveRecord(e);\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12} className={classes.formScrollable}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <InputBoxWrapper\r\n                  id=\"id\"\r\n                  name=\"id\"\r\n                  label=\"Id\"\r\n                  value={lifecycleRule.id}\r\n                  onChange={() => {}}\r\n                  disabled\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormSwitchWrapper\r\n                  label=\"Status\"\r\n                  indicatorLabels={[\"Enabled\", \"Disabled\"]}\r\n                  checked={enabled}\r\n                  value={\"user_enabled\"}\r\n                  id=\"rule_status\"\r\n                  name=\"rule_status\"\r\n                  onChange={(e) => {\r\n                    setEnabled(e.target.checked);\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <RadioGroupSelector\r\n                  currentSelection={ilmType}\r\n                  id=\"rule_type\"\r\n                  name=\"rule_type\"\r\n                  label=\"Rule Type\"\r\n                  selectorOptions={[\r\n                    { value: \"expiry\", label: \"Expiry\" },\r\n                    { value: \"transition\", label: \"Transition\" },\r\n                  ]}\r\n                  onChange={() => {}}\r\n                  disableOptions\r\n                />\r\n              </Grid>\r\n              {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\r\n                <Grid item xs={12}>\r\n                  <InputBoxWrapper\r\n                    type=\"number\"\r\n                    id=\"expiry_days\"\r\n                    name=\"expiry_days\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setExpiryDays(e.target.value);\r\n                    }}\r\n                    label=\"Expiry Days\"\r\n                    value={expiryDays}\r\n                    min=\"0\"\r\n                  />\r\n                </Grid>\r\n              )}\r\n\r\n              {ilmType === \"expiry\" &&\r\n                lifecycleRule.expiration?.noncurrent_expiration_days && (\r\n                  <Grid item xs={12}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"noncurrentversion_expiration_days\"\r\n                      name=\"noncurrentversion_expiration_days\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setNCExpirationDays(e.target.value);\r\n                      }}\r\n                      label=\"Non-current Expiration Days\"\r\n                      value={NCExpirationDays}\r\n                      min=\"0\"\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              {ilmType === \"transition\" && lifecycleRule.transition?.days && (\r\n                <Fragment>\r\n                  <Grid item xs={12}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"transition_days\"\r\n                      name=\"transition_days\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        setTransitionDays(e.target.value);\r\n                      }}\r\n                      label=\"Transition Days\"\r\n                      value={transitionDays}\r\n                      min=\"0\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <SelectWrapper\r\n                      label=\"Storage Class\"\r\n                      id=\"storage_class\"\r\n                      name=\"storage_class\"\r\n                      value={storageClass}\r\n                      onChange={(e: SelectChangeEvent<string>) => {\r\n                        setStorageClass(e.target.value as string);\r\n                      }}\r\n                      options={tiersList}\r\n                    />\r\n                  </Grid>\r\n                </Fragment>\r\n              )}\r\n\r\n              {ilmType === \"transition\" &&\r\n                lifecycleRule.transition?.noncurrent_transition_days && (\r\n                  <Fragment>\r\n                    <Grid item xs={12}>\r\n                      <InputBoxWrapper\r\n                        type=\"number\"\r\n                        id=\"noncurrentversion_transition_days\"\r\n                        name=\"noncurrentversion_transition_days\"\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setNCTransitionDays(e.target.value);\r\n                        }}\r\n                        label=\"Non-current Transition Days\"\r\n                        value={NCTransitionDays}\r\n                        min=\"0\"\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <InputBoxWrapper\r\n                        id=\"noncurrentversion_t_SC\"\r\n                        name=\"noncurrentversion_t_SC\"\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setNCTransitionSC(e.target.value);\r\n                        }}\r\n                        placeholder=\"Set Non-current Version Transition Storage Class\"\r\n                        label=\"Non-current Version Transition Storage Class\"\r\n                        value={NCTransitionSC}\r\n                      />\r\n                    </Grid>\r\n                  </Fragment>\r\n                )}\r\n              <Grid item xs={12} className={classes.formFieldRowAccordion}>\r\n                <Accordion>\r\n                  <AccordionSummary>\r\n                    <Typography>Filters</Typography>\r\n                  </AccordionSummary>\r\n\r\n                  <AccordionDetails>\r\n                    <Grid item xs={12}>\r\n                      <InputBoxWrapper\r\n                        id=\"prefix\"\r\n                        name=\"prefix\"\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setPrefix(e.target.value);\r\n                        }}\r\n                        label=\"Prefix\"\r\n                        value={prefix}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <QueryMultiSelector\r\n                        name=\"tags\"\r\n                        label=\"Tags\"\r\n                        elements={tags}\r\n                        onChange={(vl: string) => {\r\n                          setTags(vl);\r\n                        }}\r\n                        keyPlaceholder=\"Tag Key\"\r\n                        valuePlaceholder=\"Tag Value\"\r\n                        withBorder\r\n                      />\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              </Grid>\r\n              {ilmType === \"expiry\" &&\r\n                lifecycleRule.expiration?.noncurrent_expiration_days && (\r\n                  <Grid item xs={12} className={classes.formFieldRowAccordion}>\r\n                    <Accordion>\r\n                      <AccordionSummary>\r\n                        <Typography>Advanced</Typography>\r\n                      </AccordionSummary>\r\n\r\n                      <AccordionDetails>\r\n                        <Grid item xs={12}>\r\n                          <FormSwitchWrapper\r\n                            value=\"expired_delete_marker\"\r\n                            id=\"expired_delete_marker\"\r\n                            name=\"expired_delete_marker\"\r\n                            checked={expiredObjectDM}\r\n                            onChange={(\r\n                              event: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                              setExpiredObjectDM(event.target.checked);\r\n                            }}\r\n                            label={\"Expired Object Delete Marker\"}\r\n                          />\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </Grid>\r\n                )}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.modalButtonBar}>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              disabled={addLoading}\r\n              onClick={() => {\r\n                closeModalAndRefresh(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={addLoading || !isFormValid}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          {addLoading && (\r\n            <Grid item xs={12}>\r\n              <LinearProgress />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(EditLifecycleConfiguration);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  LinearProgress,\r\n  SelectChangeEvent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport {\r\n  ITierElement,\r\n  ITierResponse,\r\n} from \"../../Configurations/TiersConfiguration/types\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\r\nimport api from \"../../../../common/api\";\r\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\r\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalStyleUtils,\r\n  spacingUtils,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport { LifecycleConfigIcon } from \"../../../../icons\";\r\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\r\nimport { BucketVersioning } from \"../types\";\r\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport { selDistSet, setModalErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\ninterface IReplicationModal {\r\n  open: boolean;\r\n  closeModalAndRefresh: (refresh: boolean) => any;\r\n  classes: any;\r\n  bucketName: string;\r\n}\r\n\r\nexport interface ITiersDropDown {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    dateSelector: {\r\n      \"& div\": {\r\n        borderBottom: 0,\r\n        marginBottom: 0,\r\n\r\n        \"& div:nth-child(2)\": {\r\n          border: \"1px solid #EAEAEA\",\r\n          paddingLeft: 5,\r\n\r\n          \"& div\": {\r\n            border: 0,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    formFieldRowFilter: {\r\n      \"& .MuiPaper-root\": { padding: 0 },\r\n    },\r\n    ...spacingUtils,\r\n    ...modalStyleUtils,\r\n    ...formFieldStyles,\r\n    ...createTenantCommon,\r\n  });\r\n\r\nconst AddLifecycleModal = ({\r\n  open,\r\n  closeModalAndRefresh,\r\n  classes,\r\n  bucketName,\r\n}: IReplicationModal) => {\r\n  const dispatch = useAppDispatch();\r\n  const distributedSetup = useSelector(selDistSet);\r\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\r\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\r\n  const [addLoading, setAddLoading] = useState(false);\r\n  const [isVersioned, setIsVersioned] = useState<boolean>(false);\r\n  const [prefix, setPrefix] = useState(\"\");\r\n  const [tags, setTags] = useState<string>(\"\");\r\n  const [storageClass, setStorageClass] = useState(\"\");\r\n\r\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\r\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\r\n    \"current\"\r\n  );\r\n\r\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\r\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\r\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\r\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    if (loadingTiers) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\r\n        .then((res: ITierResponse) => {\r\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\r\n\r\n          if (tiersList !== null && tiersList.length >= 1) {\r\n            const objList = tiersList.map((tier: ITierElement) => {\r\n              const tierType = tier.type;\r\n              const value = get(tier, `${tierType}.name`, \"\");\r\n\r\n              return { label: value, value: value };\r\n            });\r\n\r\n            setTiersList(objList);\r\n            if (objList.length > 0) {\r\n              setStorageClass(objList[0].value);\r\n            }\r\n          }\r\n          setLoadingTiers(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setLoadingTiers(false);\r\n        });\r\n    }\r\n  }, [loadingTiers]);\r\n\r\n  useEffect(() => {\r\n    let valid = true;\r\n\r\n    if (ilmType !== \"expiry\") {\r\n      if (storageClass === \"\") {\r\n        valid = false;\r\n      }\r\n    }\r\n    setIsFormValid(valid);\r\n  }, [ilmType, lifecycleDays, storageClass]);\r\n\r\n  useEffect(() => {\r\n    if (loadingVersioning && distributedSetup) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/buckets/${bucketName}/versioning`)\r\n        .then((res: BucketVersioning) => {\r\n          setIsVersioned(res.is_versioned);\r\n          setLoadingVersioning(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setModalErrorSnackMessage(err));\r\n          setLoadingVersioning(false);\r\n        });\r\n    }\r\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\r\n\r\n  const addRecord = () => {\r\n    let rules = {};\r\n\r\n    if (ilmType === \"expiry\") {\r\n      let expiry: { [key: string]: number } = {};\r\n\r\n      if (targetVersion === \"current\") {\r\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\r\n      } else {\r\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\r\n      }\r\n\r\n      rules = {\r\n        ...expiry,\r\n      };\r\n    } else {\r\n      let transition: { [key: string]: number | string } = {};\r\n      if (targetVersion === \"current\") {\r\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\r\n        transition[\"storage_class\"] = storageClass;\r\n      } else {\r\n        transition[\"noncurrentversion_transition_days\"] =\r\n          parseInt(lifecycleDays);\r\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\r\n      }\r\n\r\n      rules = {\r\n        ...transition,\r\n      };\r\n    }\r\n\r\n    const lifecycleInsert = {\r\n      type: ilmType,\r\n      prefix,\r\n      tags,\r\n      expired_object_delete_marker: expiredObjectDM,\r\n      ...rules,\r\n    };\r\n\r\n    api\r\n      .invoke(\r\n        \"POST\",\r\n        `/api/v1/buckets/${bucketName}/lifecycle`,\r\n        lifecycleInsert\r\n      )\r\n      .then(() => {\r\n        setAddLoading(false);\r\n        closeModalAndRefresh(true);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setAddLoading(false);\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ModalWrapper\r\n      modalOpen={open}\r\n      onClose={() => {\r\n        closeModalAndRefresh(false);\r\n      }}\r\n      title=\"Add Lifecycle Rule\"\r\n      titleIcon={<LifecycleConfigIcon />}\r\n    >\r\n      {loadingTiers && (\r\n        <Grid container className={classes.loadingBox}>\r\n          <Grid item xs={12}>\r\n            <LinearProgress />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      {!loadingTiers && (\r\n        <form\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\r\n            e.preventDefault();\r\n            setAddLoading(true);\r\n            addRecord();\r\n          }}\r\n        >\r\n          <Grid container>\r\n            <Grid item xs={12} className={classes.formScrollable}>\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12}>\r\n                    <RadioGroupSelector\r\n                      currentSelection={ilmType}\r\n                      id=\"ilm_type\"\r\n                      name=\"ilm_type\"\r\n                      label=\"Type of lifecycle\"\r\n                      onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\r\n                        setIlmType(e.target.value as string);\r\n                      }}\r\n                      selectorOptions={[\r\n                        { value: \"expiry\", label: \"Expiry\" },\r\n                        { value: \"transition\", label: \"Transition\" },\r\n                      ]}\r\n                    />\r\n                  </Grid>\r\n                  {isVersioned && (\r\n                    <Grid item xs={12}>\r\n                      <SelectWrapper\r\n                        value={targetVersion}\r\n                        id=\"object_version\"\r\n                        name=\"object_version\"\r\n                        label=\"Object Version\"\r\n                        onChange={(e) => {\r\n                          setTargetVersion(\r\n                            e.target.value as \"current\" | \"noncurrent\"\r\n                          );\r\n                        }}\r\n                        options={[\r\n                          { value: \"current\", label: \"Current Version\" },\r\n                          { value: \"noncurrent\", label: \"Non-Current Version\" },\r\n                        ]}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <InputBoxWrapper\r\n                      id=\"expiry_days\"\r\n                      name=\"expiry_days\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        if (e.target.validity.valid) {\r\n                          setLifecycleDays(e.target.value);\r\n                        }\r\n                      }}\r\n                      pattern={\"[0-9]*\"}\r\n                      label=\"After\"\r\n                      value={lifecycleDays}\r\n                      overlayObject={\r\n                        <InputUnitMenu\r\n                          id={\"expire-current-unit\"}\r\n                          unitSelected={\"days\"}\r\n                          unitsList={[{ label: \"Days\", value: \"days\" }]}\r\n                          disabled={true}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  {ilmType === \"expiry\" ? (\r\n                    <Fragment></Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <Grid item xs={12}>\r\n                        <SelectWrapper\r\n                          label=\"To Tier\"\r\n                          id=\"storage_class\"\r\n                          name=\"storage_class\"\r\n                          value={storageClass}\r\n                          onChange={(e: SelectChangeEvent<string>) => {\r\n                            setStorageClass(e.target.value as string);\r\n                          }}\r\n                          options={tiersList}\r\n                        />\r\n                      </Grid>\r\n                    </Fragment>\r\n                  )}\r\n                  <Grid item xs={12} className={classes.formFieldRowFilter}>\r\n                    <Accordion>\r\n                      <AccordionSummary>\r\n                        <Typography>Filters</Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <Grid item xs={12}>\r\n                          <InputBoxWrapper\r\n                            id=\"prefix\"\r\n                            name=\"prefix\"\r\n                            onChange={(\r\n                              e: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                              setPrefix(e.target.value);\r\n                            }}\r\n                            label=\"Prefix\"\r\n                            value={prefix}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <QueryMultiSelector\r\n                            name=\"tags\"\r\n                            label=\"Tags\"\r\n                            elements={\"\"}\r\n                            onChange={(vl: string) => {\r\n                              setTags(vl);\r\n                            }}\r\n                            keyPlaceholder=\"Tag Key\"\r\n                            valuePlaceholder=\"Tag Value\"\r\n                            withBorder\r\n                          />\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </Grid>\r\n                  {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\r\n                    <Grid item xs={12} className={classes.formFieldRowFilter}>\r\n                      <Accordion>\r\n                        <AccordionSummary>\r\n                          <Typography>Advanced</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                          <Grid item xs={12}>\r\n                            <FormSwitchWrapper\r\n                              value=\"expired_delete_marker\"\r\n                              id=\"expired_delete_marker\"\r\n                              name=\"expired_delete_marker\"\r\n                              checked={expiredObjectDM}\r\n                              onChange={(\r\n                                event: React.ChangeEvent<HTMLInputElement>\r\n                              ) => {\r\n                                setExpiredObjectDM(event.target.checked);\r\n                              }}\r\n                              label={\"Expire Delete Marker\"}\r\n                              description={\r\n                                \"Remove the reference to the object if no versions are left\"\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.modalButtonBar}>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={addLoading}\r\n                onClick={() => {\r\n                  closeModalAndRefresh(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={addLoading || !isFormValid}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n            {addLoading && (\r\n              <Grid item xs={12}>\r\n                <LinearProgress />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </form>\r\n      )}\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AddLifecycleModal);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { DialogContentText } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\n\r\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\r\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\r\nimport api from \"../../../../common/api\";\r\n\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\ninterface IDeleteLifecycleRule {\r\n  deleteOpen: boolean;\r\n  onCloseAndRefresh: (refresh: boolean) => any;\r\n  bucket: string;\r\n  id: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...modalBasic,\r\n  });\r\n\r\nconst DeleteBucketLifecycleRule = ({\r\n  onCloseAndRefresh,\r\n  deleteOpen,\r\n  bucket,\r\n  id,\r\n}: IDeleteLifecycleRule) => {\r\n  const dispatch = useAppDispatch();\r\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (deletingRule) {\r\n      api\r\n        .invoke(\"DELETE\", `/api/v1/buckets/${bucket}/lifecycle/${id}`)\r\n        .then((res) => {\r\n          setDeletingRule(false);\r\n          onCloseAndRefresh(true);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setDeletingRule(false);\r\n          dispatch(setErrorSnackMessage(err));\r\n        });\r\n    }\r\n  }, [deletingRule, bucket, id, onCloseAndRefresh, dispatch]);\r\n\r\n  const onConfirmDelete = () => {\r\n    setDeletingRule(true);\r\n  };\r\n\r\n  return (\r\n    <ConfirmDialog\r\n      title={`Delete Lifecycle Rule`}\r\n      confirmText={\"Delete\"}\r\n      isOpen={deleteOpen}\r\n      isLoading={deletingRule}\r\n      onConfirm={onConfirmDelete}\r\n      titleIcon={<ConfirmDeleteIcon />}\r\n      onClose={() => onCloseAndRefresh(false)}\r\n      confirmationContent={\r\n        <DialogContentText>\r\n          Are you sure you want to delete the <strong>{id}</strong> rule?\r\n        </DialogContentText>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(DeleteBucketLifecycleRule);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport get from \"lodash/get\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { LifeCycleItem } from \"../types\";\r\nimport { AddIcon, TiersIcon } from \"../../../../icons\";\r\nimport {\r\n  actionsTray,\r\n  searchField,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport api from \"../../../../common/api\";\r\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\r\nimport AddLifecycleModal from \"./AddLifecycleModal\";\r\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\r\nimport HelpBox from \"../../../../common/HelpBox\";\r\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\r\nimport {\r\n  hasPermission,\r\n  SecureComponent,\r\n} from \"../../../../common/SecureComponent\";\r\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\r\nimport RBIconButton from \"./SummaryItems/RBIconButton\";\r\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\r\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...searchField,\r\n    ...actionsTray,\r\n    twHeight: {\r\n      minHeight: 400,\r\n    },\r\n  });\r\n\r\ninterface IBucketLifecyclePanelProps {\r\n  classes: any;\r\n}\r\n\r\nconst BucketLifecyclePanel = ({ classes }: IBucketLifecyclePanelProps) => {\r\n  const loadingBucket = useSelector(selBucketDetailsLoading);\r\n  const params = useParams();\r\n\r\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\r\n  const [lifecycleRecords, setLifecycleRecords] = useState<LifeCycleItem[]>([]);\r\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\r\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\r\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\r\n    useState<LifeCycleItem | null>(null);\r\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\r\n    useState<boolean>(false);\r\n  const [selectedID, setSelectedID] = useState<string | null>(null);\r\n\r\n  const bucketName = params.bucketName || \"\";\r\n\r\n  const displayLifeCycleRules = hasPermission(bucketName, [\r\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (loadingBucket) {\r\n      setLoadingLifecycle(true);\r\n    }\r\n  }, [loadingBucket, setLoadingLifecycle]);\r\n\r\n  useEffect(() => {\r\n    if (loadingLifecycle) {\r\n      if (displayLifeCycleRules) {\r\n        api\r\n          .invoke(\"GET\", `/api/v1/buckets/${bucketName}/lifecycle`)\r\n          .then((res: any) => {\r\n            const records = get(res, \"lifecycle\", []);\r\n\r\n            setLifecycleRecords(records || []);\r\n            setLoadingLifecycle(false);\r\n          })\r\n          .catch((err: ErrorResponseHandler) => {\r\n            console.error(err);\r\n            setLifecycleRecords([]);\r\n            setLoadingLifecycle(false);\r\n          });\r\n      } else {\r\n        setLoadingLifecycle(false);\r\n      }\r\n    }\r\n  }, [\r\n    loadingLifecycle,\r\n    setLoadingLifecycle,\r\n    bucketName,\r\n    displayLifeCycleRules,\r\n  ]);\r\n\r\n  const closeEditLCAndRefresh = (refresh: boolean) => {\r\n    setEditLifecycleOpen(false);\r\n    setSelectedLifecycleRule(null);\r\n    if (refresh) {\r\n      setLoadingLifecycle(true);\r\n    }\r\n  };\r\n\r\n  const closeAddLCAndRefresh = (refresh: boolean) => {\r\n    setAddLifecycleOpen(false);\r\n    if (refresh) {\r\n      setLoadingLifecycle(true);\r\n    }\r\n  };\r\n\r\n  const closeDelLCRefresh = (refresh: boolean) => {\r\n    setDeleteLifecycleOpen(false);\r\n    setSelectedID(null);\r\n\r\n    if (refresh) {\r\n      setLoadingLifecycle(true);\r\n    }\r\n  };\r\n\r\n  const renderStorageClass = (objectST: any) => {\r\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\r\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\r\n\r\n    return stClass;\r\n  };\r\n\r\n  const lifecycleColumns = [\r\n    {\r\n      label: \"Type\",\r\n      renderFullObject: true,\r\n      renderFunction: (el: LifeCycleItem) => {\r\n        if (!el) {\r\n          return <Fragment />;\r\n        }\r\n        if (\r\n          el.expiration &&\r\n          (el.expiration.days > 0 || el.expiration.noncurrent_expiration_days)\r\n        ) {\r\n          return <span>Expiry</span>;\r\n        }\r\n        if (\r\n          el.transition &&\r\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\r\n        ) {\r\n          return <span>Transition</span>;\r\n        }\r\n        return <Fragment />;\r\n      },\r\n    },\r\n    {\r\n      label: \"Version\",\r\n      renderFullObject: true,\r\n      renderFunction: (el: LifeCycleItem) => {\r\n        if (!el) {\r\n          return <Fragment />;\r\n        }\r\n        if (el.expiration) {\r\n          if (el.expiration.days > 0) {\r\n            return <span>Current</span>;\r\n          } else if (el.expiration.noncurrent_expiration_days) {\r\n            return <span>Non-Current</span>;\r\n          }\r\n        }\r\n        if (el.transition) {\r\n          if (el.transition.days > 0) {\r\n            return <span>Current</span>;\r\n          } else if (el.transition.noncurrent_transition_days) {\r\n            return <span>Non-Current</span>;\r\n          }\r\n        }\r\n      },\r\n    },\r\n    {\r\n      label: \"Tier\",\r\n      elementKey: \"storage_class\",\r\n      renderFunction: renderStorageClass,\r\n      renderFullObject: true,\r\n    },\r\n    {\r\n      label: \"Prefix\",\r\n      elementKey: \"prefix\",\r\n    },\r\n    {\r\n      label: \"After\",\r\n      renderFullObject: true,\r\n      renderFunction: (el: LifeCycleItem) => {\r\n        if (!el) {\r\n          return <Fragment />;\r\n        }\r\n        if (el.expiration) {\r\n          if (el.expiration.days > 0) {\r\n            return <span>{el.expiration.days} days</span>;\r\n          } else if (el.expiration.noncurrent_expiration_days) {\r\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\r\n          }\r\n        }\r\n        if (el.transition) {\r\n          if (el.transition.days > 0) {\r\n            return <span>{el.transition.days} days</span>;\r\n          } else if (el.transition.noncurrent_transition_days) {\r\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\r\n          }\r\n        }\r\n      },\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      elementKey: \"status\",\r\n    },\r\n  ];\r\n\r\n  const lifecycleActions = [\r\n    {\r\n      type: \"view\",\r\n\r\n      onClick(valueToSend: any): any {\r\n        setSelectedLifecycleRule(valueToSend);\r\n        setEditLifecycleOpen(true);\r\n      },\r\n    },\r\n    {\r\n      type: \"delete\",\r\n      onClick(valueToDelete: string): any {\r\n        setSelectedID(valueToDelete);\r\n        setDeleteLifecycleOpen(true);\r\n      },\r\n      sendOnlyId: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      {editLifecycleOpen && selectedLifecycleRule && (\r\n        <EditLifecycleConfiguration\r\n          open={editLifecycleOpen}\r\n          closeModalAndRefresh={closeEditLCAndRefresh}\r\n          selectedBucket={bucketName}\r\n          lifecycleRule={selectedLifecycleRule}\r\n        />\r\n      )}\r\n      {addLifecycleOpen && (\r\n        <AddLifecycleModal\r\n          open={addLifecycleOpen}\r\n          bucketName={bucketName}\r\n          closeModalAndRefresh={closeAddLCAndRefresh}\r\n        />\r\n      )}\r\n      {deleteLifecycleOpen && selectedID && (\r\n        <DeleteBucketLifecycleRule\r\n          id={selectedID}\r\n          bucket={bucketName}\r\n          deleteOpen={deleteLifecycleOpen}\r\n          onCloseAndRefresh={closeDelLCRefresh}\r\n        />\r\n      )}\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.actionsTray}>\r\n          <PanelTitle>Lifecycle Rules</PanelTitle>\r\n          <SecureComponent\r\n            scopes={[\r\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\r\n              IAM_SCOPES.ADMIN_LIST_TIERS,\r\n            ]}\r\n            resource={bucketName}\r\n            matchAll\r\n            errorProps={{ disabled: true }}\r\n          >\r\n            <RBIconButton\r\n              tooltip={\"Add Lifecycle Rule\"}\r\n              onClick={() => {\r\n                setAddLifecycleOpen(true);\r\n              }}\r\n              text={\"Add Lifecycle Rule\"}\r\n              icon={<AddIcon />}\r\n              color=\"primary\"\r\n              variant={\"contained\"}\r\n            />\r\n          </SecureComponent>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <SecureComponent\r\n            scopes={[IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION]}\r\n            resource={bucketName}\r\n            errorProps={{ disabled: true }}\r\n          >\r\n            <TableWrapper\r\n              itemActions={lifecycleActions}\r\n              columns={lifecycleColumns}\r\n              isLoading={loadingLifecycle}\r\n              records={lifecycleRecords}\r\n              entityName=\"Lifecycle\"\r\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\r\n              idField=\"id\"\r\n              customPaperHeight={classes.twHeight}\r\n            />\r\n          </SecureComponent>\r\n        </Grid>\r\n        {!loadingLifecycle && (\r\n          <Grid item xs={12}>\r\n            <br />\r\n            <HelpBox\r\n              title={\"Lifecycle Rules\"}\r\n              iconComponent={<TiersIcon />}\r\n              help={\r\n                <Fragment>\r\n                  MinIO Object Lifecycle Management allows creating rules for\r\n                  time or date based automatic transition or expiry of objects.\r\n                  For object transition, MinIO automatically moves the object to\r\n                  a configured remote storage tier.\r\n                  <br />\r\n                  <br />\r\n                  You can learn more at our{\" \"}\r\n                  <a\r\n                    href=\"https://docs.min.io/minio/baremetal/lifecycle-management/lifecycle-management-overview.html?ref=con\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    documentation\r\n                  </a>\r\n                  .\r\n                </Fragment>\r\n              }\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(BucketLifecyclePanel);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, {\r\n  ChangeEvent,\r\n  createRef,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport get from \"lodash/get\";\r\nimport debounce from \"lodash/debounce\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport HelpIcon from \"@mui/icons-material/Help\";\r\nimport { InputLabel, Tooltip } from \"@mui/material\";\r\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\r\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\r\nimport AddIcon from \"../../../../../icons/AddIcon\";\r\n\r\ninterface IQueryMultiSelector {\r\n  elements: string;\r\n  name: string;\r\n  label: string;\r\n  tooltip?: string;\r\n  keyPlaceholder?: string;\r\n  valuePlaceholder?: string;\r\n  classes: any;\r\n  withBorder?: boolean;\r\n  onChange: (elements: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n    inputWithBorder: {\r\n      border: \"1px solid #EAEAEA\",\r\n      padding: 15,\r\n      height: 150,\r\n      overflowY: \"auto\",\r\n      position: \"relative\",\r\n      marginTop: 15,\r\n    },\r\n    lineInputBoxes: {\r\n      display: \"flex\",\r\n      marginBottom: 10,\r\n    },\r\n    queryDiv: {\r\n      alignSelf: \"center\",\r\n      margin: \"0 4px\",\r\n      fontWeight: 600,\r\n    },\r\n  });\r\n\r\nconst QueryMultiSelector = ({\r\n  elements,\r\n  name,\r\n  label,\r\n  tooltip = \"\",\r\n  keyPlaceholder = \"\",\r\n  valuePlaceholder = \"\",\r\n  onChange,\r\n  withBorder = false,\r\n  classes,\r\n}: IQueryMultiSelector) => {\r\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\r\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\r\n  const bottomList = createRef<HTMLDivElement>();\r\n\r\n  // Use effect to get the initial values from props\r\n  useEffect(() => {\r\n    if (\r\n      currentKeys.length === 1 &&\r\n      currentKeys[0] === \"\" &&\r\n      currentValues.length === 1 &&\r\n      currentValues[0] === \"\" &&\r\n      elements &&\r\n      elements !== \"\"\r\n    ) {\r\n      const elementsSplit = elements.split(\"&\");\r\n      let keys = [];\r\n      let values = [];\r\n\r\n      elementsSplit.forEach((element: string) => {\r\n        const splittedVals = element.split(\"=\");\r\n        if (splittedVals.length === 2) {\r\n          keys.push(splittedVals[0]);\r\n          values.push(splittedVals[1]);\r\n        }\r\n      });\r\n\r\n      keys.push(\"\");\r\n      values.push(\"\");\r\n\r\n      setCurrentKeys(keys);\r\n      setCurrentValues(values);\r\n    }\r\n  }, [currentKeys, currentValues, elements]);\r\n\r\n  // Use effect to send new values to onChange\r\n  useEffect(() => {\r\n    const refScroll = bottomList.current;\r\n    if (refScroll && currentKeys.length > 1) {\r\n      refScroll.scrollIntoView(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentKeys]);\r\n\r\n  // We avoid multiple re-renders / hang issue typing too fast\r\n  const firstUpdate = useRef(true);\r\n  useLayoutEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    debouncedOnChange();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentKeys, currentValues]);\r\n\r\n  // If the last input is not empty, we add a new one\r\n  const addEmptyLine = () => {\r\n    if (\r\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\r\n      currentValues[currentValues.length - 1].trim() !== \"\"\r\n    ) {\r\n      const keysList = [...currentKeys];\r\n      const valuesList = [...currentValues];\r\n\r\n      keysList.push(\"\");\r\n      valuesList.push(\"\");\r\n\r\n      setCurrentKeys(keysList);\r\n      setCurrentValues(valuesList);\r\n    }\r\n  };\r\n\r\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\r\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n\r\n    let updatedElement = [...currentKeys];\r\n    const index = get(e.target, \"dataset.index\", 0);\r\n    updatedElement[index] = e.target.value;\r\n\r\n    setCurrentKeys(updatedElement);\r\n  };\r\n\r\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n\r\n    let updatedElement = [...currentValues];\r\n    const index = get(e.target, \"dataset.index\", 0);\r\n    updatedElement[index] = e.target.value;\r\n\r\n    setCurrentValues(updatedElement);\r\n  };\r\n\r\n  // Debounce for On Change\r\n  const debouncedOnChange = debounce(() => {\r\n    let queryString = \"\";\r\n\r\n    currentKeys.forEach((keyVal, index) => {\r\n      if (currentKeys[index] && currentValues[index]) {\r\n        let insertString = `${keyVal}=${currentValues[index]}`;\r\n        if (index !== 0) {\r\n          insertString = `&${insertString}`;\r\n        }\r\n        queryString = `${queryString}${insertString}`;\r\n      }\r\n    });\r\n\r\n    onChange(queryString);\r\n  }, 500);\r\n\r\n  const inputs = currentValues.map((element, index) => {\r\n    return (\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={classes.lineInputBoxes}\r\n        key={`query-pair-${name}-${index.toString()}`}\r\n      >\r\n        <InputBoxWrapper\r\n          id={`${name}-key-${index.toString()}`}\r\n          label={\"\"}\r\n          name={`${name}-${index.toString()}`}\r\n          value={currentKeys[index]}\r\n          onChange={onChangeKey}\r\n          index={index}\r\n          placeholder={keyPlaceholder}\r\n        />\r\n        <span className={classes.queryDiv}>:</span>\r\n        <InputBoxWrapper\r\n          id={`${name}-value-${index.toString()}`}\r\n          label={\"\"}\r\n          name={`${name}-${index.toString()}`}\r\n          value={currentValues[index]}\r\n          onChange={onChangeValue}\r\n          index={index}\r\n          placeholder={valuePlaceholder}\r\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\r\n          overlayAction={() => {\r\n            addEmptyLine();\r\n          }}\r\n        />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} className={classes.fieldContainer}>\r\n        <InputLabel className={classes.inputLabel}>\r\n          <span>{label}</span>\r\n          {tooltip !== \"\" && (\r\n            <div className={classes.tooltipContainer}>\r\n              <Tooltip title={tooltip} placement=\"top-start\">\r\n                <HelpIcon className={classes.tooltip} />\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n        </InputLabel>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\r\n        >\r\n          {inputs}\r\n          <div ref={bottomList} />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default withStyles(styles)(QueryMultiSelector);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { IconButtonProps } from \"@mui/material\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n      margin: 0,\r\n      fontSize: \".9rem\",\r\n    },\r\n  });\r\n\r\ninterface IPanelTitle extends IconButtonProps {\r\n  classes: any;\r\n  children: any;\r\n}\r\n\r\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\r\n  return <h1 className={classes.root}>{children}</h1>;\r\n};\r\n\r\nexport default withStyles(styles)(PanelTitle);\r\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","dateSelector","borderBottom","formFieldRowAccordion","padding","spacingUtils","modalStyleUtils","formFieldStyles","createTenantCommon","closeModalAndRefresh","selectedBucket","lifecycleRule","open","dispatch","useAppDispatch","useState","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","useEffect","api","then","res","get","length","objList","map","tier","tierType","type","value","label","catch","err","valid","status","transitionMode","transition","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","storage_class","noncurrent_storage_class","delete_marker","tgs","reduce","stringLab","currItem","index","key","ModalWrapper","onClose","modalOpen","titleIcon","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","expiry","parseInt","lifecycleUpdate","disable","expired_object_delete_marker","id","setModalErrorSnackMessage","saveRecord","Grid","formScrollable","spacing","InputBoxWrapper","name","onChange","disabled","FormSwitchWrapper","indicatorLabels","checked","target","RadioGroupSelector","currentSelection","selectorOptions","disableOptions","min","Fragment","SelectWrapper","options","placeholder","Accordion","AccordionSummary","Typography","AccordionDetails","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","modalButtonBar","Button","variant","color","onClick","LinearProgress","formFieldRowFilter","bucketName","distributedSetup","useSelector","selDistSet","isVersioned","setIsVersioned","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","is_versioned","loadingBox","lifecycleInsert","addRecord","validity","pattern","overlayObject","InputUnitMenu","unitSelected","unitsList","description","modalBasic","onCloseAndRefresh","deleteOpen","bucket","deletingRule","setDeletingRule","setErrorSnackMessage","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","confirmationContent","DialogContentText","searchField","actionsTray","twHeight","minHeight","loadingBucket","selBucketDetailsLoading","params","useParams","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","displayLifeCycleRules","hasPermission","IAM_SCOPES","records","console","error","lifecycleColumns","renderFullObject","renderFunction","el","elementKey","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","refresh","PanelTitle","SecureComponent","scopes","resource","matchAll","errorProps","RBIconButton","tooltip","text","icon","TableWrapper","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","href","rel","fieldBasic","tooltipHelper","inputWithBorder","overflowY","position","marginTop","lineInputBoxes","queryDiv","alignSelf","margin","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","overlayIcon","overlayAction","trim","keysList","valuesList","addEmptyLine","fieldContainer","inputLabel","tooltipContainer","placement","ref","deleteDialogStyles","content","customDialogSize","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","modalSnackMessage","state","system","modalSnackBar","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","reason","titleText","closeContainer","closeButton","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration"],"sourceRoot":""}
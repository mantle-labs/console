{"version":3,"file":"static/js/3549.d791ab6b.chunk.js","mappings":"mWA0BMA,EAAc,SAAC,GAMd,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,YAKA,OACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACT,cAAe,CACbC,YAAa,OACbC,OAAQ,OACRC,MAAO,OACPC,aAAc,SAPpB,UAWGR,EAAM,KACP,gBAAKS,MAAO,CAAEC,SAAU,OAAQC,UAAW,SAAUC,MAAO,WAA5D,SACGX,MAIR,EAiFD,EAhFiC,WAC/B,IAAQY,GAAMC,EAAAA,EAAAA,KAAND,EACR,OACE,UAACX,EAAA,EAAD,CACEC,GAAI,CACFY,KAAM,EACNC,OAAQ,oBACRC,aAAc,MACdb,QAAS,OACTc,SAAU,SACVC,QAAS,OACTC,UAAW,CACTC,GAAI,QATV,WAaE,UAACnB,EAAA,EAAD,CACEC,GAAI,CACFO,SAAU,OACVY,WAAY,IACZlB,QAAS,OACTmB,WAAY,SACZf,aAAc,OACdgB,cAAe,OAEf,cAAe,CACblB,OAAQ,OACRC,MAAO,OACPF,YAAa,SAZnB,WAgBE,SAAC,MAAD,KACA,yBAAMQ,EAAE,qCAEV,UAACX,EAAA,EAAD,CAAKC,GAAI,CAAEO,SAAU,OAAQF,aAAc,QAA3C,WACE,UAACN,EAAA,EAAD,CAAKC,GAAI,CAAEqB,cAAe,QAA1B,WACE,SAACzB,EAAD,CACEC,MAAM,SAAC,MAAD,IACNC,YAAaY,EAAE,6BAEjB,SAACX,EAAA,EAAD,CAAKC,GAAI,CAAEsB,WAAY,QAAvB,SACCZ,EAAE,gCAGL,UAACX,EAAA,EAAD,CAAKC,GAAI,CAAEqB,cAAe,QAA1B,WACE,SAACzB,EAAD,CACEC,MAAM,SAAC,MAAD,IACNC,YAAaY,EAAE,gCAEjB,SAACX,EAAA,EAAD,CAAKC,GAAI,CAAEsB,WAAY,QAAvB,SACGZ,EAAE,mDAEL,SAACX,EAAA,EAAD,CAAKC,GAAI,CAAEsB,WAAY,QAAvB,SACCZ,EAAE,8CAGL,UAACX,EAAA,EAAD,CAAKC,GAAI,CAAEqB,cAAe,QAA1B,WACE,SAACzB,EAAD,CACEC,MAAM,SAAC,MAAD,IACNC,YAAaY,EAAE,6BAEf,SAACX,EAAA,EAAD,CAAKC,GAAI,CAAEsB,WAAY,QAAvB,SACGZ,EAAE,uCAEP,SAACX,EAAA,EAAD,CAAKC,GAAI,CAAEsB,WAAY,QAAvB,SACGZ,EAAE,0CAIT,SAACX,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTc,SAAU,cAKnB,E,wHCqLD,GAAeQ,EAAAA,EAAAA,IA5PA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,gBACXC,gBAAiB,CACfzB,QAAS,OACT0B,SAAU,EACVP,WAAY,SACZQ,OAAQ,OACRC,eAAgB,SAChB,QAAS,CACPzB,MAAO,IACP,4BAA6B,CAC3BW,SAAU,aAIbe,EAAAA,IACAC,EAAAA,IAhBQ,GA4Pf,EAzO0B,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QACrBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACT1B,GAAMC,EAAAA,EAAAA,KAAND,EAER,GAAoC2B,EAAAA,EAAAA,WAAkB,GAAtD,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAiBG,EAAAA,EAAAA,IAAgB,KAAnE,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCL,EAAAA,EAAAA,WAAiBG,EAAAA,EAAAA,IAAgB,KAAnE,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GACEP,EAAAA,EAAAA,WAAkB,GADpB,eAAOQ,EAAP,KAA6BC,EAA7B,KAEA,GACET,EAAAA,EAAAA,UAAmC,MADrC,eAAOU,EAAP,KAA0BC,EAA1B,KAEA,GAAwCX,EAAAA,EAAAA,WAAkB,GAA1D,eAAOY,EAAP,KAAqBC,GAArB,KACA,IAAoCb,EAAAA,EAAAA,UAAiB,IAArD,iBAAOc,GAAP,MAAmBC,GAAnB,OAEAC,EAAAA,EAAAA,YAAU,WACJf,GACFgB,EAAAA,EAAAA,OACU,OADV,sCACyD,CACrDC,OAAQJ,GACRV,UAAWA,EACXE,UAAWA,IAEZa,MAAK,SAACC,GACLlB,GAAc,GACdS,EAAqB,CACnBP,UAAWgB,EAAIhB,WAAa,GAC5BE,UAAWc,EAAId,WAAa,GAC5Be,IAAKD,EAAIC,KAAO,IAEnB,IAEAC,OAAM,SAACC,GACNrB,GAAc,GACdN,GAAS4B,EAAAA,EAAAA,IAAqBD,GAC/B,GAEN,GAAE,CAACtB,EAAYC,EAAeN,EAAUkB,GAAYV,EAAWE,KAEhEU,EAAAA,EAAAA,YAAU,WACJR,GACFS,EAAAA,EAAAA,OAAW,MAAX,uBAAyCE,MAAK,SAACC,GAC7CL,GAAcU,KAAKC,UAAUD,KAAKE,MAAMP,GAAM,KAAM,GACrD,GAEJ,GAAE,CAACZ,IAoBJ,OACE,UAAC,EAAAoB,SAAD,WACyB,OAAtBlB,IACC,SAACmB,EAAA,QAAD,CACEnB,kBAAmBA,EACnBoB,KAA4B,OAAtBpB,EACNqB,WAAY,WAVlBpB,EAAqB,MACrBb,EAAS,GAAD,OAAIkC,EAAAA,GAAAA,SAWL,EACDC,OAAO,qBAGX,UAACC,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAf,WACE,SAACuD,EAAA,EAAD,CACEC,OAAO,SAACC,EAAA,EAAD,CAAUC,GAAIP,EAAAA,GAAAA,QAAmBK,MAAOhE,EAAE,yBAEnD,SAACmE,EAAA,EAAD,WACE,UAAC9E,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTe,QAAS,OACT8D,IAAK,OACLC,oBAAqB,CACnBC,GAAI,YACJ9D,GAAI,OAENL,OAAQ,qBATZ,WAYE,UAACd,EAAA,EAAD,YACE,SAACkF,EAAA,EAAD,CAAcpF,MAAM,SAAC,MAAD,IAApB,SACGa,EAAE,6BAGL,iBACEwE,YAAU,EACVC,aAAa,MACbC,SAAU,SAACC,IAvDC,SAACA,GACzBA,EAAEC,iBACF/C,GAAc,EACf,CAqDegD,CAAkBF,EACnB,EALH,UAOE,UAACd,EAAA,GAAD,CAAMiB,WAAS,EAAChB,MAAI,EAACiB,QAAQ,KAAKzF,GAAI,CAAEiB,UAAW,GAAnD,WACE,SAACsD,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAf,UACE,SAACqD,EAAA,GAAD,CAAMiB,WAAS,EAAChB,MAAI,EAACiB,QAAQ,KAA7B,UACE,SAAClB,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAf,UACE,UAACqD,EAAA,GAAD,CAAMiB,WAAS,EAAf,WACE,SAACjB,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,EAAf,UACE,SAAC,MAAD,OAEF,SAACqD,EAAA,GAAD,CAAMC,MAAI,EAAV,UACE,UAACD,EAAA,GAAD,CAAMiB,WAAS,EAAChB,MAAI,EAACiB,QAAQ,KAA7B,WACE,UAAClB,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAf,UACG,KACD,gBAAKwE,UAAW1D,EAAQ2D,cAAxB,UACE,SAACC,EAAA,EAAD,CACEC,MAAOpD,EACPiC,MAAOhE,EAAE,cACToF,GAAI,YACJC,KAAM,YACNC,YAAatF,EAAE,oBACfuF,SAAU,SAACZ,GACT3C,EAAa2C,EAAEa,OAAOL,MACvB,UAIP,SAACtB,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAf,UACE,gBAAKwE,UAAW1D,EAAQ2D,cAAxB,UACE,SAACC,EAAA,EAAD,CACEC,MAAOlD,EACP+B,MAAOhE,EAAE,cACToF,GAAI,YACJC,KAAM,YACNI,KAAMlD,EAAe,OAAS,WAC9B+C,YAAatF,EAAE,oBACfuF,SAAU,SAACZ,GACTzC,EAAayC,EAAEa,OAAOL,MACvB,EACDO,YACEnD,GACE,SAACoD,EAAA,EAAD,KAEA,SAACC,EAAA,EAAD,IAGJC,cAAe,kBACbrD,IAAiBD,EADJ,uBAYjC,UAACsB,EAAA,GAAD,CAAMiB,WAAS,EAAChB,MAAI,EAACiB,QAAQ,KAA7B,WACE,SAAClB,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAf,UACE,UAACqD,EAAA,GAAD,CAAMiB,WAAS,EAAf,WACE,SAACjB,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,EAAf,UACE,SAAC,MAAD,OAEF,SAACqD,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAf,UACE,SAACsF,EAAA,EAAD,CACEX,MAAM,uBACNC,GAAG,uBACHC,KAAK,uBACLU,QAAS5D,EACToD,SAAU,SACRS,GAEA5D,EAAwB4D,EAAMR,OAAOO,QACtC,EACD/B,MAAOhE,EAAE,+BACTiG,QAASjG,EAAE,gDAKlBmC,IACC,UAAC0B,EAAA,GAAD,CACEC,MAAI,EACJtD,GAAI,GACJwE,UAAW1D,EAAQ4E,oBAHrB,WAKE,0BACE,SAACC,EAAA,EAAD,UACCnG,EAAE,4BAGL,SAAC6D,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAIwE,UAAW1D,EAAQ8E,eAAtC,UACE,SAACC,EAAA,EAAD,CACElB,MAAO1C,GACP6D,eAAgB,SAACC,EAAQC,EAAMrB,GAC7BzC,GAAcyC,EACf,EACDsB,aAAc,mBAMxB,UAAC5C,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAIwE,UAAW1D,EAAQoF,eAAtC,WACE,SAACC,EAAA,EAAD,CACElB,KAAK,SACLmB,QAAQ,WACR7G,MAAM,UACN8G,QAjKF,WAChBnE,GAAc,IACdJ,EAAqB,MACrBN,EAAa,IACbE,EAAa,IACbM,IAAgB,EACjB,EAuJiB,SAMGxC,EAAE,YAGL,SAAC2G,EAAA,EAAD,CAAQlB,KAAK,SAASmB,QAAQ,YAAY7G,MAAM,UAAhD,SACGC,EAAE,wBAMb,SAAC,EAAD,cAMX,G,oPCtND,GAAea,EAAAA,EAAAA,IArEA,SAACC,GAAD,OACbC,EAAAA,EAAAA,GAAa,CACX+D,UAAW,CACTvF,QAAS,OACTc,SAAU,SACVC,QAAS,gBAEXwG,cAAe,CACb,wBAAyB,CACvBpH,MAAO,OACPqH,WAAY,UACZ,wBAAyB,CACvBtH,OAAQ,SAEV,mCAAoC,CAClCD,YAAa,QACb,wBAAyB,CACvBC,OAAQ,UAId,kCAAmC,CACjCC,MAAO,QACPD,OAAQ,UAGZuH,YAAW,kBACNC,EAAAA,GAAAA,YADK,IAERpH,SAAU,WA5BD,GAqEf,EArCuB,SAAC,GAQjB,IAAD,IAPJmE,MAAAA,OAOI,MAPI,GAOJ,MANJmB,MAAAA,OAMI,MANI,GAMJ,MALJ7D,QAAAA,OAKI,MALM,CAAC,EAKP,EACJ,OACE,iBAAK0D,UAAW1D,EAAQwD,UAAxB,WACE,iBAAKE,UAAW1D,EAAQ0F,WAAxB,UAAqChD,EAArC,QACA,gBAAKgB,UAAW1D,EAAQwF,cAAxB,UACE,SAACI,EAAA,EAAD,CACE/B,MAAOA,EACPgC,UAAQ,EACRC,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,CAAiBC,KAAMpC,EAAvB,UACE,SAACqC,EAAA,EAAD,CACE,aAAW,OACXvB,QAAS,OACTY,QAAS,WAAQ,EACjBY,YAAa,WAAQ,EACrBC,KAAK,MALP,UAOE,SAAC,MAAD,gBASjB,I,iCClBKC,EAAW,SAACC,EAAkBL,GAClC,IAAIM,EAAUC,SAASC,cAAc,KACrCF,EAAQG,aAAa,OAAQ,iCAAmCT,GAChEM,EAAQG,aAAa,WAAYJ,GAEjCC,EAAQjI,MAAML,QAAU,OACxBuI,SAASG,KAAKC,YAAYL,GAE1BA,EAAQM,QACRL,SAASG,KAAKG,YAAYP,EAC3B,EAyLD,GAAehH,EAAAA,EAAAA,IA/OA,SAACC,GAAD,OACbC,EAAAA,EAAAA,GAAa,CACXsH,aAAc,CACZtI,MAAO,MACPF,SAAU,SACVqB,OAAQ,kBACR3B,QAAS,OACTmB,WAAY,SACZ,SAAU,CACRlB,YAAa,QACbC,OAAQ,GACRC,MAAO,KAGX4I,gBAAiB,CACfhI,QAAS,cACTG,WAAY,IACZZ,SAAU,SAEZ0I,gBAAiB,CACfC,UAAW,QACXjI,UAAW,QAEbkI,iBAAkB,CAChBC,UAAW,OACXC,UAAW,KAEbC,YAAa,CACXrJ,QAAS,OACTmB,WAAY,UAEdmI,aAAc,CACZrJ,YAAa,UAhCJ,GA+Of,EAvL0B,SAAC,GAMK,IAL9B8B,EAK6B,EAL7BA,QACAe,EAI6B,EAJ7BA,kBACAoB,EAG6B,EAH7BA,KACAC,EAE6B,EAF7BA,WACAE,EAC6B,EAD7BA,OAEQ5D,GAAMC,EAAAA,EAAAA,KAAND,EAER,IAAKqC,EACH,OAAO,KAET,IAAMyG,EAAeC,IAAI1G,EAAmB,UAAW,MACjD2G,EAAMD,IAAI1G,EAAmB,OAAO,GAE1C,OACE,SAAC4G,EAAA,EAAD,CACEC,UAAWzF,EACX0F,QAAS,WACPzF,GACD,EACD0F,OACE,gBAAKpE,UAAW1D,EAAQsH,YAAxB,UACE,2BAAM5I,EAAE,OAAR,IAAiB4D,EAAjB,IAA0B5D,EAAE,gBAGhCqJ,WAAW,SAAC,MAAD,IAVb,UAYE,UAACxF,EAAA,GAAD,CAAMiB,WAAS,EAAf,WACE,UAACjB,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAIwE,UAAW1D,EAAQ8E,eAAtC,UACGpG,EAAE,SADL,IACgB4D,EADhB,IACyB5D,EAAE,qBAD3B,KAEIgJ,GAAOF,IACP,SAAC,WAAD,WACE,UAACjF,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAIwE,UAAW1D,EAAQmH,iBAAtC,WACE,gBAAKzD,UAAW1D,EAAQgH,gBAAxB,SACEtI,EAAE,yBAEHsJ,MAAMC,QAAQT,IACbA,EAAaU,KAAI,SAACC,EAAiBC,GACjC,OACE,iCACE,SAAC,EAAD,CACE1F,MAAOhE,EAAE,aACTmF,MAAOsE,EAAgB1H,aAEzB,SAAC,EAAD,CACEiC,MAAOhE,EAAE,cACTmF,MAAOsE,EAAgBxH,cAI9B,KACDqH,MAAMC,QAAQT,KACd,iCACE,SAAC,EAAD,CACE9E,MAAOhE,EAAE,aACTmF,MAAO2D,EAAa/G,aAEtB,SAAC,EAAD,CACEiC,MAAOhE,EAAE,cACTmF,MAAO2D,EAAa7G,qBAOb,OAAjB6G,QAA0Ca,IAAjBb,KACzB,iCACE,SAAC,EAAD,CACE9E,MAAOhE,EAAE,aACTmF,MAAO9C,EAAkBN,WAAa,MAExC,SAAC,EAAD,CACEiC,MAAOhE,EAAE,cACTmF,MAAO9C,EAAkBJ,WAAa,QAI3C+G,GACC,gBAAKhE,UAAW1D,EAAQ+G,aAAxB,SACGrI,EAAE,gDAGL,iBAAKgF,UAAW1D,EAAQ+G,aAAxB,WACE,SAACuB,EAAA,EAAD,KACA,0BACG5J,EAAE,iDAKX,SAAC6D,EAAA,GAAD,CAAMC,MAAI,EAACtD,GAAI,GAAIwE,UAAW1D,EAAQiH,gBAAtC,UACIS,IACA,iCACE,SAACa,EAAA,EAAD,CACEzE,GAAI,kBACJa,QAASjG,EAAE,qCACXuH,KAAMvH,EAAE,uBACRgF,UAAW1D,EAAQuH,aACnBhC,QAAS,WACP,IAAIiD,EAAgB,CAAC,EAEjBhB,EAmBAgB,EAlBGR,MAAMC,QAAQT,GASFA,EAAaU,KAAI,SAACO,GAC/B,MAAO,CACL/G,IAAK+G,EAAQ/G,IACbjB,UAAWgI,EAAQhI,UACnBE,UAAW8H,EAAQ9H,UACnBW,IAAK,OACLoH,KAAM,OAET,IACsB,GAjBP,CACdhH,IAAK8F,EAAa9F,IAClBjB,UAAW+G,EAAa/G,UACxBE,UAAW6G,EAAa7G,UACxBW,IAAK,OACLoH,KAAM,QAeVF,EAAgB,CACd9G,IAAKX,EAAkBW,IACvBjB,UAAWM,EAAkBN,UAC7BE,UAAWI,EAAkBJ,UAC7BW,IAAK,OACLoH,KAAM,QAIVrC,EACE,mBACAvE,KAAKC,WAAL,UACKyG,IAGR,EACD3K,MAAM,SAAC,MAAD,IACNyH,QAAQ,YACR7G,MAAM,YAGPuJ,MAAMC,QAAQT,IAAiBA,EAAamB,OAAS,IACpD,SAACJ,EAAA,EAAD,CACEzE,GAAI,sBACJa,QAASjG,EAAE,2CACXuH,KAAMvH,EAAE,uBACRgF,UAAW1D,EAAQuH,aACnBhC,QAAS,WACP,IAAIqD,EAAiB,CAAC,EAClBpB,IAOFoB,EANepB,EAAaU,KAAI,SAACO,GAC/B,MAAO,CACLhI,UAAWgI,EAAQhI,UACnBE,UAAW8H,EAAQ9H,UAEtB,KAGH0F,EACE,uBACAvE,KAAKC,WAAL,UACK6G,IAGR,EACD/K,MAAM,SAAC,MAAD,IACNyH,QAAQ,YACR7G,MAAM,qBASvB,G,yMC9HD,KAAec,EAAAA,EAAAA,IArGA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,UACRkG,EAAAA,IAFQ,GAqGf,EAhG0B,SAAC,GASN,IARnB9B,EAQkB,EARlBA,MAQkB,IAPlBnB,MAAAA,OAOkB,MAPV,GAOU,MANlBiC,QAAAA,OAMkB,MANR,GAMQ,MALlBkE,KAAAA,OAKkB,MALX,OAKW,EAJlB7I,EAIkB,EAJlBA,QACAgF,EAGkB,EAHlBA,eAGkB,KAFlBa,SAEkB,EADlBV,cAAAA,OACkB,MADH,QACG,EAClB,OACE,UAAC,WAAD,YACE,SAAC,KAAD,CAAM3C,MAAI,EAACtD,GAAI,GAAIlB,GAAI,CAAEK,aAAc,QAAvC,UACE,UAAC,IAAD,CAAYqF,UAAW1D,EAAQ0F,WAA/B,WACE,0BAAOhD,IACM,KAAZiC,IACC,gBAAKjB,UAAW1D,EAAQ8I,iBAAxB,UACE,SAAC,IAAD,CAAShB,MAAOnD,EAASoE,UAAU,YAAnC,UACE,gBAAKrF,UAAW1D,EAAQ2E,QAAxB,UACE,SAAC,IAAD,gBAQZ,SAAC,KAAD,CACEnC,MAAI,EACJtD,GAAI,GACJZ,MAAO,CACL+I,UAAWlC,EACX6D,SAAU,OACVnK,OAAQ,qBANZ,UASE,SAAC,IAAD,CACEgF,MAAOA,EACPoF,SAAUJ,EACV5E,SAAU,SAACiF,GACTlE,EAAe,KAAM,KAAMkE,EAAIhF,OAAOL,MACvC,EACDC,GAAI,eACJ9E,QAAS,GACTV,MAAO,CACLC,SAAU,GACV4K,gBAAiB,UACjBC,WACE,+EACFC,UAAWlE,GAAgB,UAC3B1G,MAAO,gBAIb,SAAC,KAAD,CACE+D,MAAI,EACJtD,GAAI,GACJlB,GAAI,CACFyH,WAAY,UACZ5G,OAAQ,oBACRyK,UAAW,GANf,UASE,SAAC,IAAD,CACEtL,GAAI,CACFC,QAAS,OACTmB,WAAY,SACZJ,QAAS,MACTuK,aAAc,MACd1J,eAAgB,WAChB,WAAY,CACV1B,OAAQ,OACRC,MAAO,OACPY,QAAS,MACT,aAAc,CACZwK,WAAY,OAZpB,UAiBE,SAAC,IAAD,CAAiBvD,KAAMpC,EAAvB,UACE,SAAC,IAAD,CACEc,QAAS,oBACTY,QAAS,WAAQ,EACjBU,KAAM,GACNpI,MAAM,SAAC,MAAD,IACNY,MAAO,UACP6G,QAAS,qBAOtB,G,qNCiCD,KAAe/F,EAAAA,EAAAA,IAlIA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,kBACRgK,EAAAA,IADO,IAEVC,QAAS,CACP1K,QAAS,GACTK,cAAe,GAEjBsK,iBAAkB,CAChBvL,MAAO,OACPwL,SAAU,MAETC,EAAAA,IAXQ,GAkIf,EApHqB,SAAC,GASF,IARlBhC,EAQiB,EARjBA,QACAD,EAOiB,EAPjBA,UACAE,EAMiB,EANjBA,MACAgC,EAKiB,EALjBA,SACA9J,EAIiB,EAJjBA,QAIiB,IAHjB+J,UAAAA,OAGiB,SAFjBC,EAEiB,EAFjBA,iBAEiB,IADjBjC,UAAAA,OACiB,MADL,KACK,EACX9H,GAAWC,EAAAA,EAAAA,MACjB,GAAwCG,EAAAA,EAAAA,WAAkB,GAA1D,eAAO4J,EAAP,KAAqBC,EAArB,KAEMC,GAAoBC,EAAAA,EAAAA,KACxB,SAACC,GAAD,OAAqBA,EAAMC,OAAOC,aAAlC,KAGFlJ,EAAAA,EAAAA,YAAU,WACRpB,GAASuK,EAAAA,EAAAA,IAAqB,IAC/B,GAAE,CAACvK,KAEJoB,EAAAA,EAAAA,YAAU,WACR,GAAI8I,EAAmB,CACrB,GAAkC,KAA9BA,EAAkBM,QAEpB,YADAP,GAAgB,GAIa,UAA3BC,EAAkBhG,MACpB+F,GAAgB,EAEnB,CACF,GAAE,CAACC,IAEJ,IAKMO,EAAaX,EACf,CACE/J,QAAS,CACP2K,MAAO3K,EAAQ2J,mBAGnB,CAAEC,SAAU,KAAegB,WAAW,GAEtCH,EAAU,GAYd,OAVIN,IACFM,EAAUN,EAAkBU,kBAEa,KAAvCV,EAAkBU,kBAClBV,EAAkBU,iBAAiBlC,OAAS,KAE5C8B,EAAUN,EAAkBM,WAK9B,UAAC,KAAD,gBACEtI,KAAMyF,EACN5H,QAASA,GACL0K,GAHN,IAIEI,OAAQ,QACRjD,QAAS,SAACnD,EAAOqG,GACA,kBAAXA,GACFlD,GAEH,EACDnE,UAAW1D,EAAQgL,KAVrB,WAYE,UAAC,IAAD,CAAatH,UAAW1D,EAAQ8H,MAAhC,WACE,iBAAKpE,UAAW1D,EAAQiL,UAAxB,UACGlD,EADH,IACeD,MAEf,gBAAKpE,UAAW1D,EAAQkL,eAAxB,UACE,SAAC,IAAD,CACE,aAAW,QACXpH,GAAI,QACJJ,UAAW1D,EAAQmL,YACnB5F,QAASsC,EACTuD,eAAa,EACbC,KAAK,QANP,UAQE,SAAC,IAAD,YAKN,SAAC,IAAD,CAAWC,SAAS,KACpB,SAAC,IAAD,CACEnJ,KAAM8H,EACNvG,UAAW1D,EAAQuL,cACnB1D,QAAS,WA3DbqC,GAAgB,GAChBjK,GAASuK,EAAAA,EAAAA,IAAqB,IA4DzB,EACDC,QAASA,EACTe,aAAc,CACZ9H,UAAU,GAAD,OAAK1D,EAAQyL,SAAb,YACPtB,GAAgD,UAA3BA,EAAkBhG,KACnCnE,EAAQ0L,cACR,KAGRC,iBACExB,GAAgD,UAA3BA,EAAkBhG,KAAmB,IAAQ,OAGtE,SAAC,IAAD,CAAeT,UAAWsG,EAAmB,GAAKhK,EAAQ0J,QAA1D,SACGI,OAIR,G,sECnID,KAAevK,EAAAA,EAAAA,IAlBA,SAACC,GAAD,OACbC,EAAAA,EAAAA,GAAa,CACXuL,KAAM,CACJhM,QAAS,EACTY,OAAQ,EACRrB,SAAU,UALD,GAkBf,EAJmB,SAAC,GAAwC,IAAtCyB,EAAqC,EAArCA,QAAS8J,EAA4B,EAA5BA,SAC7B,OAAO,eAAIpG,UAAW1D,EAAQgL,KAAvB,SAA8BlB,GACtC,G,2BCpCG8B,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,sNACD,gBAEJN,EAAQ,EAAUG,C,4BCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,8fACD,iBAEJN,EAAQ,EAAUG,C","sources":["screens/Console/Account/AddServiceAccountHelpBox.tsx","screens/Console/Account/AddServiceAccountScreen.tsx","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport {\r\n  HelpIconFilled,\r\n  IAMPoliciesIcon,\r\n  PasswordKeyIcon,\r\n  ServiceAccountIcon,\r\n} from \"../../../icons\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst FeatureItem = ({\r\n  icon,\r\n  description,\r\n}: {\r\n  icon: any;\r\n  description: string;\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        \"& .min-icon\": {\r\n          marginRight: \"10px\",\r\n          height: \"23px\",\r\n          width: \"23px\",\r\n          marginBottom: \"10px\",\r\n        },\r\n      }}\r\n    >\r\n      {icon}{\" \"}\r\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\r\n        {description}\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nconst AddServiceAccountHelpBox = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        border: \"1px solid #eaeaea\",\r\n        borderRadius: \"2px\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        padding: \"20px\",\r\n        marginTop: {\r\n          xs: \"0px\",\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          fontSize: \"16px\",\r\n          fontWeight: 600,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          marginBottom: \"16px\",\r\n          paddingBottom: \"20px\",\r\n\r\n          \"& .min-icon\": {\r\n            height: \"21px\",\r\n            width: \"21px\",\r\n            marginRight: \"15px\",\r\n          },\r\n        }}\r\n      >\r\n        <HelpIconFilled />\r\n        <div>{t(\"service_accounts_help_intro\")}</div>\r\n      </Box>\r\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\r\n        <Box sx={{ paddingBottom: \"20px\" }}>\r\n          <FeatureItem\r\n            icon={<ServiceAccountIcon />}\r\n            description={t(\"create_service_account\")}\r\n          />\r\n          <Box sx={{ paddingTop: \"20px\" }}>\r\n          {t(\"service_accounts_info2\")}\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ paddingBottom: \"20px\" }}>\r\n          <FeatureItem\r\n            icon={<PasswordKeyIcon />}\r\n            description={t(\"assign_custom_credentials\")}\r\n          />\r\n          <Box sx={{ paddingTop: \"10px\" }}>\r\n            {t(\"randomized_acces_credentials_are_recommended\")}\r\n          </Box>\r\n          <Box sx={{ paddingTop: \"10px\" }}>\r\n          {t(\"service_accounts_programmatic_access\")}\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ paddingBottom: \"20px\" }}>\r\n          <FeatureItem\r\n            icon={<IAMPoliciesIcon />}\r\n            description={t(\"assign_access_policies\")}\r\n          />\r\n            <Box sx={{ paddingTop: \"10px\" }}>\r\n              {t(\"specify_optional_json_IAM_policy\")}\r\n          </Box>\r\n          <Box sx={{ paddingTop: \"10px\" }}>\r\n            {t('cannot_modify_option_json_IAM')}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexFlow: \"column\",\r\n        }}\r\n      ></Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddServiceAccountHelpBox;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  formFieldStyles,\r\n  modalStyleUtils,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport {\r\n  IAMPoliciesIcon,\r\n  PasswordKeyIcon,\r\n  ServiceAccountCredentialsIcon,\r\n} from \"../../../icons\";\r\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\r\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\r\nimport PageLayout from \"../Common/Layout/PageLayout\";\r\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport AddServiceAccountHelpBox from \"./AddServiceAccountHelpBox\";\r\nimport BackLink from \"../../../common/BackLink\";\r\nimport { NewServiceAccount } from \"../Common/CredentialsPrompt/types\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\r\nimport { ErrorResponseHandler } from \"../../../../src/common/types\";\r\nimport api from \"../../../../src/common/api\";\r\nimport CredentialsPrompt from \"../Common/CredentialsPrompt/CredentialsPrompt\";\r\n\r\nimport SectionTitle from \"../Common/SectionTitle\";\r\nimport { getRandomString } from \"../../../screens/Console/Tenants/utils\";\r\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\r\n\r\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../store\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface IAddServiceAccountProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    bottomContainer: {\r\n      display: \"flex\",\r\n      flexGrow: 1,\r\n      alignItems: \"center\",\r\n      margin: \"auto\",\r\n      justifyContent: \"center\",\r\n      \"& div\": {\r\n        width: 150,\r\n        \"@media (max-width: 900px)\": {\r\n          flexFlow: \"column\",\r\n        },\r\n      },\r\n    },\r\n    ...formFieldStyles,\r\n    ...modalStyleUtils,\r\n  });\r\n\r\nconst AddServiceAccount = ({ classes }: IAddServiceAccountProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const [addSending, setAddSending] = useState<boolean>(false);\r\n  const [accessKey, setAccessKey] = useState<string>(getRandomString(16));\r\n  const [secretKey, setSecretKey] = useState<string>(getRandomString(32));\r\n  const [isRestrictedByPolicy, setIsRestrictedByPolicy] =\r\n    useState<boolean>(false);\r\n  const [newServiceAccount, setNewServiceAccount] =\r\n    useState<NewServiceAccount | null>(null);\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n  const [policyJSON, setPolicyJSON] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (addSending) {\r\n      api\r\n        .invoke(\"POST\", `/api/v1/service-account-credentials`, {\r\n          policy: policyJSON,\r\n          accessKey: accessKey,\r\n          secretKey: secretKey,\r\n        })\r\n        .then((res) => {\r\n          setAddSending(false);\r\n          setNewServiceAccount({\r\n            accessKey: res.accessKey || \"\",\r\n            secretKey: res.secretKey || \"\",\r\n            url: res.url || \"\",\r\n          });\r\n        })\r\n\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setAddSending(false);\r\n          dispatch(setErrorSnackMessage(err));\r\n        });\r\n    }\r\n  }, [addSending, setAddSending, dispatch, policyJSON, accessKey, secretKey]);\r\n\r\n  useEffect(() => {\r\n    if (isRestrictedByPolicy) {\r\n      api.invoke(\"GET\", `/api/v1/user/policy`).then((res: string) => {\r\n        setPolicyJSON(JSON.stringify(JSON.parse(res), null, 4));\r\n      });\r\n    }\r\n  }, [isRestrictedByPolicy]);\r\n\r\n  const addServiceAccount = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setAddSending(true);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setPolicyJSON(\"\");\r\n    setNewServiceAccount(null);\r\n    setAccessKey(\"\");\r\n    setSecretKey(\"\");\r\n    setShowPassword(false);\r\n  };\r\n\r\n  const closeCredentialsModal = () => {\r\n    setNewServiceAccount(null);\r\n    navigate(`${IAM_PAGES.ACCOUNT}`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {newServiceAccount !== null && (\r\n        <CredentialsPrompt\r\n          newServiceAccount={newServiceAccount}\r\n          open={newServiceAccount !== null}\r\n          closeModal={() => {\r\n            closeCredentialsModal();\r\n          }}\r\n          entity=\"Service Account\"\r\n        />\r\n      )}\r\n      <Grid item xs={12}>\r\n        <PageHeader\r\n          label={<BackLink to={IAM_PAGES.ACCOUNT} label={t(\"service_accounts\")} />}\r\n        />\r\n        <PageLayout>\r\n          <Box\r\n            sx={{\r\n              display: \"grid\",\r\n              padding: \"25px\",\r\n              gap: \"25px\",\r\n              gridTemplateColumns: {\r\n                md: \"2fr 1.2fr\",\r\n                xs: \"1fr\",\r\n              },\r\n              border: \"1px solid #eaeaea\",\r\n            }}\r\n          >\r\n            <Box>\r\n              <SectionTitle icon={<ServiceAccountCredentialsIcon />}>\r\n                {t(\"create_service_account\")}\r\n              </SectionTitle>\r\n\r\n              <form\r\n                noValidate\r\n                autoComplete=\"off\"\r\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\r\n                  addServiceAccount(e);\r\n                }}\r\n              >\r\n                <Grid container item spacing=\"20\" sx={{ marginTop: 1 }}>\r\n                  <Grid item xs={12}>\r\n                    <Grid container item spacing=\"20\">\r\n                      <Grid item xs={12}>\r\n                        <Grid container>\r\n                          <Grid item xs={1}>\r\n                            <PasswordKeyIcon />\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Grid container item spacing=\"20\">\r\n                              <Grid item xs={12}>\r\n                                {\" \"}\r\n                                <div className={classes.stackedInputs}>\r\n                                  <InputBoxWrapper\r\n                                    value={accessKey}\r\n                                    label={t(\"access_key\")}\r\n                                    id={\"accessKey\"}\r\n                                    name={\"accessKey\"}\r\n                                    placeholder={t(\"enter_access_key\")}\r\n                                    onChange={(e) => {\r\n                                      setAccessKey(e.target.value);\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <div className={classes.stackedInputs}>\r\n                                  <InputBoxWrapper\r\n                                    value={secretKey}\r\n                                    label={t(\"secret_key\")}\r\n                                    id={\"secretKey\"}\r\n                                    name={\"secretKey\"}\r\n                                    type={showPassword ? \"text\" : \"password\"}\r\n                                    placeholder={t(\"enter_secret_key\")}\r\n                                    onChange={(e) => {\r\n                                      setSecretKey(e.target.value);\r\n                                    }}\r\n                                    overlayIcon={\r\n                                      showPassword ? (\r\n                                        <VisibilityOffIcon />\r\n                                      ) : (\r\n                                        <RemoveRedEyeIcon />\r\n                                      )\r\n                                    }\r\n                                    overlayAction={() =>\r\n                                      setShowPassword(!showPassword)\r\n                                    }\r\n                                  />\r\n                                </div>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container item spacing=\"20\">\r\n                    <Grid item xs={12}>\r\n                      <Grid container>\r\n                        <Grid item xs={1}>\r\n                          <IAMPoliciesIcon />\r\n                        </Grid>\r\n                        <Grid item xs={11}>\r\n                          <FormSwitchWrapper\r\n                            value=\"serviceAccountPolicy\"\r\n                            id=\"serviceAccountPolicy\"\r\n                            name=\"serviceAccountPolicy\"\r\n                            checked={isRestrictedByPolicy}\r\n                            onChange={(\r\n                              event: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                              setIsRestrictedByPolicy(event.target.checked);\r\n                            }}\r\n                            label={t(\"restrict_beyond_user_policy\")}\r\n                            tooltip={t(\"restrict_beyond_user_policy_tooltip\")}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {isRestrictedByPolicy && (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        className={classes.codeMirrorContainer}\r\n                      >\r\n                        <div>\r\n                          <PanelTitle>\r\n                          {t(\"current_user_policy\")}\r\n                          </PanelTitle>\r\n                        </div>\r\n                        <Grid item xs={12} className={classes.formScrollable}>\r\n                          <CodeMirrorWrapper\r\n                            value={policyJSON}\r\n                            onBeforeChange={(editor, data, value) => {\r\n                              setPolicyJSON(value);\r\n                            }}\r\n                            editorHeight={\"350px\"}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.modalButtonBar}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={resetForm}\r\n                    >\r\n                      {t(\"clear\")}\r\n                    </Button>\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                      {t(\"create\")}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Box>\r\n            <AddServiceAccountHelpBox />\r\n          </Box>\r\n        </PageLayout>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AddServiceAccount);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\r\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { CopyIcon } from \"../../../../icons\";\r\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      padding: \"20px 0 8px 0\",\r\n    },\r\n    inputWithCopy: {\r\n      \"& .MuiInputBase-root \": {\r\n        width: \"100%\",\r\n        background: \"#FBFAFA\",\r\n        \"& .MuiInputBase-input\": {\r\n          height: \".8rem\",\r\n        },\r\n        \"& .MuiInputAdornment-positionEnd\": {\r\n          marginRight: \".5rem\",\r\n          \"& .MuiButtonBase-root\": {\r\n            height: \"2rem\",\r\n          },\r\n        },\r\n      },\r\n      \"& .MuiButtonBase-root .min-icon\": {\r\n        width: \".8rem\",\r\n        height: \".8rem\",\r\n      },\r\n    },\r\n    inputLabel: {\r\n      ...fieldBasic.inputLabel,\r\n      fontSize: \".8rem\",\r\n    },\r\n  });\r\n\r\nconst CredentialItem = ({\r\n  label = \"\",\r\n  value = \"\",\r\n  classes = {},\r\n}: {\r\n  label: string;\r\n  value: string;\r\n  classes: any;\r\n}) => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.inputLabel}>{label}:</div>\r\n      <div className={classes.inputWithCopy}>\r\n        <OutlinedInput\r\n          value={value}\r\n          readOnly\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <CopyToClipboard text={value}>\r\n                <BoxIconButton\r\n                  aria-label=\"copy\"\r\n                  tooltip={\"Copy\"}\r\n                  onClick={() => {}}\r\n                  onMouseDown={() => {}}\r\n                  edge=\"end\"\r\n                >\r\n                  <CopyIcon />\r\n                </BoxIconButton>\r\n              </CopyToClipboard>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CredentialItem);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { NewServiceAccount } from \"./types\";\r\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport CredentialItem from \"./CredentialItem\";\r\nimport WarnIcon from \"../../../../icons/WarnIcon\";\r\nimport { DownloadIcon, ServiceAccountCredentialsIcon } from \"../../../../icons\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    warningBlock: {\r\n      color: \"red\",\r\n      fontSize: \".85rem\",\r\n      margin: \".5rem 0 .5rem 0\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& svg \": {\r\n        marginRight: \".3rem\",\r\n        height: 16,\r\n        width: 16,\r\n      },\r\n    },\r\n    credentialTitle: {\r\n      padding: \".8rem 0 0 0\",\r\n      fontWeight: 600,\r\n      fontSize: \".9rem\",\r\n    },\r\n    buttonContainer: {\r\n      textAlign: \"right\",\r\n      marginTop: \"1rem\",\r\n    },\r\n    credentialsPanel: {\r\n      overflowY: \"auto\",\r\n      maxHeight: 350,\r\n    },\r\n    promptTitle: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    buttonSpacer: {\r\n      marginRight: \".9rem\",\r\n    },\r\n  });\r\n\r\ninterface ICredentialsPromptProps {\r\n  classes: any;\r\n  newServiceAccount: NewServiceAccount | null;\r\n  open: boolean;\r\n  entity: string;\r\n  closeModal: () => void;\r\n}\r\n\r\nconst download = (filename: string, text: string) => {\r\n  let element = document.createElement(\"a\");\r\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\r\n  element.setAttribute(\"download\", filename);\r\n\r\n  element.style.display = \"none\";\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n  document.body.removeChild(element);\r\n};\r\n\r\nconst CredentialsPrompt = ({\r\n  classes,\r\n  newServiceAccount,\r\n  open,\r\n  closeModal,\r\n  entity,\r\n}: ICredentialsPromptProps) => {\r\n  const { t } = useTranslation();\r\n\r\n  if (!newServiceAccount) {\r\n    return null;\r\n  }\r\n  const consoleCreds = get(newServiceAccount, \"console\", null);\r\n  const idp = get(newServiceAccount, \"idp\", false);\r\n\r\n  return (\r\n    <ModalWrapper\r\n      modalOpen={open}\r\n      onClose={() => {\r\n        closeModal();\r\n      }}\r\n      title={\r\n        <div className={classes.promptTitle}>\r\n          <div>{t(\"new\")} {entity} {t(\"created\")}</div>\r\n        </div>\r\n      }\r\n      titleIcon={<ServiceAccountCredentialsIcon />}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.formScrollable}>\r\n          {t(\"a_new\")} {entity} {t(\"following_details\")}:\r\n          {!idp && consoleCreds && (\r\n            <React.Fragment>\r\n              <Grid item xs={12} className={classes.credentialsPanel}>\r\n                <div className={classes.credentialTitle}>\r\n                 {t(\"console_credentials\")}\r\n                </div>\r\n                {Array.isArray(consoleCreds) &&\r\n                  consoleCreds.map((credentialsPair, index) => {\r\n                    return (\r\n                      <>\r\n                        <CredentialItem\r\n                          label={t(\"acces_key\")}\r\n                          value={credentialsPair.accessKey}\r\n                        />\r\n                        <CredentialItem\r\n                          label={t(\"secret_key\")}\r\n                          value={credentialsPair.secretKey}\r\n                        />\r\n                      </>\r\n                    );\r\n                  })}\r\n                {!Array.isArray(consoleCreds) && (\r\n                  <>\r\n                    <CredentialItem\r\n                      label={t(\"acces_key\")}\r\n                      value={consoleCreds.accessKey}\r\n                    />\r\n                    <CredentialItem\r\n                      label={t(\"secret_key\")}\r\n                      value={consoleCreds.secretKey}\r\n                    />\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n          {(consoleCreds === null || consoleCreds === undefined) && (\r\n            <>\r\n              <CredentialItem\r\n                label={t(\"acces_key\")}\r\n                value={newServiceAccount.accessKey || \"\"}\r\n              />\r\n              <CredentialItem\r\n                label={t(\"secret_key\")}\r\n                value={newServiceAccount.secretKey || \"\"}\r\n              />\r\n            </>\r\n          )}\r\n          {idp ? (\r\n            <div className={classes.warningBlock}>\r\n              {t(\"please_login_configured_identity_provider\")}\r\n            </div>\r\n          ) : (\r\n            <div className={classes.warningBlock}>\r\n              <WarnIcon />\r\n              <span>\r\n                {t(\"write_these_down_only_time_displayed\")}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.buttonContainer}>\r\n          {!idp && (\r\n            <>\r\n              <RBIconButton\r\n                id={\"download-button\"}\r\n                tooltip={t(\"download_credentials_json_details\")}\r\n                text={t(\"download_for_import\")}\r\n                className={classes.buttonSpacer}\r\n                onClick={() => {\r\n                  let consoleExtras = {};\r\n\r\n                  if (consoleCreds) {\r\n                    if (!Array.isArray(consoleCreds)) {\r\n                      consoleExtras = {\r\n                        url: consoleCreds.url,\r\n                        accessKey: consoleCreds.accessKey,\r\n                        secretKey: consoleCreds.secretKey,\r\n                        api: \"s3v4\",\r\n                        path: \"auto\",\r\n                      };\r\n                    } else {\r\n                      const cCreds = consoleCreds.map((itemMap) => {\r\n                        return {\r\n                          url: itemMap.url,\r\n                          accessKey: itemMap.accessKey,\r\n                          secretKey: itemMap.secretKey,\r\n                          api: \"s3v4\",\r\n                          path: \"auto\",\r\n                        };\r\n                      });\r\n                      consoleExtras = cCreds[0];\r\n                    }\r\n                  } else {\r\n                    consoleExtras = {\r\n                      url: newServiceAccount.url,\r\n                      accessKey: newServiceAccount.accessKey,\r\n                      secretKey: newServiceAccount.secretKey,\r\n                      api: \"s3v4\",\r\n                      path: \"auto\",\r\n                    };\r\n                  }\r\n\r\n                  download(\r\n                    \"credentials.json\",\r\n                    JSON.stringify({\r\n                      ...consoleExtras,\r\n                    })\r\n                  );\r\n                }}\r\n                icon={<DownloadIcon />}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              />\r\n\r\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\r\n                <RBIconButton\r\n                  id={\"download-all-button\"}\r\n                  tooltip={t(\"download_all_access_credentials_to_json\")}\r\n                  text={t(\"download_all_access\")}\r\n                  className={classes.buttonSpacer}\r\n                  onClick={() => {\r\n                    let allCredentials = {};\r\n                    if (consoleCreds) {\r\n                      const cCreds = consoleCreds.map((itemMap) => {\r\n                        return {\r\n                          accessKey: itemMap.accessKey,\r\n                          secretKey: itemMap.secretKey,\r\n                        };\r\n                      });\r\n                      allCredentials = cCreds;\r\n                    }\r\n                    download(\r\n                      \"all_credentials.json\",\r\n                      JSON.stringify({\r\n                        ...allCredentials,\r\n                      })\r\n                    );\r\n                  }}\r\n                  icon={<DownloadIcon />}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CredentialsPrompt);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\r\nimport { fieldBasic } from \"../common/styleLibrary\";\r\nimport { CopyIcon } from \"../../../../../icons\";\r\nimport RBIconButton from \"../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\r\n\r\ninterface ICodeWrapper {\r\n  value: string;\r\n  label?: string;\r\n  mode?: string;\r\n  tooltip?: string;\r\n  classes: any;\r\n  onChange?: (editor: any, data: any, value: string) => any;\r\n  onBeforeChange: (editor: any, data: any, value: string) => any;\r\n  readOnly?: boolean;\r\n  editorHeight?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n  });\r\n\r\nconst CodeMirrorWrapper = ({\r\n  value,\r\n  label = \"\",\r\n  tooltip = \"\",\r\n  mode = \"json\",\r\n  classes,\r\n  onBeforeChange,\r\n  readOnly = false,\r\n  editorHeight = \"250px\",\r\n}: ICodeWrapper) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\r\n        <InputLabel className={classes.inputLabel}>\r\n          <span>{label}</span>\r\n          {tooltip !== \"\" && (\r\n            <div className={classes.tooltipContainer}>\r\n              <Tooltip title={tooltip} placement=\"top-start\">\r\n                <div className={classes.tooltip}>\r\n                  <HelpIcon />\r\n                </div>\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n        </InputLabel>\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          maxHeight: editorHeight,\r\n          overflow: \"auto\",\r\n          border: \"1px solid #eaeaea\",\r\n        }}\r\n      >\r\n        <CodeEditor\r\n          value={value}\r\n          language={mode}\r\n          onChange={(evn) => {\r\n            onBeforeChange(null, null, evn.target.value);\r\n          }}\r\n          id={\"code_wrapper\"}\r\n          padding={15}\r\n          style={{\r\n            fontSize: 12,\r\n            backgroundColor: \"#fefefe\",\r\n            fontFamily:\r\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\r\n            minHeight: editorHeight || \"initial\",\r\n            color: \"#000000\",\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sx={{\r\n          background: \"#f7f7f7\",\r\n          border: \"1px solid #eaeaea\",\r\n          borderTop: 0,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            padding: \"2px\",\r\n            paddingRight: \"5px\",\r\n            justifyContent: \"flex-end\",\r\n            \"& button\": {\r\n              height: \"26px\",\r\n              width: \"26px\",\r\n              padding: \"2px\",\r\n              \" .min-icon\": {\r\n                marginLeft: \"0\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <CopyToClipboard text={value}>\r\n            <RBIconButton\r\n              tooltip={\"Copy to Clipboard\"}\r\n              onClick={() => {}}\r\n              text={\"\"}\r\n              icon={<CopyIcon />}\r\n              color={\"primary\"}\r\n              variant={\"outlined\"}\r\n            />\r\n          </CopyToClipboard>\r\n        </Box>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CodeMirrorWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { IconButtonProps } from \"@mui/material\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n      margin: 0,\r\n      fontSize: \".9rem\",\r\n    },\r\n  });\r\n\r\ninterface IPanelTitle extends IconButtonProps {\r\n  classes: any;\r\n  children: any;\r\n}\r\n\r\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\r\n  return <h1 className={classes.root}>{children}</h1>;\r\n};\r\n\r\nexport default withStyles(styles)(PanelTitle);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;"],"names":["FeatureItem","icon","description","Box","sx","display","marginRight","height","width","marginBottom","style","fontSize","fontStyle","color","t","useTranslation","flex","border","borderRadius","flexFlow","padding","marginTop","xs","fontWeight","alignItems","paddingBottom","paddingTop","withStyles","theme","createStyles","bottomContainer","flexGrow","margin","justifyContent","formFieldStyles","modalStyleUtils","classes","dispatch","useAppDispatch","navigate","useNavigate","useState","addSending","setAddSending","getRandomString","accessKey","setAccessKey","secretKey","setSecretKey","isRestrictedByPolicy","setIsRestrictedByPolicy","newServiceAccount","setNewServiceAccount","showPassword","setShowPassword","policyJSON","setPolicyJSON","useEffect","api","policy","then","res","url","catch","err","setErrorSnackMessage","JSON","stringify","parse","Fragment","CredentialsPrompt","open","closeModal","IAM_PAGES","entity","Grid","item","PageHeader","label","BackLink","to","PageLayout","gap","gridTemplateColumns","md","SectionTitle","noValidate","autoComplete","onSubmit","e","preventDefault","addServiceAccount","container","spacing","className","stackedInputs","InputBoxWrapper","value","id","name","placeholder","onChange","target","type","overlayIcon","VisibilityOff","RemoveRedEye","overlayAction","FormSwitchWrapper","checked","event","tooltip","codeMirrorContainer","PanelTitle","formScrollable","CodeMirrorWrapper","onBeforeChange","editor","data","editorHeight","modalButtonBar","Button","variant","onClick","inputWithCopy","background","inputLabel","fieldBasic","OutlinedInput","readOnly","endAdornment","InputAdornment","position","text","BoxIconButton","onMouseDown","edge","download","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","warningBlock","credentialTitle","buttonContainer","textAlign","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","title","titleIcon","Array","isArray","map","credentialsPair","index","undefined","WarnIcon","RBIconButton","consoleExtras","itemMap","path","length","allCredentials","mode","tooltipContainer","placement","overflow","language","evn","backgroundColor","fontFamily","minHeight","borderTop","paddingRight","marginLeft","deleteDialogStyles","content","customDialogSize","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","reason","root","titleText","closeContainer","closeButton","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
{"version":3,"file":"static/js/3897.0448680c.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/FormComponents/DateRangeSelector/DateRangeSelector.tsx","screens/Console/Common/FormComponents/DateTimePickerWrapper/DateTimePickerWrapper.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Dashboard/BasicDashboard/Utils.tsx","screens/Console/Dashboard/Prometheus/types.ts","screens/Console/Dashboard/Prometheus/utils.tsx","screens/Console/Common/TabSelector/TabSelector.tsx","screens/Console/Dashboard/Prometheus/Widgets/tooltips/BarChartTooltip.tsx","screens/Console/Dashboard/Prometheus/Widgets/ExpandGraphLink.tsx","screens/Console/Dashboard/DownloadWidgetDataButton.tsx","screens/Console/Dashboard/Prometheus/Widgets/BarChartWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/tooltips/LineChartTooltip.tsx","screens/Console/Dashboard/Prometheus/Widgets/LinearGraphWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/PieChartWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/SimpleWidget.tsx","screens/Console/Dashboard/DashboardItemBox.tsx","screens/Console/Dashboard/Prometheus/Widgets/NumericStatCard.tsx","screens/Console/Dashboard/Prometheus/Widgets/BucketsCountItem.tsx","screens/Console/Dashboard/Prometheus/Widgets/ObjectsCountItem.tsx","screens/Console/Dashboard/Prometheus/Widgets/SingleRepWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/SingleValueWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/CapacityItem.tsx","screens/Console/Dashboard/TimeStatItem.tsx","screens/Console/Dashboard/Prometheus/Widgets/HealActivityRenderer.tsx","screens/Console/Dashboard/Prometheus/Widgets/ScanActivityRenderer.tsx","screens/Console/Dashboard/Prometheus/Widgets/UptimeActivityRenderer.tsx","screens/Console/Dashboard/Prometheus/widgetUtils.tsx","screens/Console/Dashboard/Prometheus/ZoomWidget.tsx","screens/Console/Dashboard/Prometheus/Widgets/LayoutUtil.tsx","screens/Console/Dashboard/CommonCard.tsx","screens/Console/Dashboard/Prometheus/MergedWidgets.tsx","screens/Console/Dashboard/Prometheus/Widgets/EntityStateStatItem.tsx","screens/Console/Dashboard/Prometheus/Widgets/DualStatCard.tsx","screens/Console/Dashboard/Prometheus/Widgets/EntityStateItemRenderer.tsx","screens/Console/Dashboard/Prometheus/Widgets/NetworkGetItem.tsx","screens/Console/Dashboard/Prometheus/Widgets/NetworkPutItem.tsx","screens/Console/Dashboard/Prometheus/Widgets/NetworkItem.tsx","screens/Console/Dashboard/Prometheus/Widgets/MergedWidgetsRenderer.tsx","screens/Console/Dashboard/Prometheus/PrDashboard.tsx","screens/Console/Dashboard/BasicDashboard/StatusCountCard.tsx","screens/Console/Dashboard/BasicDashboard/ServerInfoItem.tsx","screens/Console/Dashboard/BasicDashboard/DriveInfoItem.tsx","screens/Console/Dashboard/BasicDashboard/ServersList.tsx","screens/Console/Dashboard/BasicDashboard/CounterCard.tsx","screens/Console/Dashboard/BasicDashboard/ReportedUsage.tsx","screens/Console/Dashboard/BasicDashboard/BasicDashboard.tsx","screens/Console/Dashboard/Dashboard.tsx","screens/shared/tabs.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #E2E2E2\",\r\n      borderRadius: 2,\r\n      backgroundColor: \"#FBFAFA\",\r\n      paddingLeft: 25,\r\n      paddingTop: 31,\r\n      paddingBottom: 21,\r\n      paddingRight: 30,\r\n    },\r\n    leftItems: {\r\n      fontSize: 16,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 15,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& .min-icon\": {\r\n        marginRight: 15,\r\n        height: 28,\r\n        width: 38,\r\n      },\r\n    },\r\n    helpText: {\r\n      fontSize: 16,\r\n      paddingLeft: 5,\r\n    },\r\n  });\r\n\r\ninterface IHelpBox {\r\n  classes: any;\r\n  iconComponent: any;\r\n  title: string;\r\n  help: any;\r\n}\r\n\r\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.leftItems}>\r\n          {iconComponent}\r\n          {title}\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.helpText}>\r\n          {help}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(HelpBox);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Box, Button, Grid } from \"@mui/material\";\r\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\r\nimport WatchLaterIcon from \"@mui/icons-material/WatchLater\";\r\nimport { actionsTray, widgetContainerCommon } from \"../common/styleLibrary\";\r\nimport DateTimePickerWrapper from \"../DateTimePickerWrapper/DateTimePickerWrapper\";\r\nimport SyncIcon from \"../../../../../icons/SyncIcon\";\r\nimport { OpenListIcon } from \"../../../../../icons\";\r\n\r\ninterface IDateRangeSelector {\r\n  classes: any;\r\n  timeStart: any;\r\n  setTimeStart: (date: any) => void;\r\n  timeEnd: any;\r\n  setTimeEnd: (date: any) => void;\r\n  triggerSync?: () => void;\r\n  label?: string;\r\n  startLabel?: string;\r\n  endLabel?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...actionsTray,\r\n    ...widgetContainerCommon,\r\n    syncButton: {\r\n      \"&.MuiButton-root .MuiButton-iconSizeMedium > *:first-of-type\": {\r\n        fontSize: 18,\r\n      },\r\n    },\r\n    schedulerIcon: {\r\n      opacity: 0.4,\r\n      fontSize: 10,\r\n      \"& svg\": {\r\n        width: 18,\r\n        height: 18,\r\n      },\r\n    },\r\n    selectorLabel: {\r\n      color: \"#9D9E9D\",\r\n      fontWeight: \"bold\",\r\n      whiteSpace: \"nowrap\",\r\n      marginLeft: 10,\r\n      fontSize: 12,\r\n    },\r\n  });\r\n\r\nconst DateFilterAdornIcon = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        \"& .min-icon\": {\r\n          width: \"10px\",\r\n          height: \"10px\",\r\n        },\r\n      }}\r\n    >\r\n      <OpenListIcon />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DateRangeSelector = ({\r\n  classes,\r\n  timeStart,\r\n  setTimeStart,\r\n  timeEnd,\r\n  setTimeEnd,\r\n  triggerSync,\r\n  label = \"Filter:\",\r\n  startLabel = \"Start Time:\",\r\n  endLabel = \"End Time:\",\r\n}: IDateRangeSelector) => {\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      sx={{\r\n        \"& .filter-date-input-label, .end-time-input-label\": {\r\n          display: \"none\",\r\n        },\r\n        \"& .MuiInputBase-adornedEnd.filter-date-date-time-input\": {\r\n          width: \"100%\",\r\n          border: \"1px solid #eaeaea\",\r\n          paddingLeft: \"8px\",\r\n          paddingRight: \"8px\",\r\n          borderRadius: \"1px\",\r\n        },\r\n\r\n        \"& .MuiInputAdornment-root button\": {\r\n          height: \"20px\",\r\n          width: \"20px\",\r\n          marginRight: \"5px\",\r\n        },\r\n        \"& .filter-date-input-wrapper\": {\r\n          height: \"30px\",\r\n          width: \"100%\",\r\n\r\n          \"& .MuiTextField-root\": {\r\n            height: \"30px\",\r\n            width: \"90%\",\r\n\r\n            \"& input.Mui-disabled\": {\r\n              color: \"#000000\",\r\n              WebkitTextFillColor: \"#101010\",\r\n            },\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"grid\",\r\n          height: {\r\n            md: \"40px\",\r\n            xs: \"auto\",\r\n          },\r\n          alignItems: \"center\",\r\n          gridTemplateColumns: {\r\n            md: \"auto 2fr auto\",\r\n            sm: \"1fr\",\r\n          },\r\n          padding: {\r\n            md: \"0\",\r\n            xs: \" 5px\",\r\n          },\r\n          gap: \"5px\",\r\n        }}\r\n      >\r\n        <Box sx={{ fontSize: \"14px\", fontWeight: 500, marginRight: \"5px\" }}>\r\n          {label}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"grid\",\r\n            height: {\r\n              md: \"40px\",\r\n              xs: \"auto\",\r\n            },\r\n            border: {\r\n              md: \"1px solid #eaeaea\",\r\n            },\r\n            alignItems: \"center\",\r\n            gridTemplateColumns: {\r\n              md: \"1fr 1fr\",\r\n              sm: \"1fr\",\r\n            },\r\n            gap: \"8px\",\r\n            paddingLeft: \"8px\",\r\n            paddingRight: \"8px\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"grid\",\r\n              height: \"30px\",\r\n              alignItems: \"center\",\r\n              gridTemplateColumns: {\r\n                xs: \"12px auto 1fr\",\r\n              },\r\n              gap: \"5px\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                \"& .min-icon\": {\r\n                  width: \"10px\",\r\n                  height: \"10px\",\r\n                  fill: \"#B4B5B4\",\r\n                },\r\n              }}\r\n            >\r\n              <ScheduleIcon className=\"min-icon\" />\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                fontSize: \"12px\",\r\n                marginLeft: \"8px\",\r\n              }}\r\n            >\r\n              {startLabel}\r\n            </Box>\r\n            <Box>\r\n              <DateTimePickerWrapper\r\n                value={timeStart}\r\n                onChange={setTimeStart}\r\n                id=\"stTime\"\r\n                classNamePrefix={\"filter-date-\"}\r\n                forFilterContained\r\n                noInputIcon={true}\r\n                openPickerIcon={DateFilterAdornIcon}\r\n              />\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"grid\",\r\n              height: \"30px\",\r\n              alignItems: \"center\",\r\n              gridTemplateColumns: {\r\n                xs: \"12px auto 1fr\",\r\n              },\r\n              gap: \"5px\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                \"& .min-icon\": {\r\n                  width: \"10px\",\r\n                  height: \"10px\",\r\n                  fill: \"#B4B5B4\",\r\n                },\r\n              }}\r\n            >\r\n              <WatchLaterIcon className=\"min-icon\" />\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                fontSize: \"12px\",\r\n                marginLeft: \"8px\",\r\n              }}\r\n            >\r\n              {endLabel}\r\n            </Box>\r\n            <Box>\r\n              <DateTimePickerWrapper\r\n                value={timeEnd}\r\n                onChange={setTimeEnd}\r\n                id=\"endTime\"\r\n                classNamePrefix={\"filter-date-\"}\r\n                forFilterContained\r\n                noInputIcon={true}\r\n                openPickerIcon={DateFilterAdornIcon}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        {triggerSync && (\r\n          <Box\r\n            sx={{\r\n              alignItems: \"flex-end\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              marginRight: \"35px\",\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={triggerSync}\r\n              endIcon={<SyncIcon />}\r\n              className={classes.syncButton}\r\n            >\r\n              Sync\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(DateRangeSelector);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\r\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\r\nimport AdapterMoment from \"@mui/lab/AdapterMoment\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\r\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\r\nimport OpenListIcon from \"../../../../../icons/OpenListIcon\";\r\n\r\ninterface IDateTimePicker {\r\n  value: any;\r\n  onChange: (value: any) => any;\r\n  classes: any;\r\n  forSearchBlock?: boolean;\r\n  forFilterContained?: boolean;\r\n  label?: string;\r\n  required?: boolean;\r\n  tooltip?: string;\r\n  id: string;\r\n  disabled?: boolean;\r\n  noInputIcon?: boolean;\r\n  classNamePrefix?: string;\r\n  openPickerIcon?: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    dateSelectorOverride: {\r\n      height: 40,\r\n      border: \"#EAEDEE 1px solid\",\r\n      marginLeft: 15,\r\n      backgroundColor: \"#fff\",\r\n      padding: \"0 16px\",\r\n      borderRadius: 5,\r\n      \"&.MuiInput-underline:hover:not(.Mui-disabled):before\": {\r\n        borderBottom: 0,\r\n      },\r\n      \"&:hover\": {\r\n        borderColor: \"#000\",\r\n        \"&:before, &:after\": {\r\n          borderColor: \"transparent\",\r\n          borderBottom: 0,\r\n        },\r\n      },\r\n      \"&:before, &:after\": {\r\n        borderColor: \"transparent\",\r\n        borderBottom: 0,\r\n      },\r\n      \"& input\": {\r\n        fontSize: 12,\r\n        fontWeight: 600,\r\n        color: \"#393939\",\r\n      },\r\n    },\r\n    dateSelectorFilterOverride: {\r\n      width: 180,\r\n      height: 42,\r\n      marginLeft: 20,\r\n      padding: 0,\r\n      borderRadius: 5,\r\n      \"&.MuiInput-underline:hover:not(.Mui-disabled):before\": {\r\n        borderBottom: 0,\r\n      },\r\n      \"&:hover\": {\r\n        \"&:before, &:after\": {\r\n          borderColor: \"transparent\",\r\n          borderBottom: 0,\r\n        },\r\n      },\r\n      \"&:before, &:after\": {\r\n        borderColor: \"transparent\",\r\n        borderBottom: 0,\r\n      },\r\n      \"& input\": {\r\n        fontSize: 12,\r\n        fontWeight: \"bold\",\r\n        color: \"#081C42\",\r\n      },\r\n      \"@media (max-width: 900px)\": {\r\n        width: 103,\r\n      },\r\n    },\r\n    dateSelectorFormOverride: {\r\n      width: \"100%\",\r\n      maxWidth: 840,\r\n    },\r\n    parentDateOverride: {\r\n      flexGrow: 1,\r\n    },\r\n    textBoxContainer: {\r\n      flexGrow: 1,\r\n    },\r\n    openListIcon: {\r\n      color: \"#9D9E9D\",\r\n      width: 8,\r\n      marginTop: 2,\r\n    },\r\n    paperOverride: {\r\n      \"& .MuiCalendarPicker-root\": {\r\n        padding: \"0 22px\",\r\n        \"& > div\": {\r\n          padding: 0,\r\n          \"& > div > div.PrivatePickersFadeTransitionGroup-root:first-of-type\":\r\n            {\r\n              color: \"#0A224C\",\r\n              fontWeight: \"bold\",\r\n            },\r\n          \"& > div > div.PrivatePickersFadeTransitionGroup-root:last-of-type\": {\r\n            color: \"#9D9E9D\",\r\n            \"& +  button.MuiButtonBase-root\": {\r\n              color: \"#9D9E9D\",\r\n            },\r\n          },\r\n          \"& > div:nth-child(2)\": {\r\n            \"& > div\": {\r\n              width: 0,\r\n            },\r\n            \"& > button.MuiButtonBase-root\": {\r\n              color: \"#0A224C\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      \"& .MuiTypography-root.MuiTypography-caption\": {\r\n        width: 26,\r\n        height: 26,\r\n        margin: 5,\r\n        color: \"#BCBCBC\",\r\n        fontSize: 10,\r\n      },\r\n      \"& button.MuiPickersDay-root\": {\r\n        fontWeight: \"bold\",\r\n        width: 26,\r\n        height: 26,\r\n        margin: 5,\r\n        textAlign: \"center\",\r\n        \"&.Mui-selected\": {\r\n          backgroundColor: theme.palette.primary.main,\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n      \"& div.MuiPickersDay-hiddenDaySpacingFiller\": {\r\n        width: 26,\r\n        height: 26,\r\n        margin: 5,\r\n      },\r\n      \"& div.PrivatePickersSlideTransition-root\": {\r\n        minHeight: 240,\r\n      },\r\n      \"& div.MuiCalendarPicker-viewTransitionContainer\": {\r\n        borderTop: \"#F0F3F5 1px solid\",\r\n      },\r\n      \"& .MuiClockPicker-arrowSwitcher\": {\r\n        marginRight: 10,\r\n        marginTop: -1,\r\n        \"& > div\": {\r\n          width: 0,\r\n        },\r\n        \"& > button.MuiButtonBase-root\": {\r\n          color: \"#0A224C\",\r\n        },\r\n        \"& + div > div\": {\r\n          width: 255,\r\n          height: 255,\r\n          backgroundColor: \"#fff\",\r\n          marginTop: 30,\r\n          marginBottom: 14,\r\n          border: \"#F0F3F5 3px solid\",\r\n          \"& > div:nth-child(2)\": {\r\n            backgroundColor: \"#B4B5B4\",\r\n            width: 12,\r\n            height: 12,\r\n            \"&::before\": {\r\n              content: \"' '\",\r\n              width: 35,\r\n              height: 35,\r\n              display: \"block\",\r\n              position: \"absolute\",\r\n              border: \"#F0F3F5 3px solid\",\r\n              top: -12,\r\n              left: -12,\r\n              borderRadius: \"100%\",\r\n            },\r\n          },\r\n          \"& > div:nth-child(3)\": {\r\n            backgroundColor: \"#B4B5B4\",\r\n            width: 4,\r\n          },\r\n          \"& > div:last-of-type\": {\r\n            marginTop: 15,\r\n            \"& > span\": {\r\n              color: \"#0A224C\",\r\n              \"&.Mui-selected\": {\r\n                color: \"#fff\",\r\n              },\r\n              \"&[aria-label='1 hours'], &[aria-label='2 hours'], &[aria-label='3 hours'], &[aria-label='4 hours'], &[aria-label='5 hours'], &[aria-label='6 hours'], &[aria-label='7 hours'], &[aria-label='8 hours'], &[aria-label='9 hours'], &[aria-label='10 hours'], &[aria-label='11 hours'], &[aria-label='12 hours']\":\r\n                {\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 20,\r\n                  marginTop: -1,\r\n                },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n  });\r\n\r\nconst DateTimePickerWrapper = ({\r\n  value,\r\n  onChange,\r\n  classes,\r\n  forSearchBlock = false,\r\n  forFilterContained = false,\r\n  label,\r\n  tooltip = \"\",\r\n  required,\r\n  id,\r\n  disabled = false,\r\n  noInputIcon = false,\r\n  classNamePrefix = \"\",\r\n  openPickerIcon,\r\n}: IDateTimePicker) => {\r\n  let adornment = {};\r\n\r\n  if (!noInputIcon) {\r\n    adornment = {\r\n      startAdornment: (\r\n        <InputAdornment position=\"start\">\r\n          <ScheduleIcon />\r\n        </InputAdornment>\r\n      ),\r\n    };\r\n  }\r\n\r\n  if (forFilterContained) {\r\n    adornment = {\r\n      endAdornment: (\r\n        <InputAdornment position=\"end\">\r\n          <OpenListIcon className={classes.openListIcon} />\r\n        </InputAdornment>\r\n      ),\r\n    };\r\n  }\r\n\r\n  const classOverridden = `${classNamePrefix}date-time-input  ${\r\n    forSearchBlock ? classes.dateSelectorOverride : \"\"\r\n  } ${\r\n    forFilterContained && !forSearchBlock\r\n      ? classes.dateSelectorFilterOverride\r\n      : \"\"\r\n  }`;\r\n\r\n  const clsName = forSearchBlock\r\n    ? classes.parentDateOverride\r\n    : classes.dateSelectorFormOverride;\r\n\r\n  const inputItem = (\r\n    <LocalizationProvider dateAdapter={AdapterMoment}>\r\n      <DateTimePicker\r\n        value={value}\r\n        onChange={onChange}\r\n        InputProps={{\r\n          ...adornment,\r\n          className: classOverridden,\r\n        }}\r\n        components={{\r\n          OpenPickerIcon: openPickerIcon,\r\n        }}\r\n        label=\"\"\r\n        className={clsName}\r\n        disabled={disabled}\r\n        renderInput={(props) => (\r\n          <TextField id={id} variant=\"standard\" {...props} disabled />\r\n        )}\r\n        ampm={false}\r\n        PopperProps={{\r\n          className: classes.paperOverride,\r\n        }}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n\r\n  if (forSearchBlock) {\r\n    return inputItem;\r\n  }\r\n\r\n  const containerCls = !forFilterContained ? classes.fieldContainer : \"\";\r\n  return (\r\n    <Fragment>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={`${containerCls} ${classNamePrefix}input-field-container `}\r\n      >\r\n        {label !== \"\" && (\r\n          <InputLabel\r\n            htmlFor={id}\r\n            className={`${classes.inputLabel} ${classNamePrefix}input-label`}\r\n          >\r\n            <span>\r\n              {label}\r\n              {required ? \"*\" : \"\"}\r\n            </span>\r\n            {tooltip !== \"\" && (\r\n              <div className={classes.tooltipContainer}>\r\n                <Tooltip title={tooltip} placement=\"top-start\">\r\n                  <div className={classes.tooltip}>\r\n                    <HelpIcon />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </InputLabel>\r\n        )}\r\n\r\n        <div\r\n          className={`${classes.textBoxContainer} ${classNamePrefix}input-wrapper  `}\r\n        >\r\n          {inputItem}\r\n        </div>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(DateTimePickerWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nexport const STATUS_COLORS = {\r\n  RED: \"#C83B51\",\r\n  GREEN: \"#4CCB92\",\r\n  YELLOW: \"#E7A219\",\r\n};\r\n\r\nexport const getDriveStatusColor = (\r\n  activeDisks: number,\r\n  totalDrives: number\r\n) => {\r\n  if (activeDisks <= totalDrives / 2) {\r\n    return STATUS_COLORS.RED;\r\n  }\r\n  if (totalDrives !== 2 && activeDisks === totalDrives / 2 + 1) {\r\n    return STATUS_COLORS.YELLOW;\r\n  }\r\n  if (activeDisks === totalDrives) {\r\n    return STATUS_COLORS.GREEN;\r\n  }\r\n};\r\n\r\nexport const serverStatusColor = (health_status: string) => {\r\n  switch (health_status) {\r\n    case \"offline\":\r\n      return STATUS_COLORS.RED;\r\n    case \"online\":\r\n      return STATUS_COLORS.GREEN;\r\n    default:\r\n      return STATUS_COLORS.YELLOW;\r\n  }\r\n};\r\nexport const getNetworkStatusColor = (\r\n  activeNetwork: number,\r\n  networkTotal: number\r\n) => {\r\n  if (activeNetwork <= networkTotal / 2) {\r\n    return STATUS_COLORS.RED;\r\n  }\r\n  if (activeNetwork === networkTotal / 2 + 1) {\r\n    return STATUS_COLORS.YELLOW;\r\n  }\r\n  if (activeNetwork === networkTotal) {\r\n    return STATUS_COLORS.GREEN;\r\n  }\r\n};\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport {\r\n  IBarChartConfiguration,\r\n  IBarChartRelation,\r\n  IDataSRep,\r\n  ILinearGraphConfiguration,\r\n  IPieChartConfiguration,\r\n} from \"./Widgets/types\";\r\n\r\nexport enum widgetType {\r\n  singleValue = \"singleValue\",\r\n  linearGraph = \"linearGraph\",\r\n  areaGraph = \"areaGraph\",\r\n  barChart = \"barChart\",\r\n  pieChart = \"pieChart\",\r\n  singleRep = \"singleRep\",\r\n  simpleWidget = \"simpleWidget\",\r\n}\r\n\r\nexport interface IDashboardPanel {\r\n  id: number;\r\n  mergedPanels?: IDashboardPanel[];\r\n  title: string;\r\n  data?: string | object[] | IDataSRep[];\r\n  dataOuter?: string | object[];\r\n  type?: widgetType;\r\n  widgetIcon?: any;\r\n  widgetConfiguration?:\r\n    | ILinearGraphConfiguration[]\r\n    | IBarChartConfiguration[]\r\n    | IPieChartConfiguration;\r\n  color?: string;\r\n  fillColor?: string;\r\n  innerLabel?: string;\r\n  labelDisplayFunction?: (value: string) => any;\r\n  disableYAxis?: boolean;\r\n  xAxisFormatter?: (item: string) => string;\r\n  yAxisFormatter?: (item: string) => string;\r\n  customStructure?: IBarChartRelation[];\r\n}\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { IDashboardPanel, widgetType } from \"./types\";\r\nimport {\r\n  getTimeFromTimestamp,\r\n  niceBytes,\r\n  niceDays,\r\n  representationNumber,\r\n  textToRGBColor,\r\n  units,\r\n} from \"../../../../common/utils\";\r\nimport HealIcon from \"../../../../icons/HealIcon\";\r\nimport DiagnosticsIcon from \"../../../../icons/DiagnosticsIcon\";\r\nimport { UptimeIcon } from \"../../../../icons\";\r\n\r\nconst colorsMain = [\r\n  \"#C4D4E9\",\r\n  \"#DCD1EE\",\r\n  \"#D1EEE7\",\r\n  \"#EEDED1\",\r\n  \"#AAF38F\",\r\n  \"#F9E6C5\",\r\n  \"#C83B51\",\r\n  \"#F4CECE\",\r\n  \"#D6D6D6\",\r\n];\r\n\r\nconst niceDaysFromNS = (seconds: string) => {\r\n  return niceDays(seconds, \"ns\");\r\n};\r\n\r\nconst roundNumber = (value: string) => {\r\n  return parseInt(value).toString(10);\r\n};\r\n\r\nexport const panelsConfiguration: IDashboardPanel[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Uptime\",\r\n    data: \"N/A\",\r\n    type: widgetType.simpleWidget,\r\n    widgetIcon: <UptimeIcon />,\r\n    labelDisplayFunction: niceDays,\r\n  },\r\n  {\r\n    id: 50,\r\n    title: \"Capacity\",\r\n    data: [],\r\n    dataOuter: [{ name: \"outer\", value: 100 }],\r\n    widgetConfiguration: {\r\n      outerChart: {\r\n        colorList: [\"#9c9c9c\"],\r\n        innerRadius: 0,\r\n        outerRadius: 0,\r\n        startAngle: 0,\r\n        endAngle: 0,\r\n      },\r\n      innerChart: {\r\n        colorList: colorsMain,\r\n        innerRadius: 20,\r\n        outerRadius: 50,\r\n        startAngle: 90,\r\n        endAngle: -200,\r\n      },\r\n    },\r\n    type: widgetType.pieChart,\r\n    innerLabel: \"N/A\",\r\n    labelDisplayFunction: niceBytes,\r\n  },\r\n  {\r\n    id: 51,\r\n    title: \"Usable Capacity\",\r\n    data: [],\r\n    dataOuter: [{ name: \"outer\", value: 100 }],\r\n    widgetConfiguration: {\r\n      outerChart: {\r\n        colorList: [\"#9c9c9c\"],\r\n        innerRadius: 0,\r\n        outerRadius: 0,\r\n        startAngle: 0,\r\n        endAngle: 0,\r\n      },\r\n      innerChart: {\r\n        colorList: colorsMain,\r\n        innerRadius: 20,\r\n        outerRadius: 50,\r\n        startAngle: 90,\r\n        endAngle: -200,\r\n      },\r\n    },\r\n    type: widgetType.pieChart,\r\n    innerLabel: \"N/A\",\r\n    labelDisplayFunction: niceBytes,\r\n  },\r\n  {\r\n    id: 68,\r\n    title: \"Data Usage Growth\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.areaGraph,\r\n    yAxisFormatter: niceBytes,\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n  },\r\n  {\r\n    id: 52,\r\n    title: \"Object size distribution\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"a\",\r\n        color: \"#2781B0\",\r\n        background: {\r\n          fill: \"#EEF1F4\",\r\n        },\r\n        greatestColor: \"#081C42\",\r\n      },\r\n    ],\r\n    customStructure: [\r\n      { originTag: \"LESS_THAN_1024_B\", displayTag: \"Less than 1024B\" },\r\n      {\r\n        originTag: \"BETWEEN_1024_B_AND_1_MB\",\r\n        displayTag: \"Between 1024B and 1MB\",\r\n      },\r\n      {\r\n        originTag: \"BETWEEN_1_MB_AND_10_MB\",\r\n        displayTag: \"Between 1MB and 10MB\",\r\n      },\r\n      {\r\n        originTag: \"BETWEEN_10_MB_AND_64_MB\",\r\n        displayTag: \"Between 10MB and 64MB\",\r\n      },\r\n      {\r\n        originTag: \"BETWEEN_64_MB_AND_128_MB\",\r\n        displayTag: \"Between 64MB and 128MB\",\r\n      },\r\n      {\r\n        originTag: \"BETWEEN_128_MB_AND_512_MB\",\r\n        displayTag: \"Between 128MB and 512MB\",\r\n      },\r\n      {\r\n        originTag: \"GREATER_THAN_512_MB\",\r\n        displayTag: \"Greater than 512MB\",\r\n      },\r\n    ],\r\n    type: widgetType.barChart,\r\n  },\r\n  {\r\n    id: 66,\r\n    title: \"Buckets\",\r\n    data: [],\r\n    innerLabel: \"N/A\",\r\n    type: widgetType.singleRep,\r\n    color: \"#0071BC\",\r\n    fillColor: \"#ADD5E0\",\r\n  },\r\n  {\r\n    id: 44,\r\n    title: \"Objects\",\r\n    data: [],\r\n    innerLabel: \"N/A\",\r\n    type: widgetType.singleRep,\r\n    color: \"#0071BC\",\r\n    fillColor: \"#ADD5E0\",\r\n  },\r\n  {\r\n    id: 63,\r\n    title: \"API Data Received Rate\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n        strokeWidth: 3,\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n    yAxisFormatter: niceBytes,\r\n  },\r\n  {\r\n    id: 61,\r\n    title: \"Total Open FDs\",\r\n    data: [],\r\n    innerLabel: \"N/A\",\r\n    type: widgetType.singleRep,\r\n    color: \"#22B573\",\r\n    fillColor: \"#A6E8C4\",\r\n  },\r\n  {\r\n    id: 62,\r\n    title: \"Total Goroutines\",\r\n    data: [],\r\n    innerLabel: \"N/A\",\r\n    type: widgetType.singleRep,\r\n    color: \"#F7655E\",\r\n    fillColor: \"#F4CECE\",\r\n  },\r\n  {\r\n    id: 77,\r\n    title: \"Node CPU Usage\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n\r\n    yAxisFormatter: roundNumber,\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n  },\r\n  {\r\n    id: 60,\r\n    title: \"API Request Rate\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n    yAxisFormatter: roundNumber,\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n  },\r\n  {\r\n    id: 70,\r\n    title: \"API Data Sent Rate\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n    yAxisFormatter: niceBytes,\r\n  },\r\n  {\r\n    id: 17,\r\n    title: \"Internode Data Transfer\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n\r\n    yAxisFormatter: niceBytes,\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n  },\r\n  {\r\n    id: 73,\r\n    title: \"Node IO\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n\r\n    yAxisFormatter: niceBytes,\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n  },\r\n  {\r\n    id: 80,\r\n    title: \"Time Since Last Heal Activity\",\r\n    data: \"N/A\",\r\n    type: widgetType.simpleWidget,\r\n    widgetIcon: <HealIcon />,\r\n    labelDisplayFunction: niceDaysFromNS,\r\n  },\r\n  {\r\n    id: 81,\r\n    title: \"Time Since Last Scan Activity\",\r\n    data: \"N/A\",\r\n    type: widgetType.simpleWidget,\r\n    widgetIcon: <DiagnosticsIcon />,\r\n    labelDisplayFunction: niceDaysFromNS,\r\n  },\r\n  {\r\n    id: 71,\r\n    title: \"API Request Error Rate\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n  },\r\n  {\r\n    id: 76,\r\n    title: \"Node Memory Usage\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n    yAxisFormatter: niceBytes,\r\n  },\r\n  {\r\n    id: 74,\r\n    title: \"Drive Used Capacity\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n    yAxisFormatter: niceBytes,\r\n  },\r\n  {\r\n    id: 82,\r\n    title: \"Drives Free Inodes\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n\r\n    disableYAxis: true,\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n  },\r\n  {\r\n    id: 11,\r\n    title: \"Node Syscalls\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n    yAxisFormatter: roundNumber,\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"Node File Descriptors\",\r\n    data: [],\r\n    widgetConfiguration: [\r\n      {\r\n        dataKey: \"\",\r\n        keyLabel: \"\",\r\n        lineColor: \"#000\",\r\n        fillColor: \"#000\",\r\n      },\r\n    ],\r\n    type: widgetType.linearGraph,\r\n    yAxisFormatter: roundNumber,\r\n    xAxisFormatter: getTimeFromTimestamp,\r\n  },\r\n  {\r\n    id: 500,\r\n    mergedPanels: [\r\n      {\r\n        id: 53,\r\n        title: \"Online\",\r\n        data: \"N/A\",\r\n        type: widgetType.singleValue,\r\n      },\r\n      {\r\n        id: 69,\r\n        title: \"Offline\",\r\n        data: \"N/A\",\r\n        type: widgetType.singleValue,\r\n      },\r\n    ],\r\n    title: \"Servers\",\r\n  },\r\n  {\r\n    id: 501,\r\n    mergedPanels: [\r\n      {\r\n        id: 9,\r\n        title: \"Online\",\r\n        data: \"N/A\",\r\n        type: widgetType.singleValue,\r\n      },\r\n      {\r\n        id: 78,\r\n        title: \"Offline\",\r\n        data: \"N/A\",\r\n        type: widgetType.singleValue,\r\n      },\r\n    ],\r\n    title: \"Drives\",\r\n  },\r\n  {\r\n    id: 502,\r\n    mergedPanels: [\r\n      {\r\n        id: 65,\r\n        title: \"Upload\",\r\n        data: \"N/A\",\r\n        type: widgetType.singleValue,\r\n\r\n        labelDisplayFunction: niceBytes,\r\n      },\r\n      {\r\n        id: 64,\r\n        title: \"Download\",\r\n        data: \"N/A\",\r\n        type: widgetType.singleValue,\r\n\r\n        labelDisplayFunction: niceBytes,\r\n      },\r\n    ],\r\n    title: \"Network\",\r\n  },\r\n];\r\n\r\nconst calculateMainValue = (elements: any[], metricCalc: string) => {\r\n  if (elements.length === 0) {\r\n    return [\"\", \"0\"];\r\n  }\r\n\r\n  switch (metricCalc) {\r\n    case \"mean\":\r\n      const sumValues = elements.reduce((accumulator, currValue) => {\r\n        return accumulator + parseFloat(currValue[1]);\r\n      }, 0);\r\n\r\n      const mean = Math.floor(sumValues / elements.length);\r\n\r\n      return [\"\", mean.toString()];\r\n    default:\r\n      const sortResult = elements.sort(\r\n        (value1: any[], value2: any[]) => value1[0] - value2[0]\r\n      );\r\n\r\n      return sortResult[sortResult.length - 1];\r\n  }\r\n};\r\n\r\nconst constructLabelNames = (metrics: any, legendFormat: string) => {\r\n  const keysToReplace = Object.keys(metrics);\r\n  const expToReplace = new RegExp(`{{(${keysToReplace.join(\"|\")})}}`, \"g\");\r\n\r\n  let replacedLegend = legendFormat.replace(expToReplace, (matchItem) => {\r\n    const nwMatchItem = matchItem.replace(/({{|}})/g, \"\");\r\n    return metrics[nwMatchItem];\r\n  });\r\n\r\n  const countVarsOpen = (replacedLegend.match(/{{/g) || []).length;\r\n  const countVarsClose = (replacedLegend.match(/}}/g) || []).length;\r\n\r\n  let cleanLegend = replacedLegend.replace(/{{(.*?)}}/g, \"\");\r\n\r\n  if (\r\n    countVarsOpen === countVarsClose &&\r\n    countVarsOpen !== 0 &&\r\n    countVarsClose !== 0\r\n  ) {\r\n    keysToReplace.forEach((element) => {\r\n      replacedLegend = replacedLegend.replace(element, metrics[element]);\r\n    });\r\n\r\n    cleanLegend = replacedLegend;\r\n  }\r\n\r\n  // In case not all the legends were replaced, we remove the placeholders.\r\n  return cleanLegend;\r\n};\r\n\r\nexport const getWidgetsWithValue = (payload: any[]): IDashboardPanel[] => {\r\n  return panelsConfiguration.map((panelItem: IDashboardPanel) => {\r\n    const payloadData = payload.find(\r\n      (panelT) =>\r\n        panelT.title.toLowerCase().trim() ===\r\n        panelItem.title.toLowerCase().trim()\r\n    );\r\n    return widgetDetailsToPanel(payloadData, panelItem);\r\n  });\r\n};\r\n\r\nexport const widgetDetailsToPanel = (\r\n  payloadData: any,\r\n  panelItem: IDashboardPanel\r\n) => {\r\n  if (!payloadData) {\r\n    return panelItem;\r\n  }\r\n\r\n  const typeOfPayload = payloadData.type;\r\n\r\n  switch (panelItem.type) {\r\n    case widgetType.singleValue:\r\n    case widgetType.simpleWidget:\r\n      if (typeOfPayload === \"stat\" || typeOfPayload === \"singlestat\") {\r\n        // We sort values & get the last value\r\n        let elements = get(payloadData, \"targets[0].result[0].values\", []);\r\n\r\n        if (elements === null) {\r\n          elements = [];\r\n        }\r\n\r\n        const metricCalc = get(\r\n          payloadData,\r\n          \"options.reduceOptions.calcs[0]\",\r\n          \"lastNotNull\"\r\n        );\r\n\r\n        const valueDisplay = calculateMainValue(elements, metricCalc);\r\n\r\n        const data = panelItem.labelDisplayFunction\r\n          ? panelItem.labelDisplayFunction(valueDisplay[1])\r\n          : valueDisplay[1];\r\n\r\n        return {\r\n          ...panelItem,\r\n          data,\r\n        };\r\n      }\r\n      break;\r\n    case widgetType.pieChart:\r\n      if (typeOfPayload === \"gauge\") {\r\n        const metricCalc = get(\r\n          payloadData,\r\n          \"options.reduceOptions.calcs[0]\",\r\n          \"lastNotNull\"\r\n        );\r\n\r\n        let chartSeries = get(payloadData, \"targets\", []).filter(\r\n          (seriesItem: any) => seriesItem !== null\r\n        );\r\n\r\n        const values = chartSeries.map((chartTarget: any) => {\r\n          const resultMap =\r\n            chartTarget.result && Array.isArray(chartTarget.result)\r\n              ? chartTarget.result\r\n              : [];\r\n\r\n          const values = resultMap.map((elementValue: any) => {\r\n            const values = get(elementValue, \"values\", []);\r\n            const metricKeyItem = Object.keys(elementValue.metric);\r\n            const sortResult = values.sort(\r\n              (value1: any[], value2: any[]) =>\r\n                parseInt(value1[0][1]) - parseInt(value2[0][1])\r\n            );\r\n\r\n            const metricName = elementValue.metric[metricKeyItem[0]];\r\n            const value = sortResult[sortResult.length - 1];\r\n            return {\r\n              name: metricName,\r\n              value: parseInt(value[1]),\r\n              legend: chartTarget.legendFormat,\r\n            };\r\n          });\r\n\r\n          return values;\r\n        });\r\n\r\n        const firstTarget =\r\n          chartSeries[0].result && chartSeries[0].result.length > 0\r\n            ? chartSeries[0].result[0].values\r\n            : [];\r\n\r\n        const totalValues = calculateMainValue(firstTarget, metricCalc);\r\n\r\n        const innerLabel = panelItem.labelDisplayFunction\r\n          ? panelItem.labelDisplayFunction(totalValues[1])\r\n          : totalValues[1];\r\n\r\n        return {\r\n          ...panelItem,\r\n          data: values,\r\n          innerLabel,\r\n        };\r\n      }\r\n      break;\r\n    case widgetType.linearGraph:\r\n    case widgetType.areaGraph:\r\n      if (typeOfPayload === \"graph\") {\r\n        let targets = get(payloadData, \"targets\", []);\r\n        if (targets === null) {\r\n          targets = [];\r\n        }\r\n\r\n        const series: any[] = [];\r\n        const plotValues: any[] = [];\r\n\r\n        targets.forEach(\r\n          (\r\n            targetMaster: { legendFormat: string; result: any[] },\r\n            index: number\r\n          ) => {\r\n            // Add a new serie to plot variables in case it is not from multiple values\r\n            let results = get(targetMaster, \"result\", []);\r\n            const legendFormat = targetMaster.legendFormat;\r\n            if (results === null) {\r\n              results = [];\r\n            }\r\n\r\n            results.forEach((itemVals: { metric: object; values: any[] }) => {\r\n              // Label Creation\r\n              const labelName = constructLabelNames(\r\n                itemVals.metric,\r\n                legendFormat\r\n              );\r\n              const keyName = `key_${index}${labelName}`;\r\n\r\n              // series creation with recently created label\r\n              series.push({\r\n                dataKey: keyName,\r\n                keyLabel: labelName,\r\n                lineColor: \"\",\r\n                fillColor: \"\",\r\n              });\r\n\r\n              // we iterate over values and create elements\r\n              let values = get(itemVals, \"values\", []);\r\n              if (values === null) {\r\n                values = [];\r\n              }\r\n\r\n              values.forEach((valInfo: any[]) => {\r\n                const itemIndex = plotValues.findIndex(\r\n                  (element) => element.name === valInfo[0]\r\n                );\r\n\r\n                // Element not exists yet\r\n                if (itemIndex === -1) {\r\n                  let itemToPush: any = { name: valInfo[0] };\r\n                  itemToPush[keyName] = valInfo[1];\r\n\r\n                  plotValues.push(itemToPush);\r\n                } else {\r\n                  plotValues[itemIndex][keyName] = valInfo[1];\r\n                }\r\n              });\r\n            });\r\n          }\r\n        );\r\n\r\n        const sortedSeries = series.sort((series1: any, series2: any) => {\r\n          if (series1.keyLabel < series2.keyLabel) {\r\n            return -1;\r\n          }\r\n          if (series1.keyLabel > series2.keyLabel) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n\r\n        const seriesWithColors = sortedSeries.map(\r\n          (serialC: any, index: number) => {\r\n            return {\r\n              ...serialC,\r\n              lineColor: colorsMain[index] || textToRGBColor(serialC.keyLabel),\r\n              fillColor: colorsMain[index] || textToRGBColor(serialC.keyLabel),\r\n            };\r\n          }\r\n        );\r\n\r\n        const sortedVals = plotValues.sort(\r\n          (value1: any, value2: any) => value1.name - value2.name\r\n        );\r\n\r\n        return {\r\n          ...panelItem,\r\n          widgetConfiguration: seriesWithColors,\r\n          data: sortedVals,\r\n        };\r\n      }\r\n      break;\r\n    case widgetType.barChart:\r\n      if (typeOfPayload === \"bargauge\") {\r\n        let chartBars = get(payloadData, \"targets[0].result\", []);\r\n\r\n        if (chartBars === null) {\r\n          chartBars = [];\r\n        }\r\n\r\n        const sortFunction = (value1: any[], value2: any[]) =>\r\n          value1[0] - value2[0];\r\n\r\n        let values = [];\r\n        if (panelItem.customStructure) {\r\n          values = panelItem.customStructure.map((structureItem) => {\r\n            const metricTake = chartBars.find((element: any) => {\r\n              const metricKeyItem = Object.keys(element.metric);\r\n\r\n              const metricName = element.metric[metricKeyItem[0]];\r\n\r\n              return metricName === structureItem.originTag;\r\n            });\r\n\r\n            const elements = get(metricTake, \"values\", []);\r\n\r\n            const sortResult = elements.sort(sortFunction);\r\n            const lastValue = sortResult[sortResult.length - 1] || [\"\", \"0\"];\r\n\r\n            return {\r\n              name: structureItem.displayTag,\r\n              a: parseInt(lastValue[1]),\r\n            };\r\n          });\r\n        } else {\r\n          // If no configuration is set, we construct the series for bar chart and return the element\r\n          values = chartBars.map((elementValue: any) => {\r\n            const metricKeyItem = Object.keys(elementValue.metric);\r\n\r\n            const metricName = elementValue.metric[metricKeyItem[0]];\r\n\r\n            const elements = get(elementValue, \"values\", []);\r\n\r\n            const sortResult = elements.sort(sortFunction);\r\n            const lastValue = sortResult[sortResult.length - 1] || [\"\", \"0\"];\r\n            return { name: metricName, a: parseInt(lastValue[1]) };\r\n          });\r\n        }\r\n\r\n        return {\r\n          ...panelItem,\r\n          data: values,\r\n        };\r\n      }\r\n      break;\r\n    case widgetType.singleRep:\r\n      if (typeOfPayload === \"stat\") {\r\n        // We sort values & get the last value\r\n        let elements = get(payloadData, \"targets[0].result[0].values\", []);\r\n        if (elements === null) {\r\n          elements = [];\r\n        }\r\n        const metricCalc = get(\r\n          payloadData,\r\n          \"options.reduceOptions.calcs[0]\",\r\n          \"lastNotNull\"\r\n        );\r\n\r\n        const valueDisplay = calculateMainValue(elements, metricCalc);\r\n\r\n        const sortResult = elements.sort(\r\n          (value1: any[], value2: any[]) => value1[0] - value2[0]\r\n        );\r\n\r\n        let valuesForBackground = [];\r\n\r\n        if (sortResult.length === 1) {\r\n          valuesForBackground.push({ value: 0 });\r\n        }\r\n\r\n        sortResult.forEach((eachVal: any) => {\r\n          valuesForBackground.push({ value: parseInt(eachVal[1]) });\r\n        });\r\n\r\n        const innerLabel = panelItem.labelDisplayFunction\r\n          ? panelItem.labelDisplayFunction(valueDisplay[1])\r\n          : valueDisplay[1];\r\n\r\n        return {\r\n          ...panelItem,\r\n          data: valuesForBackground,\r\n          innerLabel,\r\n        };\r\n      }\r\n      break;\r\n  }\r\n\r\n  return panelItem;\r\n};\r\n\r\nconst verifyNumeric = (item: string) => {\r\n  return !isNaN(parseFloat(item));\r\n};\r\n\r\nexport const splitSizeMetric = (val: string) => {\r\n  const splittedText = val.split(\" \");\r\n  // Value is not a size metric, we return as common string\r\n\r\n  const singleValue = () => {\r\n    let vl = val;\r\n\r\n    if (verifyNumeric(val)) {\r\n      vl = representationNumber(parseFloat(val));\r\n    }\r\n    return <Fragment>{vl}</Fragment>;\r\n  };\r\n\r\n  if (splittedText.length !== 2) {\r\n    return singleValue();\r\n  }\r\n\r\n  if (!units.includes(splittedText[1])) {\r\n    return singleValue();\r\n  }\r\n\r\n  return (\r\n    <span className=\"commonValue\">\r\n      {splittedText[0]}\r\n      <span className=\"unitText\">{splittedText[1]}</span>\r\n    </span>\r\n  );\r\n};\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport { ITabOption } from \"./types\";\r\n\r\ninterface ITabSelector {\r\n  selectedTab: number;\r\n  onChange: (newValue: number) => void;\r\n  tabOptions: ITabOption[];\r\n}\r\n\r\nconst tabSubStyles = makeStyles({\r\n  tabRoot: {\r\n    height: \"40px\",\r\n    borderBottom: \"1px solid #eaeaea\",\r\n  },\r\n  root: {\r\n    width: \"120px\",\r\n    backgroundColor: \"transparent\",\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n    fontSize: \"14px\",\r\n    fontWeight: 600,\r\n    color: \"#07193E\",\r\n    height: \"40px\",\r\n  },\r\n  selected: {\r\n    \"&.MuiTab-selected\": {\r\n      backgroundColor: \"#F6F7F7 !important\",\r\n    },\r\n    \"&.MuiTab-wrapper\": {\r\n      color: \"#07193E\",\r\n      fontWeight: 600,\r\n    },\r\n  },\r\n  indicator: {\r\n    background:\r\n      \"transparent linear-gradient(90deg, #072B4E 0%, #081C42 100%) 0% 0% no-repeat padding-box;\",\r\n    height: 2,\r\n  },\r\n  scroller: {\r\n    maxWidth: 1185,\r\n    position: \"relative\",\r\n    \"&::after\": {\r\n      content: '\" \"',\r\n      backgroundColor: \"#EEF1F4\",\r\n      height: 2,\r\n      width: \"100%\",\r\n      display: \"block\",\r\n    },\r\n  },\r\n});\r\n\r\nconst TabSelector = ({ selectedTab, onChange, tabOptions }: ITabSelector) => {\r\n  const subStyles = tabSubStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Tabs\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        aria-label=\"cluster-tabs\"\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n        value={selectedTab}\r\n        onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\r\n          onChange(newValue);\r\n        }}\r\n        classes={{\r\n          root: subStyles.tabRoot,\r\n          indicator: subStyles.indicator,\r\n          scroller: subStyles.scroller,\r\n        }}\r\n      >\r\n        {tabOptions.map((option, index) => {\r\n          let tabOptions: ITabOption = {\r\n            label: option.label,\r\n          };\r\n\r\n          if (option.value) {\r\n            tabOptions = { ...tabOptions, value: option.value };\r\n          }\r\n\r\n          if (option.disabled) {\r\n            tabOptions = { ...tabOptions, disabled: option.disabled };\r\n          }\r\n\r\n          return (\r\n            <Tab\r\n              {...tabOptions}\r\n              classes={{\r\n                root: subStyles.root,\r\n                selected: subStyles.selected,\r\n              }}\r\n              id={`simple-tab-${index}`}\r\n              aria-controls={`simple-tabpanel-${index}`}\r\n              key={`tab-${index}-${option.label}`}\r\n            />\r\n          );\r\n        })}\r\n      </Tabs>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TabSelector;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { tooltipCommon } from \"../../../../Common/FormComponents/common/styleLibrary\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...tooltipCommon,\r\n  });\r\n\r\nconst BarChartTooltip = ({\r\n  active,\r\n  payload,\r\n  label,\r\n  barChartConfiguration,\r\n  classes,\r\n}: any) => {\r\n  if (active) {\r\n    return (\r\n      <div className={classes.customTooltip}>\r\n        <div className={classes.timeStampTitle}>{label}</div>\r\n        {payload &&\r\n          payload.map((pl: any, index: number) => {\r\n            return (\r\n              <div\r\n                className={classes.labelContainer}\r\n                key={`pltiem-${index}-${label}`}\r\n              >\r\n                <div\r\n                  className={classes.labelColor}\r\n                  style={{\r\n                    backgroundColor: barChartConfiguration[index].color,\r\n                  }}\r\n                />\r\n                <div className={classes.itemValue}>\r\n                  <span className={classes.valueContainer}>{pl.value}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default withStyles(styles)(BarChartTooltip);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport ZoomOutMapIcon from \"@mui/icons-material/ZoomOutMap\";\r\nimport { Box } from \"@mui/material\";\r\nimport { IDashboardPanel } from \"../types\";\r\n\r\nimport { openZoomPage } from \"../../dashboardSlice\";\r\nimport { useAppDispatch } from \"../../../../../store\";\r\n\r\nconst ExpandGraphLink = ({ panelItem }: { panelItem: IDashboardPanel }) => {\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        alignItems: \"right\",\r\n        gap: \"10px\",\r\n        \"& .link-text\": {\r\n          color: \"#2781B0\",\r\n          fontSize: \"12px\",\r\n          fontWeight: 600,\r\n        },\r\n\r\n        \"& .zoom-graph-icon\": {\r\n          backgroundColor: \"transparent\",\r\n          border: 0,\r\n          padding: 0,\r\n          cursor: \"pointer\",\r\n          \"& svg\": {\r\n            color: \"#D0D0D0\",\r\n            height: 16,\r\n          },\r\n          \"&:hover\": {\r\n            \"& svg\": {\r\n              color: \"#404143\",\r\n            },\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <button\r\n        onClick={() => {\r\n          dispatch(openZoomPage(panelItem));\r\n        }}\r\n        className={\"zoom-graph-icon\"}\r\n      >\r\n        <ZoomOutMapIcon />\r\n      </button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExpandGraphLink;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { Menu, MenuItem, Box } from \"@mui/material\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { DownloadIcon } from \"../../../icons\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\nimport { useAppDispatch } from \"../../../../src/store\";\r\nimport { setErrorSnackMessage } from \"../../../../src/systemSlice\";\r\ninterface IDownloadWidgetDataButton {\r\n  title: any;\r\n  componentRef: any;\r\n  data: any;\r\n}\r\n\r\nconst DownloadWidgetDataButton = ({\r\n  title,\r\n  componentRef,\r\n  data,\r\n}: IDownloadWidgetDataButton) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const openDownloadMenu = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleCloseDownload = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const download = (filename: string, text: string) => {\r\n    let element = document.createElement(\"a\");\r\n    element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\r\n    element.setAttribute(\"download\", filename);\r\n\r\n    element.style.display = \"none\";\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n    document.body.removeChild(element);\r\n  };\r\n\r\n  const dispatch = useAppDispatch();\r\n  const onDownloadError = (err: ErrorResponseHandler) =>\r\n    dispatch(setErrorSnackMessage(err));\r\n\r\n  const convertToCSV = (objectToConvert: any) => {\r\n    const array = [Object.keys(objectToConvert[0])].concat(objectToConvert);\r\n    return array\r\n      .map((it) => {\r\n        return Object.values(it).toString();\r\n      })\r\n      .join(\"\\n\");\r\n  };\r\n\r\n  const widgetDataCSVFileName = () => {\r\n    if (title !== null) {\r\n      return (title + \"_\" + Date.now().toString() + \".csv\")\r\n        .replace(/\\s+/g, \"\")\r\n        .trim()\r\n        .toLowerCase();\r\n    } else {\r\n      return \"widgetData_\" + Date.now().toString() + \".csv\";\r\n    }\r\n  };\r\n\r\n  const downloadAsCSV = () => {\r\n    if (data !== null && data.length > 0) {\r\n      download(widgetDataCSVFileName(), convertToCSV(data));\r\n    } else {\r\n      let err: ErrorResponseHandler;\r\n      err = {\r\n        errorMessage: \"Unable to download widget data\",\r\n        detailedError: \"Unable to download widget data - data not available\",\r\n      };\r\n      onDownloadError(err);\r\n    }\r\n  };\r\n\r\n  const downloadAsPNG = () => {\r\n    if (title !== null) {\r\n      const pngFileName = (title + \"_\" + Date.now().toString() + \".png\")\r\n        .replace(/\\s+/g, \"\")\r\n        .trim()\r\n        .toLowerCase();\r\n      exportComponentAsPNG(componentRef, { fileName: pngFileName });\r\n    } else {\r\n      const pngFileName = \"widgetData_\" + Date.now().toString() + \".png\";\r\n      exportComponentAsPNG(componentRef, { fileName: pngFileName });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box\r\n        justifyItems={\"center\"}\r\n        sx={{\r\n          \"& .download-icon\": {\r\n            backgroundColor: \"transparent\",\r\n            border: 0,\r\n            padding: 0,\r\n            cursor: \"pointer\",\r\n            \"& svg\": {\r\n              color: \"#D0D0D0\",\r\n              height: 16,\r\n            },\r\n            \"&:hover\": {\r\n              \"& svg\": {\r\n                color: \"#404143\",\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <button onClick={handleClick} className={\"download-icon\"}>\r\n          <DownloadIcon />\r\n        </button>\r\n        <Menu\r\n          id={`download-widget-main-menu`}\r\n          aria-labelledby={`download-widget-main`}\r\n          anchorEl={anchorEl}\r\n          open={openDownloadMenu}\r\n          onClose={() => {\r\n            handleCloseDownload();\r\n          }}\r\n        >\r\n          <MenuItem\r\n            onClick={() => {\r\n              downloadAsCSV();\r\n            }}\r\n          >\r\n            <ListItemText>Download as CSV</ListItemText>\r\n          </MenuItem>\r\n          <MenuItem\r\n            onClick={() => {\r\n              downloadAsPNG();\r\n            }}\r\n          >\r\n            <ListItemText>Download as PNG</ListItemText>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DownloadWidgetDataButton;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState, useRef } from \"react\";\r\n\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { useMediaQuery, Grid } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { IBarChartConfiguration } from \"./types\";\r\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\r\nimport BarChartTooltip from \"./tooltips/BarChartTooltip\";\r\nimport { IDashboardPanel } from \"../types\";\r\nimport { widgetDetailsToPanel } from \"../utils\";\r\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\r\nimport api from \"../../../../../common/api\";\r\nimport { useTheme } from \"@mui/styles\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\nimport ExpandGraphLink from \"./ExpandGraphLink\";\r\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../../store\";\r\nimport DownloadWidgetDataButton from \"../../DownloadWidgetDataButton\";\r\n\r\ninterface IBarChartWidget {\r\n  classes: any;\r\n  title: string;\r\n  panelItem: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  propLoading: boolean;\r\n  apiPrefix: string;\r\n  zoomActivated?: boolean;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...widgetCommon,\r\n    loadingAlign: {\r\n      width: \"100%\",\r\n      paddingTop: \"15px\",\r\n      textAlign: \"center\",\r\n      margin: \"auto\",\r\n    },\r\n  });\r\n\r\nconst CustomizedAxisTick = ({ y, payload }: any) => {\r\n  return (\r\n    <text\r\n      width={50}\r\n      fontSize={\"69.7%\"}\r\n      textAnchor=\"start\"\r\n      fill=\"#333\"\r\n      transform={`translate(5,${y})`}\r\n      fontWeight={400}\r\n      dy={3}\r\n    >\r\n      {payload.value}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst BarChartWidget = ({\r\n  classes,\r\n  title,\r\n  panelItem,\r\n  timeStart,\r\n  timeEnd,\r\n  propLoading,\r\n  apiPrefix,\r\n  zoomActivated = false,\r\n}: IBarChartWidget) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [data, setData] = useState<any>([]);\r\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\r\n  const [hover, setHover] = useState<boolean>(false);\r\n  const componentRef = useRef<HTMLElement>();\r\n\r\n  const onHover = () => {\r\n    setHover(true);\r\n  };\r\n  const onStopHover = () => {\r\n    setHover(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (propLoading) {\r\n      setLoading(true);\r\n    }\r\n  }, [propLoading]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      let stepCalc = 0;\r\n      if (timeStart !== null && timeEnd !== null) {\r\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\r\n        const periods = Math.floor(secondsInPeriod / 60);\r\n\r\n        stepCalc = periods < 1 ? 15 : periods;\r\n      }\r\n\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/${apiPrefix}/info/widgets/${\r\n            panelItem.id\r\n          }/?step=${stepCalc}&${\r\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\r\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\r\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\r\n          }`\r\n        )\r\n        .then((res: any) => {\r\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\r\n          setData(widgetsWithValue.data);\r\n          setResult(widgetsWithValue);\r\n          setLoading(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [loading, panelItem, timeEnd, timeStart, dispatch, apiPrefix]);\r\n\r\n  const barChartConfiguration = result\r\n    ? (result.widgetConfiguration as IBarChartConfiguration[])\r\n    : [];\r\n\r\n  let greatestIndex = 0;\r\n  let currentValue = 0;\r\n\r\n  if (barChartConfiguration.length === 1) {\r\n    const dataGraph = barChartConfiguration[0];\r\n    data.forEach((item: any, index: number) => {\r\n      if (item[dataGraph.dataKey] > currentValue) {\r\n        currentValue = item[dataGraph.dataKey];\r\n        greatestIndex = index;\r\n      }\r\n    });\r\n  }\r\n\r\n  const theme = useTheme();\r\n  const biggerThanMd = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <div\r\n      className={zoomActivated ? \"\" : classes.singleValueContainer}\r\n      onMouseOver={onHover}\r\n      onMouseLeave={onStopHover}\r\n    >\r\n      {!zoomActivated && (\r\n        <Grid container>\r\n          <Grid item xs={10} alignItems={\"start\"} justifyItems={\"start\"}>\r\n            <div className={classes.titleContainer}>{title}</div>\r\n          </Grid>\r\n          <Grid item xs={1} display={\"flex\"} justifyContent={\"flex-end\"}>\r\n            {hover && <ExpandGraphLink panelItem={panelItem} />}\r\n          </Grid>\r\n          <Grid item xs={1} display={\"flex\"} justifyContent={\"flex-end\"}>\r\n            <DownloadWidgetDataButton\r\n              title={title}\r\n              componentRef={componentRef}\r\n              data={data}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {loading && (\r\n        <div className={classes.loadingAlign}>\r\n          <Loader />\r\n        </div>\r\n      )}\r\n      {!loading && (\r\n        <div\r\n          ref={componentRef as React.RefObject<HTMLDivElement>}\r\n          className={\r\n            zoomActivated ? classes.zoomChartCont : classes.contentContainer\r\n          }\r\n        >\r\n          <ResponsiveContainer width=\"99%\">\r\n            <BarChart\r\n              data={data as object[]}\r\n              layout={\"vertical\"}\r\n              barCategoryGap={1}\r\n            >\r\n              <XAxis type=\"number\" hide />\r\n              <YAxis\r\n                dataKey=\"name\"\r\n                type=\"category\"\r\n                interval={0}\r\n                tick={<CustomizedAxisTick />}\r\n                tickLine={false}\r\n                axisLine={false}\r\n                width={150}\r\n                hide={!biggerThanMd}\r\n                style={{\r\n                  fontSize: \"12px\",\r\n                  fontWeight: 100,\r\n                }}\r\n              />\r\n              {barChartConfiguration.map((bar) => (\r\n                <Bar\r\n                  key={`bar-${bar.dataKey}`}\r\n                  dataKey={bar.dataKey}\r\n                  fill={bar.color}\r\n                  background={bar.background}\r\n                  barSize={zoomActivated ? 25 : 12}\r\n                >\r\n                  {barChartConfiguration.length === 1 ? (\r\n                    <Fragment>\r\n                      {data.map((_: any, index: number) => (\r\n                        <Cell\r\n                          key={`chart-bar-${index.toString()}`}\r\n                          fill={\r\n                            index === greatestIndex\r\n                              ? bar.greatestColor\r\n                              : bar.color\r\n                          }\r\n                        />\r\n                      ))}\r\n                    </Fragment>\r\n                  ) : null}\r\n                </Bar>\r\n              ))}\r\n              <Tooltip\r\n                cursor={{ fill: \"rgba(255, 255, 255, 0.3)\" }}\r\n                content={\r\n                  <BarChartTooltip\r\n                    barChartConfiguration={barChartConfiguration}\r\n                  />\r\n                }\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(BarChartWidget);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { getTimeFromTimestamp } from \"../../../../../../common/utils\";\r\nimport { tooltipCommon } from \"../../../../Common/FormComponents/common/styleLibrary\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...tooltipCommon,\r\n  });\r\n\r\nconst LineChartTooltip = ({\r\n  active,\r\n  payload,\r\n  label,\r\n  linearConfiguration,\r\n  yAxisFormatter,\r\n  classes,\r\n}: any) => {\r\n  if (active) {\r\n    return (\r\n      <div className={classes.customTooltip}>\r\n        <div className={classes.timeStampTitle}>\r\n          {getTimeFromTimestamp(label, true)}\r\n        </div>\r\n        {payload &&\r\n          payload.map((pl: any, index: number) => {\r\n            return (\r\n              <div\r\n                className={classes.labelContainer}\r\n                key={`lbPl-${index}-${linearConfiguration[index].keyLabel}`}\r\n              >\r\n                <div\r\n                  className={classes.labelColor}\r\n                  style={{\r\n                    backgroundColor: linearConfiguration[index].lineColor,\r\n                  }}\r\n                />\r\n                <div className={classes.itemValue}>\r\n                  <span className={classes.valueContainer}>\r\n                    {linearConfiguration[index].keyLabel}:{\" \"}\r\n                    {yAxisFormatter(pl.value)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default withStyles(styles)(LineChartTooltip);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { Box, useMediaQuery, Grid } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { ILinearGraphConfiguration } from \"./types\";\r\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\r\nimport { IDashboardPanel } from \"../types\";\r\nimport { widgetDetailsToPanel } from \"../utils\";\r\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\r\nimport api from \"../../../../../common/api\";\r\nimport LineChartTooltip from \"./tooltips/LineChartTooltip\";\r\nimport { useTheme } from \"@mui/styles\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\nimport ExpandGraphLink from \"./ExpandGraphLink\";\r\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../../store\";\r\nimport DownloadWidgetDataButton from \"../../DownloadWidgetDataButton\";\r\n\r\ninterface ILinearGraphWidget {\r\n  classes: any;\r\n  title: string;\r\n  panelItem: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  propLoading: boolean;\r\n  apiPrefix: string;\r\n  hideYAxis?: boolean;\r\n  yAxisFormatter?: (item: string) => string;\r\n  xAxisFormatter?: (item: string, var1: boolean, var2: boolean) => string;\r\n  areaWidget?: boolean;\r\n  zoomActivated?: boolean;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...widgetCommon,\r\n    verticalAlignment: {\r\n      flexDirection: \"column\",\r\n    },\r\n    chartCont: {\r\n      position: \"relative\",\r\n      height: 140,\r\n      width: \"100%\",\r\n    },\r\n    legendChart: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      flex: \"0 1 auto\",\r\n      maxHeight: 130,\r\n      margin: 0,\r\n      overflowY: \"auto\",\r\n      position: \"relative\",\r\n      textAlign: \"center\",\r\n      width: \"100%\",\r\n      justifyContent: \"flex-start\",\r\n      color: \"#404143\",\r\n      fontWeight: \"bold\",\r\n      fontSize: 12,\r\n    },\r\n    loadingAlign: {\r\n      width: 40,\r\n      height: 40,\r\n      textAlign: \"center\",\r\n      margin: \"15px auto\",\r\n    },\r\n  });\r\n\r\nconst LinearGraphWidget = ({\r\n  classes,\r\n  title,\r\n  timeStart,\r\n  timeEnd,\r\n  propLoading,\r\n  panelItem,\r\n  apiPrefix,\r\n  hideYAxis = false,\r\n  areaWidget = false,\r\n  yAxisFormatter = (item: string) => item,\r\n  xAxisFormatter = (item: string, var1: boolean, var2: boolean) => item,\r\n  zoomActivated = false,\r\n}: ILinearGraphWidget) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [hover, setHover] = useState<boolean>(false);\r\n  const [data, setData] = useState<object[]>([]);\r\n  const [csvData, setCsvData] = useState<object[]>([]);\r\n  const [dataMax, setDataMax] = useState<number>(0);\r\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\r\n\r\n  const componentRef = useRef<HTMLElement>();\r\n\r\n  useEffect(() => {\r\n    if (propLoading) {\r\n      setLoading(true);\r\n    }\r\n  }, [propLoading]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      let stepCalc = 0;\r\n      if (timeStart !== null && timeEnd !== null) {\r\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\r\n        const periods = Math.floor(secondsInPeriod / 60);\r\n\r\n        stepCalc = periods < 1 ? 15 : periods;\r\n      }\r\n\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/${apiPrefix}/info/widgets/${\r\n            panelItem.id\r\n          }/?step=${stepCalc}&${\r\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\r\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\r\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\r\n          }`\r\n        )\r\n        .then((res: any) => {\r\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\r\n          setData(widgetsWithValue.data);\r\n          setResult(widgetsWithValue);\r\n          setLoading(false);\r\n          let maxVal = 0;\r\n          for (const dp of widgetsWithValue.data) {\r\n            for (const key in dp) {\r\n              if (key === \"name\") {\r\n                continue;\r\n              }\r\n              let val = parseInt(dp[key]);\r\n\r\n              if (isNaN(val)) {\r\n                val = 0;\r\n              }\r\n\r\n              if (maxVal < val) {\r\n                maxVal = val;\r\n              }\r\n            }\r\n          }\r\n          setDataMax(maxVal);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [loading, panelItem, timeEnd, timeStart, dispatch, apiPrefix]);\r\n\r\n  let intervalCount = Math.floor(data.length / 5);\r\n\r\n  const onHover = () => {\r\n    setHover(true);\r\n  };\r\n  const onStopHover = () => {\r\n    setHover(false);\r\n  };\r\n  useEffect(() => {\r\n    var dateFormatData = data;\r\n    dateFormatData.forEach((element: any) => {\r\n      var date = new Date(element.name * 1000);\r\n      element.name = date;\r\n    });\r\n    setCsvData(dateFormatData);\r\n  }, [data]);\r\n\r\n  const linearConfiguration = result\r\n    ? (result?.widgetConfiguration as ILinearGraphConfiguration[])\r\n    : [];\r\n\r\n  const CustomizedDot = (prop: any) => {\r\n    const { cx, cy, index } = prop;\r\n\r\n    if (index % 3 !== 0) {\r\n      return null;\r\n    }\r\n    return <circle cx={cx} cy={cy} r={3} strokeWidth={0} fill=\"#07264A\" />;\r\n  };\r\n\r\n  const theme = useTheme();\r\n  const biggerThanMd = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  let dspLongDate = false;\r\n\r\n  if (zoomActivated) {\r\n    dspLongDate = true;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      className={zoomActivated ? \"\" : classes.singleValueContainer}\r\n      onMouseOver={onHover}\r\n      onMouseLeave={onStopHover}\r\n    >\r\n      {!zoomActivated && (\r\n        <Grid container alignItems={\"left\"}>\r\n          <Grid item xs={10} alignItems={\"start\"}>\r\n            <div className={classes.titleContainer}>{title}</div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={1}\r\n            display={\"flex\"}\r\n            justifyContent={\"flex-end\"}\r\n            alignContent={\"flex-end\"}\r\n          >\r\n            {hover && <ExpandGraphLink panelItem={panelItem} />}\r\n          </Grid>\r\n          <Grid item xs={1} display={\"flex\"} justifyContent={\"flex-end\"}>\r\n            <DownloadWidgetDataButton\r\n              title={title}\r\n              componentRef={componentRef}\r\n              data={csvData}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      <Box\r\n        sx={\r\n          zoomActivated\r\n            ? { flexDirection: \"column\" }\r\n            : {\r\n                height: \"100%\",\r\n                display: \"grid\",\r\n                gridTemplateColumns: {\r\n                  md: \"1fr 1fr\",\r\n                  sm: \"1fr\",\r\n                },\r\n              }\r\n        }\r\n        style={areaWidget ? { gridTemplateColumns: \"1fr\" } : {}}\r\n        ref={componentRef}\r\n      >\r\n        {loading && <Loader className={classes.loadingAlign} />}\r\n        {!loading && (\r\n          <React.Fragment>\r\n            <div\r\n              className={\r\n                zoomActivated ? classes.zoomChartCont : classes.chartCont\r\n              }\r\n            >\r\n              <ResponsiveContainer width=\"99%\">\r\n                <AreaChart\r\n                  data={data}\r\n                  margin={{\r\n                    top: 5,\r\n                    right: 20,\r\n                    left: hideYAxis ? 20 : 5,\r\n                    bottom: 0,\r\n                  }}\r\n                >\r\n                  {areaWidget && (\r\n                    <defs>\r\n                      <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                        <stop offset=\"0%\" stopColor=\"#2781B0\" stopOpacity={1} />\r\n                        <stop\r\n                          offset=\"100%\"\r\n                          stopColor=\"#ffffff\"\r\n                          stopOpacity={0}\r\n                        />\r\n\r\n                        <stop\r\n                          offset=\"95%\"\r\n                          stopColor=\"#ffffff\"\r\n                          stopOpacity={0.8}\r\n                        />\r\n                      </linearGradient>\r\n                    </defs>\r\n                  )}\r\n                  <CartesianGrid\r\n                    strokeDasharray={areaWidget ? \"2 2\" : \"5 5\"}\r\n                    strokeWidth={1}\r\n                    strokeOpacity={1}\r\n                    stroke={\"#eee0e0\"}\r\n                    vertical={!areaWidget}\r\n                  />\r\n                  <XAxis\r\n                    dataKey=\"name\"\r\n                    tickFormatter={(value: any) =>\r\n                      xAxisFormatter(value, dspLongDate, true)\r\n                    }\r\n                    interval={intervalCount}\r\n                    tick={{\r\n                      fontSize: \"68%\",\r\n                      fontWeight: \"normal\",\r\n                      color: \"#404143\",\r\n                    }}\r\n                    tickCount={10}\r\n                    stroke={\"#082045\"}\r\n                  />\r\n                  <YAxis\r\n                    type={\"number\"}\r\n                    domain={[0, dataMax * 1.1]}\r\n                    hide={hideYAxis}\r\n                    tickFormatter={(value: any) => yAxisFormatter(value)}\r\n                    tick={{\r\n                      fontSize: \"68%\",\r\n                      fontWeight: \"normal\",\r\n                      color: \"#404143\",\r\n                    }}\r\n                    stroke={\"#082045\"}\r\n                  />\r\n                  {linearConfiguration.map((section, index) => {\r\n                    return (\r\n                      <Area\r\n                        key={`area-${section.dataKey}-${index.toString()}`}\r\n                        type=\"monotone\"\r\n                        dataKey={section.dataKey}\r\n                        isAnimationActive={false}\r\n                        stroke={!areaWidget ? section.lineColor : \"#D7E5F8\"}\r\n                        fill={areaWidget ? \"url(#colorUv)\" : section.fillColor}\r\n                        fillOpacity={areaWidget ? 0.65 : 0}\r\n                        strokeWidth={!areaWidget ? 3 : 0}\r\n                        strokeLinecap={\"round\"}\r\n                        dot={areaWidget ? <CustomizedDot /> : false}\r\n                      />\r\n                    );\r\n                  })}\r\n                  <Tooltip\r\n                    content={\r\n                      <LineChartTooltip\r\n                        linearConfiguration={linearConfiguration}\r\n                        yAxisFormatter={yAxisFormatter}\r\n                      />\r\n                    }\r\n                    wrapperStyle={{\r\n                      zIndex: 5000,\r\n                    }}\r\n                  />\r\n                </AreaChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n            {!areaWidget && (\r\n              <Fragment>\r\n                {zoomActivated && (\r\n                  <Fragment>\r\n                    <strong>Series</strong>\r\n                    <br />\r\n                    <br />\r\n                  </Fragment>\r\n                )}\r\n                {biggerThanMd && (\r\n                  <div className={classes.legendChart}>\r\n                    {linearConfiguration.map((section, index) => {\r\n                      return (\r\n                        <div\r\n                          className={classes.singleLegendContainer}\r\n                          key={`legend-${section.keyLabel}-${index.toString()}`}\r\n                        >\r\n                          <div\r\n                            className={classes.colorContainer}\r\n                            style={{ backgroundColor: section.lineColor }}\r\n                          />\r\n                          <div className={classes.legendLabel}>\r\n                            {section.keyLabel}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(LinearGraphWidget);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Cell, Pie, PieChart, ResponsiveContainer } from \"recharts\";\r\nimport { IPieChartConfiguration } from \"./types\";\r\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { IDashboardPanel } from \"../types\";\r\nimport { splitSizeMetric, widgetDetailsToPanel } from \"../utils\";\r\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\r\nimport get from \"lodash/get\";\r\nimport api from \"../../../../../common/api\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../../store\";\r\n\r\ninterface IPieChartWidget {\r\n  classes: any;\r\n  title: string;\r\n  panelItem: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  propLoading: boolean;\r\n\r\n  apiPrefix: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...widgetCommon,\r\n    loadingAlign: {\r\n      width: \"100%\",\r\n      paddingTop: \"15px\",\r\n      textAlign: \"center\",\r\n      margin: \"auto\",\r\n    },\r\n    pieChartLabel: {\r\n      fontSize: 60,\r\n      color: \"#07193E\",\r\n      fontWeight: \"bold\",\r\n      width: \"100%\",\r\n      \"& .unitText\": {\r\n        color: \"#767676\",\r\n        fontSize: 12,\r\n      },\r\n    },\r\n    chartContainer: {\r\n      width: \"100%\",\r\n      height: 140,\r\n    },\r\n  });\r\n\r\nconst PieChartWidget = ({\r\n  classes,\r\n  title,\r\n  panelItem,\r\n  timeStart,\r\n  timeEnd,\r\n  propLoading,\r\n\r\n  apiPrefix,\r\n}: IPieChartWidget) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [dataInner, setDataInner] = useState<object[]>([]);\r\n  const [dataOuter, setDataOuter] = useState<object[]>([]);\r\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (propLoading) {\r\n      setLoading(true);\r\n    }\r\n  }, [propLoading]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      let stepCalc = 0;\r\n      if (timeStart !== null && timeEnd !== null) {\r\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\r\n        const periods = Math.floor(secondsInPeriod / 60);\r\n\r\n        stepCalc = periods < 1 ? 15 : periods;\r\n      }\r\n\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/${apiPrefix}/info/widgets/${\r\n            panelItem.id\r\n          }/?step=${stepCalc}&${\r\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\r\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\r\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\r\n          }`\r\n        )\r\n        .then((res: any) => {\r\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\r\n          setDataInner(widgetsWithValue.data);\r\n          setDataOuter(widgetsWithValue.dataOuter as object[]);\r\n          setResult(widgetsWithValue);\r\n          setLoading(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [loading, panelItem, timeEnd, timeStart, dispatch, apiPrefix]);\r\n\r\n  const pieChartConfiguration = result\r\n    ? (result.widgetConfiguration as IPieChartConfiguration)\r\n    : [];\r\n  const middleLabel = result?.innerLabel;\r\n\r\n  const innerColors = get(pieChartConfiguration, \"innerChart.colorList\", []);\r\n  const outerColors = get(pieChartConfiguration, \"outerChart.colorList\", []);\r\n\r\n  return (\r\n    <div className={classes.singleValueContainer}>\r\n      <div className={classes.titleContainer}>{title}</div>\r\n      {loading && (\r\n        <div className={classes.loadingAlign}>\r\n          <Loader />\r\n        </div>\r\n      )}\r\n      {!loading && (\r\n        <div className={classes.contentContainer}>\r\n          <span className={classes.pieChartLabel}>\r\n            {middleLabel && splitSizeMetric(middleLabel)}\r\n          </span>\r\n          <div className={classes.chartContainer}>\r\n            <ResponsiveContainer width=\"99%\">\r\n              <PieChart margin={{ top: 5, bottom: 5 }}>\r\n                {dataOuter && (\r\n                  <Pie\r\n                    data={dataOuter as object[]}\r\n                    cx={\"50%\"}\r\n                    cy={\"50%\"}\r\n                    dataKey=\"value\"\r\n                    innerRadius={get(\r\n                      pieChartConfiguration,\r\n                      \"outerChart.innerRadius\",\r\n                      0\r\n                    )}\r\n                    outerRadius={get(\r\n                      pieChartConfiguration,\r\n                      \"outerChart.outerRadius\",\r\n                      \"80%\"\r\n                    )}\r\n                    startAngle={get(\r\n                      pieChartConfiguration,\r\n                      \"outerChart.startAngle\",\r\n                      0\r\n                    )}\r\n                    endAngle={get(\r\n                      pieChartConfiguration,\r\n                      \"outerChart.endAngle\",\r\n                      360\r\n                    )}\r\n                    fill=\"#201763\"\r\n                  >\r\n                    {dataOuter.map((entry, index) => (\r\n                      <Cell\r\n                        key={`cellOuter-${index}`}\r\n                        fill={\r\n                          typeof outerColors[index] === \"undefined\"\r\n                            ? \"#393939\"\r\n                            : outerColors[index]\r\n                        }\r\n                      />\r\n                    ))}\r\n                  </Pie>\r\n                )}\r\n                {dataInner && (\r\n                  <Pie\r\n                    data={dataInner as object[]}\r\n                    dataKey=\"value\"\r\n                    cx={\"50%\"}\r\n                    cy={\"50%\"}\r\n                    innerRadius={get(\r\n                      pieChartConfiguration,\r\n                      \"innerChart.innerRadius\",\r\n                      0\r\n                    )}\r\n                    outerRadius={get(\r\n                      pieChartConfiguration,\r\n                      \"innerChart.outerRadius\",\r\n                      \"80%\"\r\n                    )}\r\n                    startAngle={get(\r\n                      pieChartConfiguration,\r\n                      \"innerChart.startAngle\",\r\n                      0\r\n                    )}\r\n                    endAngle={get(\r\n                      pieChartConfiguration,\r\n                      \"innerChart.endAngle\",\r\n                      360\r\n                    )}\r\n                    fill=\"#201763\"\r\n                  >\r\n                    {dataInner.map((entry, index) => {\r\n                      return (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={\r\n                            typeof innerColors[index] === \"undefined\"\r\n                              ? \"#393939\"\r\n                              : innerColors[index]\r\n                          }\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Pie>\r\n                )}\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(PieChartWidget);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport api from \"../../../../../common/api\";\r\nimport { widgetDetailsToPanel } from \"../utils\";\r\nimport { IDashboardPanel } from \"../types\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../../store\";\r\n\r\ninterface ISimpleWidget {\r\n  classes: any;\r\n  iconWidget: any;\r\n  title: string;\r\n  panelItem: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  propLoading: boolean;\r\n\r\n  apiPrefix: string;\r\n  renderFn?: undefined | null | ((arg: Record<string, any>) => any);\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    mainWidgetContainer: {\r\n      display: \"inline-flex\",\r\n      color: \"#072A4D\",\r\n      alignItems: \"center\",\r\n    },\r\n    icon: {\r\n      color: \"#072A4D\",\r\n      fill: \"#072A4D\",\r\n      marginRight: 5,\r\n      marginLeft: 12,\r\n    },\r\n    widgetLabel: {\r\n      fontWeight: \"bold\",\r\n      textTransform: \"uppercase\",\r\n      marginRight: 10,\r\n    },\r\n    widgetValue: {\r\n      marginRight: 25,\r\n    },\r\n  });\r\n\r\nconst SimpleWidget = ({\r\n  classes,\r\n  iconWidget,\r\n  title,\r\n  panelItem,\r\n  timeStart,\r\n  timeEnd,\r\n  propLoading,\r\n  apiPrefix,\r\n  renderFn,\r\n}: ISimpleWidget) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [data, setData] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (propLoading) {\r\n      setLoading(true);\r\n    }\r\n  }, [propLoading]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      let stepCalc = 0;\r\n      if (timeStart !== null && timeEnd !== null) {\r\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\r\n        const periods = Math.floor(secondsInPeriod / 60);\r\n\r\n        stepCalc = periods < 1 ? 15 : periods;\r\n      }\r\n\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/${apiPrefix}/info/widgets/${\r\n            panelItem.id\r\n          }/?step=${stepCalc}&${\r\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\r\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\r\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\r\n          }`\r\n        )\r\n        .then((res: any) => {\r\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\r\n          setData(widgetsWithValue.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [loading, panelItem, timeEnd, timeStart, dispatch, apiPrefix]);\r\n\r\n  if (renderFn) {\r\n    return renderFn({\r\n      valueToRender: data,\r\n      loading,\r\n      title,\r\n      id: panelItem.id,\r\n      iconWidget: iconWidget,\r\n    });\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {loading && (\r\n        <div className={classes.loadingAlign}>\r\n          <Loader />\r\n        </div>\r\n      )}\r\n      {!loading && (\r\n        <span className={classes.mainWidgetContainer}>\r\n          <span className={classes.icon}>{iconWidget ? iconWidget : null}</span>\r\n          <span className={classes.widgetLabel}>{title}: </span>\r\n          <span className={classes.widgetValue}>{data}</span>\r\n        </span>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst connector = connect(null, {\r\n  setErrorSnackMessage: setErrorSnackMessage,\r\n});\r\n\r\nexport default withStyles(styles)(connector(SimpleWidget));\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst DashboardItemBox = ({ children }: { children: any }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        border: \"1px solid #f1f1f1\",\r\n        borderRadius: \"3px\",\r\n        padding: {\r\n          md: \"15px\",\r\n          xs: \"5px\",\r\n        },\r\n        height: {\r\n          md: \"136px\",\r\n          xs: \"auto\",\r\n        },\r\n        maxWidth: {\r\n          sm: \"100%\",\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardItemBox;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box, Tooltip } from \"@mui/material\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\n\r\nconst NumericStatCard = ({\r\n  value,\r\n  label = \"\",\r\n  icon = null,\r\n  loading = false,\r\n}: {\r\n  value: string | number;\r\n  label?: any;\r\n  icon?: any;\r\n  loading?: boolean;\r\n}) => {\r\n  const getContent = () => {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: \"flex\",\r\n          width: \"100%\",\r\n          padding: {\r\n            sm: \"0 8px 0 8px\",\r\n            xs: \"0 10px 0 10px\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n            marginTop: \"12px\",\r\n            zIndex: 10,\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              fontSize: \"16px\",\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            {label}\r\n          </Box>\r\n\r\n          <Tooltip title={value} placement=\"bottom\" enterDelay={500}>\r\n            <Box\r\n              sx={{\r\n                fontSize: {\r\n                  xl: \"55px\",\r\n                  lg: \"50px\",\r\n                  md: \"36px\",\r\n                  sm: \"35px\",\r\n                  xs: \"35px\",\r\n                },\r\n                fontWeight: 600,\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                maxWidth: {\r\n                  md: 187,\r\n                  xs: 200,\r\n                },\r\n                flexFlow: {\r\n                  md: \"row\",\r\n                  xs: \"column\",\r\n                },\r\n              }}\r\n            >\r\n              {value}\r\n            </Box>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            marginTop: \"8px\",\r\n            maxWidth: \"26px\",\r\n            \"& .min-icon\": {\r\n              width: \"16px\",\r\n              height: \"16px\",\r\n            },\r\n          }}\r\n        >\r\n          {}\r\n          {loading ? (\r\n            <Loader style={{ width: \"16px\", height: \"16px\" }} />\r\n          ) : (\r\n            icon\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        fontFamily: \"Lato,sans-serif\",\r\n        color: \"#07193E\",\r\n        maxWidth: \"300px\",\r\n        display: \"flex\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        cursor: \"default\",\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      {getContent()}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NumericStatCard;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport NumericStatCard from \"./NumericStatCard\";\r\nimport { BucketsIcon } from \"../../../../../icons\";\r\n\r\nconst BucketsCountItem = ({\r\n  title,\r\n  value,\r\n  loading,\r\n}: {\r\n  title: string;\r\n  value: string;\r\n  loading?: boolean;\r\n}) => {\r\n  return (\r\n    <NumericStatCard\r\n      label={title}\r\n      icon={<BucketsIcon />}\r\n      value={value}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BucketsCountItem;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport NumericStatCard from \"./NumericStatCard\";\r\nimport { TotalObjectsIcon } from \"../../../../../icons\";\r\n\r\nconst ObjectsCountItem = ({\r\n  title,\r\n  value,\r\n  loading,\r\n}: {\r\n  title: string;\r\n  value: string;\r\n  loading?: boolean;\r\n}) => {\r\n  return (\r\n    <NumericStatCard\r\n      label={title}\r\n      icon={<TotalObjectsIcon />}\r\n      value={value}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ObjectsCountItem;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IDashboardPanel } from \"../types\";\r\nimport { widgetDetailsToPanel } from \"../utils\";\r\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\r\nimport { representationNumber } from \"../../../../../common/utils\";\r\nimport api from \"../../../../../common/api\";\r\nimport DashboardItemBox from \"../../DashboardItemBox\";\r\nimport BucketsCountItem from \"./BucketsCountItem\";\r\nimport ObjectsCountItem from \"./ObjectsCountItem\";\r\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../../store\";\r\n\r\ninterface ISingleRepWidget {\r\n  title: string;\r\n  panelItem: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  propLoading: boolean;\r\n\r\n  color?: string;\r\n  fillColor?: string;\r\n  apiPrefix: string;\r\n}\r\n\r\nconst SingleRepWidget = ({\r\n  title,\r\n  panelItem,\r\n  timeStart,\r\n  timeEnd,\r\n  propLoading,\r\n\r\n  apiPrefix,\r\n}: ISingleRepWidget) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [result, setResult] = useState<IDashboardPanel | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (propLoading) {\r\n      setLoading(true);\r\n    }\r\n  }, [propLoading]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      let stepCalc = 0;\r\n      if (timeStart !== null && timeEnd !== null) {\r\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\r\n        const periods = Math.floor(secondsInPeriod / 60);\r\n\r\n        stepCalc = periods < 1 ? 15 : periods;\r\n      }\r\n\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/${apiPrefix}/info/widgets/${\r\n            panelItem.id\r\n          }/?step=${stepCalc}&${\r\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\r\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\r\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\r\n          }`\r\n        )\r\n        .then((res: any) => {\r\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\r\n          setResult(widgetsWithValue);\r\n          setLoading(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [loading, panelItem, timeEnd, timeStart, dispatch, apiPrefix]);\r\n\r\n  let repNumber = \"\";\r\n\r\n  if (result) {\r\n    const resultRep = parseInt(result.innerLabel || \"0\");\r\n\r\n    if (!isNaN(resultRep)) {\r\n      repNumber = representationNumber(resultRep);\r\n    } else {\r\n      repNumber = \"0\";\r\n    }\r\n  }\r\n\r\n  const renderById = (id: number) => {\r\n    if (id === 66) {\r\n      return (\r\n        <DashboardItemBox>\r\n          <BucketsCountItem\r\n            loading={loading}\r\n            title={title}\r\n            value={result ? repNumber : \"\"}\r\n          />\r\n        </DashboardItemBox>\r\n      );\r\n    }\r\n    if (id === 44) {\r\n      return (\r\n        <DashboardItemBox>\r\n          <ObjectsCountItem\r\n            loading={loading}\r\n            title={title}\r\n            value={result ? repNumber : \"\"}\r\n          />\r\n        </DashboardItemBox>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return renderById(panelItem.id);\r\n};\r\n\r\nconst connector = connect(null, {\r\n  setErrorSnackMessage: setErrorSnackMessage,\r\n});\r\n\r\nexport default connector(SingleRepWidget);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport api from \"../../../../../common/api\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\nimport { widgetCommon } from \"../../../Common/FormComponents/common/styleLibrary\";\r\nimport { splitSizeMetric, widgetDetailsToPanel } from \"../utils\";\r\nimport { IDashboardPanel } from \"../types\";\r\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\r\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../../store\";\r\n\r\ninterface ISingleValueWidget {\r\n  title: string;\r\n  panelItem: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  propLoading: boolean;\r\n\r\n  classes: any;\r\n  apiPrefix: string;\r\n  renderFn?: (arg: Record<string, any>) => any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...widgetCommon,\r\n    loadingAlign: {\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n      margin: \"auto\",\r\n    },\r\n    metric: {\r\n      fontSize: 60,\r\n      lineHeight: 1,\r\n      color: \"#07193E\",\r\n      fontWeight: 700,\r\n    },\r\n    titleElement: {\r\n      fontSize: 10,\r\n      color: \"#767676\",\r\n      fontWeight: 700,\r\n    },\r\n    containerAlignment: {\r\n      display: \"flex\",\r\n      height: 140,\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      \"& .unitText\": {\r\n        color: \"#767676\",\r\n        fontSize: 12,\r\n      },\r\n    },\r\n  });\r\n\r\nconst SingleValueWidget = ({\r\n  title,\r\n  panelItem,\r\n  timeStart,\r\n  timeEnd,\r\n  propLoading,\r\n  classes,\r\n  apiPrefix,\r\n  renderFn,\r\n}: ISingleValueWidget) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [data, setData] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (propLoading) {\r\n      setLoading(true);\r\n    }\r\n  }, [propLoading]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      let stepCalc = 0;\r\n      if (timeStart !== null && timeEnd !== null) {\r\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\r\n        const periods = Math.floor(secondsInPeriod / 60);\r\n\r\n        stepCalc = periods < 1 ? 15 : periods;\r\n      }\r\n\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/${apiPrefix}/info/widgets/${\r\n            panelItem.id\r\n          }/?step=${stepCalc}&${\r\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\r\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\r\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\r\n          }`\r\n        )\r\n        .then((res: any) => {\r\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\r\n          setData(widgetsWithValue.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [loading, panelItem, timeEnd, timeStart, dispatch, apiPrefix]);\r\n\r\n  const valueToRender = splitSizeMetric(data);\r\n\r\n  if (renderFn) {\r\n    return renderFn({ valueToRender, loading, title, id: panelItem.id });\r\n  }\r\n  return (\r\n    <div className={classes.containerAlignment}>\r\n      {loading && (\r\n        <div className={classes.loadingAlign}>\r\n          <Loader />\r\n        </div>\r\n      )}\r\n      {!loading && (\r\n        <Fragment>\r\n          <div className={classes.metric}>{splitSizeMetric(data)}</div>\r\n          <div className={classes.titleElement}>{title}</div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst connector = connect(null, {\r\n  setErrorSnackMessage: setErrorSnackMessage,\r\n});\r\n\r\nexport default withStyles(styles)(connector(SingleValueWidget));\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { IDashboardPanel } from \"../types\";\r\nimport { Box } from \"@mui/material\";\r\nimport api from \"../../../../../common/api\";\r\nimport { widgetDetailsToPanel } from \"../utils\";\r\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\r\n\r\nimport {\r\n  calculateBytes,\r\n  capacityColors,\r\n  niceBytesInt,\r\n} from \"../../../../../common/utils\";\r\nimport { Cell, Pie, PieChart } from \"recharts\";\r\nimport { ReportedUsageIcon } from \"../../../../../icons\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../../store\";\r\n\r\nconst CapacityItem = ({\r\n  value,\r\n  timeStart,\r\n  timeEnd,\r\n  propLoading,\r\n  apiPrefix,\r\n}: {\r\n  value: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  propLoading: boolean;\r\n  apiPrefix: string;\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  const [totalUsableFree, setTotalUsableFree] = useState<number>(0);\r\n  const [totalUsableFreeRatio, setTotalUsableFreeRatio] = useState<number>(0);\r\n  const [totalUsed, setTotalUsed] = useState<number>(0);\r\n  const [totalUsable, setTotalUsable] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if (propLoading) {\r\n      setLoading(true);\r\n    }\r\n  }, [propLoading]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      let stepCalc = 0;\r\n      if (timeStart !== null && timeEnd !== null) {\r\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\r\n        const periods = Math.floor(secondsInPeriod / 60);\r\n\r\n        stepCalc = periods < 1 ? 15 : periods;\r\n      }\r\n\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/${apiPrefix}/info/widgets/${value.id}/?step=${stepCalc}&${\r\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\r\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\r\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\r\n          }`\r\n        )\r\n        .then((res: any) => {\r\n          const widgetsWithValue = widgetDetailsToPanel(res, value);\r\n\r\n          let tUsable = 0;\r\n          let tUsed = 0;\r\n          let tFree = 0;\r\n\r\n          widgetsWithValue.data.forEach((eachArray: any[]) => {\r\n            eachArray.forEach((itemSum) => {\r\n              switch (itemSum.legend) {\r\n                case \"Total Usable\":\r\n                  tUsable += itemSum.value;\r\n                  break;\r\n                case \"Used Space\":\r\n                  tUsed += itemSum.value;\r\n                  break;\r\n                case \"Usable Free\":\r\n                  tFree += itemSum.value;\r\n                  break;\r\n              }\r\n            });\r\n          });\r\n\r\n          const freeRatio = Math.round((tFree / tUsable) * 100);\r\n\r\n          setTotalUsableFree(tFree);\r\n          setTotalUsableFreeRatio(freeRatio);\r\n          setTotalUsed(tUsed);\r\n          setTotalUsable(tUsable);\r\n\r\n          setLoading(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [loading, value, timeEnd, timeStart, dispatch, apiPrefix]);\r\n\r\n  const usedConvert = calculateBytes(totalUsed, true, false);\r\n\r\n  const plotValues = [\r\n    {\r\n      value: totalUsableFree,\r\n      color: \"#D6D6D6\",\r\n      label: \"Usable Available Space\",\r\n    },\r\n    {\r\n      value: totalUsed,\r\n      color: capacityColors(totalUsed, totalUsable),\r\n      label: \"Used Space\",\r\n    },\r\n  ];\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexFlow: {\r\n          sm: \"row\",\r\n          xs: \"column\",\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          fontSize: \"16px\",\r\n          fontWeight: 600,\r\n          alignSelf: {\r\n            xs: \"flex-start\",\r\n          },\r\n        }}\r\n      >\r\n        Capacity\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          width: 110,\r\n          height: 110,\r\n          marginLeft: {\r\n            sm: \"auto\",\r\n            xs: \"\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n            alignItems: \"center\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            fontWeight: \"bold\",\r\n            color: \"#000\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          {`${totalUsableFreeRatio}%`}\r\n          <br />\r\n          <Box\r\n            sx={{\r\n              color: \"#8F9090\",\r\n              fontSize: \"10px\",\r\n              display: \"flex\",\r\n              flexFlow: \"column\",\r\n              alignItems: \"center\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            Free\r\n          </Box>\r\n        </Box>\r\n        <PieChart width={110} height={110}>\r\n          <Pie\r\n            data={plotValues}\r\n            cx={\"50%\"}\r\n            cy={\"50%\"}\r\n            dataKey=\"value\"\r\n            outerRadius={50}\r\n            innerRadius={40}\r\n            startAngle={-70}\r\n            endAngle={360}\r\n            animationDuration={1}\r\n          >\r\n            {plotValues.map((entry, index) => (\r\n              <Cell key={`cellCapacity-${index}`} fill={entry.color} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          marginLeft: {\r\n            sm: \"auto\",\r\n            xs: \"\",\r\n          },\r\n        }}\r\n      >\r\n        <Box>\r\n          <Box\r\n            sx={{\r\n              color: \"#5E5E5E\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            Used:\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              \"& .value\": {\r\n                fontSize: \"50px\",\r\n                fontFamily: \"Lato\",\r\n                fontWeight: 600,\r\n                alignSelf: \"flex-end\",\r\n                lineHeight: 1,\r\n              },\r\n              \"& .unit\": {\r\n                color: \"#5E5E5E\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"14px\",\r\n                marginLeft: \"12px\",\r\n                alignSelf: \"flex-end\",\r\n              },\r\n            }}\r\n          >\r\n            <div className=\"value\">{usedConvert.total}</div>\r\n            <div className=\"unit\">{usedConvert.unit}</div>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              marginTop: \"5px\",\r\n              \"& .value\": {\r\n                color: \"#5E5E5E\",\r\n                fontWeight: \"bold\",\r\n                fontSize: \"14px\",\r\n                textAlign: \"right\",\r\n              },\r\n            }}\r\n          >\r\n            <div className=\"value\">Of: {niceBytesInt(totalUsable)}</div>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            marginLeft: \"15px\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          <Box>\r\n            {loading ? (\r\n              <Loader style={{ width: \"26px\", height: \"26px\" }} />\r\n            ) : (\r\n              <ReportedUsageIcon />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CapacityItem;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { SuccessIcon } from \"../../../icons\";\r\nimport Loader from \"../Common/Loader/Loader\";\r\n\r\nconst TimeStatItem = ({\r\n  icon,\r\n  label,\r\n  value,\r\n  loading = false,\r\n}: {\r\n  icon: any;\r\n  label: any;\r\n  value: string;\r\n  loading?: boolean;\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"grid\",\r\n        alignItems: \"center\",\r\n        gap: \"8px\",\r\n        height: \"33px\",\r\n        paddingLeft: \"15px\",\r\n        gridTemplateColumns: {\r\n          xs: \"20px 1.5fr .5fr 20px\",\r\n        },\r\n        background: \"#EBF9EE\",\r\n\r\n        \"& .min-icon\": {\r\n          height: \"12px\",\r\n          width: \"12px\",\r\n          fill: \"#4CCB92\",\r\n        },\r\n\r\n        \"& .ok-icon\": {\r\n          height: \"8px\",\r\n          width: \"8px\",\r\n          fill: \"#4CCB92\",\r\n          color: \"#4CCB92\",\r\n        },\r\n      }}\r\n      className=\"dashboard-time-stat-item\"\r\n    >\r\n      {loading ? <Loader style={{ width: 10, height: 10 }} /> : icon}\r\n      <Box\r\n        sx={{\r\n          fontSize: \"12px\",\r\n          color: \"#4CCB92\",\r\n          fontWeight: 600,\r\n        }}\r\n      >\r\n        {label}\r\n      </Box>\r\n      <Box sx={{ fontSize: \"12px\", color: \"#4CCB92\" }}>{value}</Box>\r\n      {value !== \"n/a\" ? <SuccessIcon className=\"ok-icon\" /> : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TimeStatItem;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport TimeStatItem from \"../../TimeStatItem\";\r\n\r\nexport type SimpleWidgetRenderProps = {\r\n  valueToRender?: any;\r\n  loading?: boolean;\r\n  title?: any;\r\n  id?: number;\r\n  iconWidget?: any;\r\n};\r\nconst HealActivityRenderer = ({\r\n  valueToRender = \"\",\r\n  loading = false,\r\n  iconWidget = null,\r\n}: SimpleWidgetRenderProps) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        height: \"47px\",\r\n        borderRadius: \"2px\",\r\n\r\n        \"& .dashboard-time-stat-item\": {\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        },\r\n      }}\r\n    >\r\n      <TimeStatItem\r\n        loading={loading}\r\n        icon={iconWidget}\r\n        label={\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                display: {\r\n                  md: \"inline\",\r\n                  xs: \"none\",\r\n                },\r\n              }}\r\n            >\r\n              Time since last\r\n            </Box>{\" \"}\r\n            Heal Activity\r\n          </Box>\r\n        }\r\n        value={valueToRender}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HealActivityRenderer;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport TimeStatItem from \"../../TimeStatItem\";\r\nimport { SimpleWidgetRenderProps } from \"./HealActivityRenderer\";\r\n\r\nconst ScanActivityRenderer = ({\r\n  valueToRender = \"\",\r\n  loading = false,\r\n  iconWidget = null,\r\n}: SimpleWidgetRenderProps) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        height: \"47px\",\r\n        borderRadius: \"2px\",\r\n\r\n        \"& .dashboard-time-stat-item\": {\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        },\r\n      }}\r\n    >\r\n      <TimeStatItem\r\n        loading={loading}\r\n        icon={iconWidget}\r\n        label={\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                display: {\r\n                  md: \"inline\",\r\n                  xs: \"none\",\r\n                },\r\n              }}\r\n            >\r\n              Time since last\r\n            </Box>{\" \"}\r\n            Scan Activity\r\n          </Box>\r\n        }\r\n        value={valueToRender}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScanActivityRenderer;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport TimeStatItem from \"../../TimeStatItem\";\r\n\r\nexport type SimpleWidgetRenderProps = {\r\n  valueToRender?: any;\r\n  loading?: boolean;\r\n  title?: any;\r\n  id?: number;\r\n  iconWidget?: any;\r\n};\r\nconst UptimeActivityRenderer = ({\r\n  valueToRender = \"\",\r\n  loading = false,\r\n  iconWidget = null,\r\n}: SimpleWidgetRenderProps) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        height: \"47px\",\r\n        borderRadius: \"2px\",\r\n\r\n        \"& .dashboard-time-stat-item\": {\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        },\r\n      }}\r\n    >\r\n      <TimeStatItem\r\n        loading={loading}\r\n        icon={iconWidget}\r\n        label={<Box>Uptime</Box>}\r\n        value={valueToRender}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UptimeActivityRenderer;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { IDashboardPanel, widgetType } from \"./types\";\r\nimport BarChartWidget from \"./Widgets/BarChartWidget\";\r\nimport LinearGraphWidget from \"./Widgets/LinearGraphWidget\";\r\nimport PieChartWidget from \"./Widgets/PieChartWidget\";\r\nimport SimpleWidget from \"./Widgets/SimpleWidget\";\r\nimport SingleRepWidget from \"./Widgets/SingleRepWidget\";\r\nimport SingleValueWidget from \"./Widgets/SingleValueWidget\";\r\nimport CapacityItem from \"./Widgets/CapacityItem\";\r\nimport DashboardItemBox from \"../DashboardItemBox\";\r\nimport HealActivityRenderer, {\r\n  SimpleWidgetRenderProps,\r\n} from \"./Widgets/HealActivityRenderer\";\r\nimport ScanActivityRenderer from \"./Widgets/ScanActivityRenderer\";\r\nimport UptimeActivityRenderer from \"./Widgets/UptimeActivityRenderer\";\r\n\r\nexport const componentToUse = (\r\n  value: IDashboardPanel,\r\n  timeStart: any,\r\n  timeEnd: any,\r\n  loading: boolean,\r\n  apiPrefix: string,\r\n  zoomActivated: boolean = false\r\n) => {\r\n  switch (value.type) {\r\n    case widgetType.singleValue:\r\n      return (\r\n        <SingleValueWidget\r\n          title={value.title}\r\n          panelItem={value}\r\n          timeStart={timeStart}\r\n          timeEnd={timeEnd}\r\n          propLoading={loading}\r\n          apiPrefix={apiPrefix}\r\n        />\r\n      );\r\n    case widgetType.simpleWidget:\r\n      let renderFn;\r\n      let CmpToRender: any = null;\r\n      if (value.id === 80) {\r\n        CmpToRender = HealActivityRenderer;\r\n      } else if (value.id === 81) {\r\n        CmpToRender = ScanActivityRenderer;\r\n      } else if (value.id === 1) {\r\n        CmpToRender = UptimeActivityRenderer;\r\n      }\r\n\r\n      if ([80, 81, 1].includes(value.id)) {\r\n        renderFn = ({\r\n          valueToRender,\r\n          loading,\r\n          title,\r\n          id,\r\n          iconWidget,\r\n        }: SimpleWidgetRenderProps) => {\r\n          return (\r\n            <CmpToRender\r\n              valueToRender={valueToRender}\r\n              loading={loading}\r\n              title={title}\r\n              id={id}\r\n              iconWidget={iconWidget}\r\n            />\r\n          );\r\n        };\r\n      }\r\n      return (\r\n        <SimpleWidget\r\n          title={value.title}\r\n          panelItem={value}\r\n          timeStart={timeStart}\r\n          timeEnd={timeEnd}\r\n          propLoading={loading}\r\n          apiPrefix={apiPrefix}\r\n          iconWidget={value.widgetIcon}\r\n          renderFn={renderFn}\r\n        />\r\n      );\r\n    case widgetType.pieChart:\r\n      if (value.id === 50) {\r\n        return (\r\n          <DashboardItemBox>\r\n            <CapacityItem\r\n              value={value}\r\n              timeStart={timeStart}\r\n              timeEnd={timeEnd}\r\n              propLoading={loading}\r\n              apiPrefix={apiPrefix}\r\n            />\r\n          </DashboardItemBox>\r\n        );\r\n      }\r\n      return (\r\n        <PieChartWidget\r\n          title={value.title}\r\n          panelItem={value}\r\n          timeStart={timeStart}\r\n          timeEnd={timeEnd}\r\n          propLoading={loading}\r\n          apiPrefix={apiPrefix}\r\n        />\r\n      );\r\n    case widgetType.linearGraph:\r\n    case widgetType.areaGraph:\r\n      return (\r\n        <LinearGraphWidget\r\n          title={value.title}\r\n          panelItem={value}\r\n          timeStart={timeStart}\r\n          timeEnd={timeEnd}\r\n          propLoading={loading}\r\n          hideYAxis={value.disableYAxis}\r\n          xAxisFormatter={value.xAxisFormatter}\r\n          yAxisFormatter={value.yAxisFormatter}\r\n          apiPrefix={apiPrefix}\r\n          areaWidget={value.type === widgetType.areaGraph}\r\n          zoomActivated={zoomActivated}\r\n        />\r\n      );\r\n    case widgetType.barChart:\r\n      return (\r\n        <BarChartWidget\r\n          title={value.title}\r\n          panelItem={value}\r\n          timeStart={timeStart}\r\n          timeEnd={timeEnd}\r\n          propLoading={loading}\r\n          apiPrefix={apiPrefix}\r\n          zoomActivated={zoomActivated}\r\n        />\r\n      );\r\n    case widgetType.singleRep:\r\n      const fillColor = value.fillColor ? value.fillColor : value.color;\r\n      return (\r\n        <SingleRepWidget\r\n          title={value.title}\r\n          panelItem={value}\r\n          timeStart={timeStart}\r\n          timeEnd={timeEnd}\r\n          propLoading={loading}\r\n          color={value.color as string}\r\n          fillColor={fillColor as string}\r\n          apiPrefix={apiPrefix}\r\n        />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\n\r\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\r\nimport { IDashboardPanel } from \"./types\";\r\nimport { componentToUse } from \"./widgetUtils\";\r\nimport { closeZoomPage } from \"../dashboardSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\ninterface IZoomWidget {\r\n  widgetRender: number;\r\n  value: IDashboardPanel | null;\r\n  modalOpen: boolean;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  apiPrefix: string;\r\n}\r\n\r\nconst ZoomWidget = ({\r\n  value,\r\n  modalOpen,\r\n  timeStart,\r\n  timeEnd,\r\n  apiPrefix,\r\n}: IZoomWidget) => {\r\n  const dispatch = useAppDispatch();\r\n  if (!value) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ModalWrapper\r\n      title={value.title}\r\n      onClose={() => {\r\n        dispatch(closeZoomPage());\r\n      }}\r\n      modalOpen={modalOpen}\r\n      wideLimit={false}\r\n      noContentPadding\r\n    >\r\n      <Fragment>\r\n        {componentToUse(value, timeStart, timeEnd, true, apiPrefix, true)}\r\n      </Fragment>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default ZoomWidget;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Box } from \"@mui/material\";\r\nimport { SxProps, Theme } from \"@mui/material/styles\";\r\n\r\nexport type DLayoutColumnProps = {\r\n  componentId: number;\r\n  sx?: SxProps<Theme>;\r\n};\r\nexport type DLayoutRowProps = {\r\n  sx?: SxProps<Theme>;\r\n  columns: DLayoutColumnProps[];\r\n};\r\n\r\nexport const summaryPanelsLayout: DLayoutRowProps[] = [\r\n  {\r\n    sx: {\r\n      minWidth: 0,\r\n      display: \"grid\",\r\n      gridTemplateColumns: {\r\n        md: \"1fr 1fr 1fr 1fr\",\r\n        sm: \"1fr 1fr\",\r\n        xs: \"1fr\",\r\n      },\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 66,\r\n      },\r\n      {\r\n        componentId: 44,\r\n      },\r\n      {\r\n        componentId: 500,\r\n      },\r\n      {\r\n        componentId: 501,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      minWidth: 0, // important to avoid css grid blow out.\r\n      gridTemplateColumns: {\r\n        md: \"1fr 1fr\",\r\n        xs: \"1fr\",\r\n      },\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 50,\r\n      },\r\n      {\r\n        componentId: 502,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      minWidth: 0,\r\n      gridTemplateColumns: {\r\n        md: \"1fr 1fr 1fr\",\r\n        xs: \"1fr\",\r\n      },\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 80,\r\n      },\r\n      {\r\n        componentId: 81,\r\n      },\r\n      {\r\n        componentId: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      minWidth: 0,\r\n      gridTemplateColumns: {\r\n        sm: \"1fr 1fr\",\r\n        xs: \"1fr\",\r\n      },\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 68,\r\n      },\r\n      {\r\n        componentId: 52,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      minWidth: 0,\r\n      gridTemplateColumns: {\r\n        sm: \"1fr 1fr\",\r\n        xs: \"1fr\",\r\n      },\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 63,\r\n      },\r\n      {\r\n        componentId: 70,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const trafficPanelsLayout: DLayoutRowProps[] = [\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr\",\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 60,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      minWidth: 0,\r\n      gridTemplateColumns: {\r\n        sm: \"1fr 1fr\",\r\n        xs: \"1fr\",\r\n      },\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 71,\r\n        sx: {\r\n          flex: 1,\r\n          width: \"50%\",\r\n          flexShrink: 0,\r\n        },\r\n      },\r\n      {\r\n        componentId: 17,\r\n        sx: {\r\n          flex: 1,\r\n          width: \"50%\",\r\n          flexShrink: 0,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr\",\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 73,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const resourcesPanelsLayout: DLayoutRowProps[] = [\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      minWidth: 0,\r\n      gridTemplateColumns: \"1fr 1fr\",\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 76,\r\n      },\r\n      {\r\n        componentId: 77,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      minWidth: 0,\r\n      gridTemplateColumns: \"1fr 1fr\",\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 82,\r\n      },\r\n      {\r\n        componentId: 74,\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport const resourcesPanelsLayoutAdvanced: DLayoutRowProps[] = [\r\n  {\r\n    sx: {\r\n      display: \"grid\",\r\n      minWidth: 0,\r\n      gridTemplateColumns: \"1fr 1fr\",\r\n      gap: \"30px\",\r\n    },\r\n    columns: [\r\n      {\r\n        componentId: 11,\r\n      },\r\n      {\r\n        componentId: 8,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const RowPanelLayout = ({ children }: { children: any }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr\",\r\n        gap: \"30px\",\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Card, CardHeader } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport React, { Fragment } from \"react\";\r\nimport { widgetCommon } from \"../Common/FormComponents/common/styleLibrary\";\r\n\r\nexport interface ISubInterface {\r\n  message: string;\r\n  fontWeight?: \"normal\" | \"bold\";\r\n}\r\n\r\ninterface ICommonCard {\r\n  title: string;\r\n  metricValue: any;\r\n  metricUnit?: string;\r\n  subMessage?: ISubInterface;\r\n  moreLink?: string;\r\n  rightComponent?: any;\r\n  extraMargin?: boolean;\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...widgetCommon,\r\n    cardRoot: {\r\n      ...widgetCommon.singleValueContainer,\r\n      \"&.MuiPaper-root\": {\r\n        borderRadius: 10,\r\n      },\r\n    },\r\n    metricText: {\r\n      fontSize: 70,\r\n      lineHeight: 1.1,\r\n      color: \"#07193E\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    unitText: {\r\n      fontSize: 10,\r\n      color: \"#767676\",\r\n      fontWeight: \"normal\",\r\n    },\r\n    subHearderContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    subMessage: {\r\n      fontSize: 10,\r\n      color: \"#767676\",\r\n      \"&.bold\": {\r\n        fontWeight: \"bold\",\r\n      },\r\n    },\r\n    headerContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    viewAll: {\r\n      fontSize: 10,\r\n      color: \"#C83B51\",\r\n      textTransform: \"capitalize\",\r\n\r\n      \"& a, & a:hover, & a:visited, & a:active\": {\r\n        color: \"#C83B51\",\r\n      },\r\n    },\r\n    extraMargin: {\r\n      margin: \"10px 20px 10px 0\",\r\n    },\r\n  });\r\n\r\nconst cardSubStyles = makeStyles({\r\n  root: { backgroundColor: \"#fff\", padding: 0 },\r\n  title: {\r\n    ...widgetCommon.titleContainer,\r\n  },\r\n  content: {\r\n    maxWidth: \"100%\",\r\n  },\r\n});\r\n\r\nconst CommonCard = ({\r\n  title,\r\n  metricValue,\r\n  metricUnit,\r\n  subMessage,\r\n  moreLink,\r\n  rightComponent,\r\n  extraMargin = false,\r\n  classes,\r\n}: ICommonCard) => {\r\n  const subStyles = cardSubStyles();\r\n  const SubHeader = () => {\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.subHearderContainer}>\r\n          <div className={classes.leftSide}>\r\n            <div>\r\n              <span className={classes.metricText}>\r\n                {metricValue}\r\n                <span className={classes.unitText}>{metricUnit}</span>\r\n              </span>\r\n            </div>\r\n            {subMessage && (\r\n              <div\r\n                className={`${classes.subMessage} ${\r\n                  subMessage.fontWeight ? subMessage.fontWeight : \"\"\r\n                }`}\r\n              >\r\n                {subMessage.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={classes.rightSide}>{rightComponent}</div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const Header = () => {\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.headerContainer}>\r\n          <span className={classes.title}>{title}</span>\r\n          {moreLink && (\r\n            <Fragment>\r\n              <span className={classes.viewAll}>\r\n                <Link to={moreLink}>View All</Link>\r\n              </span>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card\r\n        className={`${classes.cardRoot} ${\r\n          extraMargin ? classes.extraMargin : \"\"\r\n        }`}\r\n      >\r\n        {metricValue !== \"\" && (\r\n          <CardHeader\r\n            title={<Header />}\r\n            subheader={\r\n              <Fragment>\r\n                <SubHeader />\r\n              </Fragment>\r\n            }\r\n            classes={{\r\n              root: subStyles.root,\r\n              title: subStyles.title,\r\n              content: subStyles.content,\r\n            }}\r\n          />\r\n        )}\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CommonCard);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport CommonCard from \"../CommonCard\";\r\n\r\ninterface IMergedWidgets {\r\n  title: string;\r\n  leftComponent: any;\r\n  rightComponent: any;\r\n}\r\n\r\nconst MergedWidgets = ({\r\n  title,\r\n  leftComponent,\r\n  rightComponent,\r\n}: IMergedWidgets) => {\r\n  return (\r\n    <Fragment>\r\n      <CommonCard\r\n        title={title}\r\n        metricValue={leftComponent}\r\n        rightComponent={rightComponent}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MergedWidgets;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport api from \"../../../../../common/api\";\r\nimport { widgetDetailsToPanel } from \"../utils\";\r\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\r\nimport { IDashboardPanel } from \"../types\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\n\r\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../../store\";\r\n\r\nconst EntityStateStatItem = ({\r\n  panelItem,\r\n  timeStart,\r\n  timeEnd,\r\n  propLoading,\r\n  apiPrefix,\r\n  statLabel,\r\n}: {\r\n  panelItem: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  propLoading: boolean;\r\n  apiPrefix: string;\r\n  statLabel: any;\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [data, setData] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (propLoading) {\r\n      setLoading(true);\r\n    }\r\n  }, [propLoading]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      let stepCalc = 0;\r\n      if (timeStart !== null && timeEnd !== null) {\r\n        const secondsInPeriod = timeEnd.unix() - timeStart.unix();\r\n        const periods = Math.floor(secondsInPeriod / 60);\r\n\r\n        stepCalc = periods < 1 ? 15 : periods;\r\n      }\r\n\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/${apiPrefix}/info/widgets/${\r\n            panelItem.id\r\n          }/?step=${stepCalc}&${\r\n            timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\r\n          }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\r\n            timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\r\n          }`\r\n        )\r\n        .then((res: any) => {\r\n          const widgetsWithValue = widgetDetailsToPanel(res, panelItem);\r\n          setData(widgetsWithValue.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [loading, panelItem, timeEnd, timeStart, dispatch, apiPrefix]);\r\n\r\n  let toRender = loading ? (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        paddingTop: \"5px\",\r\n        textAlign: \"center\",\r\n        margin: \"auto\",\r\n      }}\r\n    >\r\n      <Loader style={{ width: 12, height: 12 }} />\r\n    </Box>\r\n  ) : (\r\n    <Box>\r\n      <Box className=\"stat-value\">{data}</Box>\r\n      {statLabel}\r\n    </Box>\r\n  );\r\n\r\n  return toRender;\r\n};\r\n\r\nexport default EntityStateStatItem;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst DualStatCard = ({\r\n  statItemLeft = null,\r\n  statItemRight = null,\r\n  icon = null,\r\n  label = \"\",\r\n}: {\r\n  statItemLeft: any;\r\n  statItemRight: any;\r\n  icon: any;\r\n  label: string;\r\n}) => {\r\n  const getContent = () => {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: \"flex\",\r\n          padding: {\r\n            sm: \"0 8px 0 8px\",\r\n            xs: \"0 10px 0 10px\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              fontSize: \"16px\",\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            {label}\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              gap: \"5px\",\r\n              justifyContent: \"space-between\",\r\n              paddingBottom: {\r\n                md: \"0px\",\r\n                xs: \"10px\",\r\n              },\r\n              fontSize: {\r\n                xl: \"55px\",\r\n                lg: \"50px\",\r\n                md: \"45px\",\r\n                xs: \"35px\",\r\n              },\r\n              flexFlow: \"row\",\r\n              fontWeight: 600,\r\n\r\n              \"& .stat-text\": {\r\n                color: \"#696969\",\r\n                fontSize: \"12px\",\r\n                marginTop: \"8px\",\r\n              },\r\n              \"& .stat-value\": {\r\n                textAlign: \"center\",\r\n                height: \"50px\",\r\n              },\r\n              \"& .min-icon\": {\r\n                marginRight: \"8px\",\r\n                marginTop: \"8px\",\r\n                height: \"10px\",\r\n                width: \"10px\",\r\n              },\r\n            }}\r\n          >\r\n            {statItemLeft}\r\n            {statItemRight}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: \"20px\",\r\n            height: \"20px\",\r\n            marginTop: \"8px\",\r\n            maxWidth: \"26px\",\r\n            \"& .min-icon\": {\r\n              width: \"16px\",\r\n              height: \"16px\",\r\n            },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        fontFamily: \"Lato,sans-serif\",\r\n        color: \"#07193E\",\r\n        maxWidth: \"321px\",\r\n        display: \"flex\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        cursor: \"default\",\r\n      }}\r\n    >\r\n      {getContent()}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DualStatCard;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport EntityStateStatItem from \"./EntityStateStatItem\";\r\nimport { Box } from \"@mui/material\";\r\nimport { CircleIcon, DrivesIcon, ServersIcon } from \"../../../../../icons\";\r\nimport DualStatCard from \"./DualStatCard\";\r\nimport { IDashboardPanel } from \"../types\";\r\n\r\nconst EntityStateItemRenderer = ({\r\n  info,\r\n  timeStart,\r\n  timeEnd,\r\n  loading,\r\n  apiPrefix,\r\n}: {\r\n  info: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  loading: boolean;\r\n  apiPrefix: string;\r\n}) => {\r\n  const { mergedPanels = [], id } = info;\r\n  const [leftPanel, rightPanel] = mergedPanels;\r\n\r\n  const lStatItem = (\r\n    <EntityStateStatItem\r\n      panelItem={leftPanel}\r\n      timeStart={timeStart}\r\n      timeEnd={timeEnd}\r\n      propLoading={loading}\r\n      apiPrefix={apiPrefix}\r\n      statLabel={\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginTop: \"5px\",\r\n            \"& .min-icon\": {\r\n              fill: \"#4CCB92\",\r\n            },\r\n          }}\r\n        >\r\n          <CircleIcon />\r\n          <div className=\"stat-text\">Online</div>\r\n        </Box>\r\n      }\r\n    />\r\n  );\r\n  const rStatItem = (\r\n    <EntityStateStatItem\r\n      panelItem={rightPanel}\r\n      timeStart={timeStart}\r\n      timeEnd={timeEnd}\r\n      propLoading={loading}\r\n      apiPrefix={apiPrefix}\r\n      statLabel={\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginTop: \"5px\",\r\n            \"& .min-icon\": {\r\n              fill: \"#C83B51\",\r\n            },\r\n          }}\r\n        >\r\n          <CircleIcon />\r\n          <div className=\"stat-text\">Offline</div>\r\n        </Box>\r\n      }\r\n    />\r\n  );\r\n\r\n  let statIcon = null;\r\n  let statLabel = \"\";\r\n  if (id === 500) {\r\n    statIcon = <ServersIcon />;\r\n    statLabel = \"Servers\";\r\n  } else if (id === 501) {\r\n    statIcon = <DrivesIcon />;\r\n    statLabel = \"Drives\";\r\n  }\r\n\r\n  return (\r\n    <DualStatCard\r\n      statItemLeft={lStatItem}\r\n      statItemRight={rStatItem}\r\n      icon={statIcon}\r\n      label={statLabel}\r\n    />\r\n  );\r\n};\r\nexport default EntityStateItemRenderer;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\nimport { NetworkGetIcon } from \"../../../../../icons\";\r\n\r\nconst NetworkGetItem = ({\r\n  value,\r\n  loading,\r\n}: {\r\n  value: any;\r\n  loading: boolean;\r\n  title?: any;\r\n  id?: number;\r\n}) => {\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          marginTop: \"10px\",\r\n          gap: \"10px\",\r\n          \"& .min-icon\": {\r\n            height: \"15px\",\r\n            width: \"15px\",\r\n            fill: \"#4ccb92\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            fontSize: \"18px\",\r\n            color: \"#696969\",\r\n          }}\r\n        >\r\n          GET\r\n        </Box>\r\n        {loading ? (\r\n          <Loader style={{ width: \"15px\", height: \"15px\" }} />\r\n        ) : (\r\n          <NetworkGetIcon />\r\n        )}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          fontSize: \"50px\",\r\n          fontFamily: \"Lato\",\r\n          fontWeight: 600,\r\n        }}\r\n      >\r\n        {value}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NetworkGetItem;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport Loader from \"../../../Common/Loader/Loader\";\r\nimport { NetworkPutIcon } from \"../../../../../icons\";\r\n\r\nconst NetworkPutItem = ({\r\n  value,\r\n  loading,\r\n}: {\r\n  value: any;\r\n  loading: boolean;\r\n  title?: any;\r\n  id?: number;\r\n}) => {\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          gap: \"10px\",\r\n          alignItems: \"center\",\r\n          marginTop: \"10px\",\r\n\r\n          \"& .min-icon\": {\r\n            height: \"15px\",\r\n            width: \"15px\",\r\n            fill: \"#2781b0\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            fontSize: \"18px\",\r\n            color: \"#696969\",\r\n            fontWeight: \"normal\",\r\n          }}\r\n        >\r\n          PUT\r\n        </Box>\r\n        {loading ? (\r\n          <Loader style={{ width: \"15px\", height: \"15px\" }} />\r\n        ) : (\r\n          <NetworkPutIcon />\r\n        )}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          fontSize: \"50px\",\r\n          fontFamily: \"Lato\",\r\n          fontWeight: 600,\r\n        }}\r\n      >\r\n        {value}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NetworkPutItem;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { IDashboardPanel } from \"../types\";\r\nimport { Box } from \"@mui/material\";\r\nimport { SpeedtestIcon } from \"../../../../../icons\";\r\nimport SingleValueWidget from \"./SingleValueWidget\";\r\nimport NetworkGetItem from \"./NetworkGetItem\";\r\nimport NetworkPutItem from \"./NetworkPutItem\";\r\n\r\nconst NetworkItem = ({\r\n  value,\r\n  timeStart,\r\n  timeEnd,\r\n  propLoading,\r\n  apiPrefix,\r\n}: {\r\n  value: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  propLoading: boolean;\r\n  apiPrefix: string;\r\n}) => {\r\n  const { mergedPanels = [] } = value;\r\n  const [leftPanel, rightPanel] = mergedPanels;\r\n\r\n  const rightCmp = (\r\n    <SingleValueWidget\r\n      title={value.title}\r\n      panelItem={leftPanel}\r\n      timeStart={timeStart}\r\n      timeEnd={timeEnd}\r\n      propLoading={propLoading}\r\n      apiPrefix={apiPrefix}\r\n      renderFn={({ valueToRender, loading, title, id }) => {\r\n        return (\r\n          <NetworkPutItem\r\n            value={valueToRender}\r\n            loading={loading}\r\n            title={title}\r\n            id={id}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n  const leftCmp = (\r\n    <SingleValueWidget\r\n      title={value.title}\r\n      panelItem={rightPanel}\r\n      timeStart={timeStart}\r\n      timeEnd={timeEnd}\r\n      propLoading={propLoading}\r\n      apiPrefix={apiPrefix}\r\n      renderFn={({ valueToRender, loading, title, id }) => {\r\n        return (\r\n          <NetworkGetItem\r\n            value={valueToRender}\r\n            loading={loading}\r\n            title={title}\r\n            id={id}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexFlow: {\r\n          sm: \"row\",\r\n          xs: \"column\",\r\n        },\r\n        gap: \"15px\",\r\n        \"& .unitText\": {\r\n          fontSize: \"14px\",\r\n          color: \"#5E5E5E\",\r\n          marginLeft: \"5px\",\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          fontSize: \"16px\",\r\n          fontWeight: 600,\r\n        }}\r\n      >\r\n        Network\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n          width: 110,\r\n          height: 110,\r\n          marginLeft: {\r\n            sm: \"auto\",\r\n            xs: \"\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n            alignItems: \"center\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            fontWeight: \"bold\",\r\n            color: \"#000\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          {leftCmp}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          marginLeft: {\r\n            sm: \"auto\",\r\n            xs: \"\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            \"& .value\": { fontSize: \"50px\", fontFamily: \"Lato\" },\r\n            \"& .unit\": {\r\n              color: \"#5E5E5E\",\r\n              fontSize: \"18px\",\r\n              marginLeft: \"12px\",\r\n              marginTop: \"10px\",\r\n            },\r\n          }}\r\n        >\r\n          {rightCmp}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          marginLeft: \"15px\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"flex-start\",\r\n          \"& .min-icon\": {\r\n            height: \"15px\",\r\n            width: \"15px\",\r\n          },\r\n        }}\r\n      >\r\n        <SpeedtestIcon />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NetworkItem;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { componentToUse } from \"../widgetUtils\";\r\nimport MergedWidgets from \"../MergedWidgets\";\r\nimport { IDashboardPanel } from \"../types\";\r\nimport EntityStateItemRenderer from \"./EntityStateItemRenderer\";\r\nimport NetworkItem from \"./NetworkItem\";\r\nimport DashboardItemBox from \"../../DashboardItemBox\";\r\n\r\nconst MergedWidgetsRenderer = ({\r\n  info,\r\n  timeStart,\r\n  timeEnd,\r\n  loading,\r\n  apiPrefix,\r\n}: {\r\n  info: IDashboardPanel;\r\n  timeStart: any;\r\n  timeEnd: any;\r\n  loading: boolean;\r\n  apiPrefix: string;\r\n}) => {\r\n  const { mergedPanels = [], title = \"\", id } = info;\r\n  const [leftPanel, rightPanel] = mergedPanels;\r\n\r\n  const renderById = () => {\r\n    if ([500, 501].includes(id)) {\r\n      return (\r\n        <DashboardItemBox>\r\n          <EntityStateItemRenderer\r\n            info={info}\r\n            timeStart={timeStart}\r\n            timeEnd={timeEnd}\r\n            loading={loading}\r\n            apiPrefix={apiPrefix}\r\n          />\r\n        </DashboardItemBox>\r\n      );\r\n    }\r\n\r\n    if (id === 502) {\r\n      return (\r\n        <DashboardItemBox>\r\n          <NetworkItem\r\n            apiPrefix={apiPrefix}\r\n            timeEnd={timeEnd}\r\n            timeStart={timeStart}\r\n            value={info}\r\n            propLoading={loading}\r\n          />\r\n        </DashboardItemBox>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <MergedWidgets\r\n        title={title}\r\n        leftComponent={componentToUse(\r\n          leftPanel,\r\n          timeStart,\r\n          timeEnd,\r\n          loading,\r\n          apiPrefix\r\n        )}\r\n        rightComponent={componentToUse(\r\n          rightPanel,\r\n          timeStart,\r\n          timeEnd,\r\n          loading,\r\n          apiPrefix\r\n        )}\r\n      />\r\n    );\r\n  };\r\n\r\n  return renderById();\r\n};\r\n\r\nexport default MergedWidgetsRenderer;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Box } from \"@mui/material\";\r\nimport {\r\n  actionsTray,\r\n  widgetContainerCommon,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport { IDashboardPanel } from \"./types\";\r\nimport { getWidgetsWithValue, panelsConfiguration } from \"./utils\";\r\nimport { TabPanel } from \"../../../shared/tabs\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport api from \"../../../../common/api\";\r\n\r\nimport TabSelector from \"../../Common/TabSelector/TabSelector\";\r\nimport { componentToUse } from \"./widgetUtils\";\r\nimport ZoomWidget from \"./ZoomWidget\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport DateRangeSelector from \"../../Common/FormComponents/DateRangeSelector/DateRangeSelector\";\r\nimport {\r\n  DLayoutColumnProps,\r\n  DLayoutRowProps,\r\n  resourcesPanelsLayout,\r\n  resourcesPanelsLayoutAdvanced,\r\n  RowPanelLayout,\r\n  summaryPanelsLayout,\r\n  trafficPanelsLayout,\r\n} from \"./Widgets/LayoutUtil\";\r\nimport MergedWidgetsRenderer from \"./Widgets/MergedWidgetsRenderer\";\r\nimport PageLayout from \"../../Common/Layout/PageLayout\";\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IPrDashboard {\r\n  classes?: any;\r\n  apiPrefix?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...actionsTray,\r\n    ...widgetContainerCommon,\r\n    dashboardRow: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"flex-start\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n  });\r\n\r\nconst PrDashboard = ({ apiPrefix = \"admin\" }: IPrDashboard) => {\r\n  const dispatch = useAppDispatch();\r\n  const zoomOpen = useSelector(\r\n    (state: AppState) => state.dashboard.zoom.openZoom\r\n  );\r\n  const zoomWidget = useSelector(\r\n    (state: AppState) => state.dashboard.zoom.widgetRender\r\n  );\r\n\r\n  const [timeStart, setTimeStart] = useState<any>(null);\r\n  const [timeEnd, setTimeEnd] = useState<any>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [panelInformation, setPanelInformation] =\r\n    useState<IDashboardPanel[]>(panelsConfiguration);\r\n  const [curTab, setCurTab] = useState<number>(0);\r\n\r\n  const getPanelDetails = (id: number) => {\r\n    return panelInformation.find((panel) => panel.id === id);\r\n  };\r\n\r\n  const fetchUsage = useCallback(() => {\r\n    let stepCalc = 0;\r\n\r\n    if (timeStart !== null && timeEnd !== null) {\r\n      const secondsInPeriod = timeEnd.unix() - timeStart.unix();\r\n      const periods = Math.floor(secondsInPeriod / 60);\r\n\r\n      stepCalc = periods < 1 ? 15 : periods;\r\n    }\r\n\r\n    api\r\n      .invoke(\r\n        \"GET\",\r\n        `/api/v1/${apiPrefix}/info?step=${stepCalc}&${\r\n          timeStart !== null ? `&start=${timeStart.unix()}` : \"\"\r\n        }${timeStart !== null && timeEnd !== null ? \"&\" : \"\"}${\r\n          timeEnd !== null ? `end=${timeEnd.unix()}` : \"\"\r\n        }`\r\n      )\r\n      .then((res: any) => {\r\n        if (res.widgets) {\r\n          const widgetsWithValue = getWidgetsWithValue(res.widgets);\r\n          setPanelInformation(widgetsWithValue);\r\n        } else {\r\n          dispatch(\r\n            setErrorSnackMessage({\r\n              errorMessage:\r\n                \"Widget information could not be retrieved at this time. Please try again\",\r\n              detailedError: \"\",\r\n            })\r\n          );\r\n        }\r\n\r\n        setLoading(false);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        dispatch(setErrorSnackMessage(err));\r\n        setLoading(false);\r\n      });\r\n  }, [timeStart, timeEnd, dispatch, apiPrefix]);\r\n\r\n  const triggerLoad = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      fetchUsage();\r\n    }\r\n  }, [loading, fetchUsage]);\r\n\r\n  const renderCmpByConfig = (\r\n    panelInfo: IDashboardPanel | undefined,\r\n    key: string\r\n  ) => {\r\n    return (\r\n      <Fragment key={`widget-${key}`}>\r\n        {panelInfo ? (\r\n          <Fragment>\r\n            <Box>\r\n              {panelInfo.mergedPanels ? (\r\n                <MergedWidgetsRenderer\r\n                  info={panelInfo}\r\n                  timeStart={timeStart}\r\n                  timeEnd={timeEnd}\r\n                  loading={loading}\r\n                  apiPrefix={apiPrefix}\r\n                />\r\n              ) : (\r\n                componentToUse(\r\n                  panelInfo,\r\n                  timeStart,\r\n                  timeEnd,\r\n                  loading,\r\n                  apiPrefix,\r\n                  zoomOpen\r\n                )\r\n              )}\r\n            </Box>\r\n          </Fragment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderPanelItems = (layoutRows: DLayoutRowProps[]) => {\r\n    return layoutRows.reduce((prev: any[], rowItem, rIdx) => {\r\n      const { columns = [] } = rowItem;\r\n      const cellItems: any[] = columns.map(\r\n        (cellItem: DLayoutColumnProps, colIdx: number) => {\r\n          const panelInfo = getPanelDetails(cellItem.componentId);\r\n          return renderCmpByConfig(panelInfo, `${rIdx}-${colIdx}`);\r\n        }\r\n      );\r\n      const rowConfig = (\r\n        <Box sx={rowItem.sx} key={`layout-row-${rIdx}`}>\r\n          {cellItems}\r\n        </Box>\r\n      );\r\n      return [...prev, rowConfig];\r\n    }, []);\r\n  };\r\n\r\n  const renderSummaryPanels = () => {\r\n    return renderPanelItems(summaryPanelsLayout);\r\n  };\r\n\r\n  const renderTrafficPanels = () => {\r\n    return renderPanelItems(trafficPanelsLayout);\r\n  };\r\n\r\n  const renderResourcesPanels = () => {\r\n    return renderPanelItems(resourcesPanelsLayout);\r\n  };\r\n\r\n  const renderAdvancedResourcesPanels = () => {\r\n    return renderPanelItems(resourcesPanelsLayoutAdvanced);\r\n  };\r\n\r\n  return (\r\n    <PageLayout>\r\n      {zoomOpen && (\r\n        <ZoomWidget\r\n          modalOpen={zoomOpen}\r\n          timeStart={timeStart}\r\n          timeEnd={timeEnd}\r\n          widgetRender={0}\r\n          value={zoomWidget}\r\n          apiPrefix={apiPrefix}\r\n        />\r\n      )}\r\n\r\n      <Grid item xs={12}>\r\n        <TabSelector\r\n          selectedTab={curTab}\r\n          onChange={(newValue: number) => {\r\n            setCurTab(newValue);\r\n          }}\r\n          tabOptions={[\r\n            { label: \"Usage\" },\r\n            { label: \"Traffic\" },\r\n            { label: \"Resources\" },\r\n          ]}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sx={{\r\n          paddingTop: \"20px\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <DateRangeSelector\r\n            timeStart={timeStart}\r\n            setTimeStart={setTimeStart}\r\n            timeEnd={timeEnd}\r\n            setTimeEnd={setTimeEnd}\r\n            triggerSync={triggerLoad}\r\n          />\r\n        </Box>\r\n        <TabPanel index={0} value={curTab}>\r\n          <RowPanelLayout>\r\n            {panelInformation.length ? renderSummaryPanels() : null}\r\n          </RowPanelLayout>\r\n        </TabPanel>\r\n        <TabPanel index={1} value={curTab}>\r\n          <RowPanelLayout>\r\n            {panelInformation.length ? renderTrafficPanels() : null}\r\n          </RowPanelLayout>\r\n        </TabPanel>\r\n        <TabPanel index={2} value={curTab}>\r\n          <RowPanelLayout>\r\n            {panelInformation.length ? renderResourcesPanels() : null}\r\n            <h2 style={{ margin: 0, borderBottom: \"1px solid #dedede\" }}>\r\n              Advanced\r\n            </h2>\r\n            {panelInformation.length ? renderAdvancedResourcesPanels() : null}\r\n          </RowPanelLayout>\r\n        </TabPanel>\r\n      </Grid>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(PrDashboard);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { CircleIcon } from \"../../../../icons\";\r\n\r\nexport const StatusCountCard = ({\r\n  onlineCount = 0,\r\n  offlineCount = 0,\r\n  icon = null,\r\n  label = \"\",\r\n  okStatusText = \"Online\",\r\n  notOkStatusText = \"Offline\",\r\n}: {\r\n  icon: any;\r\n  onlineCount: number;\r\n  offlineCount: number;\r\n  label: string;\r\n  okStatusText?: string;\r\n  notOkStatusText?: string;\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        fontFamily: \"Lato,sans-serif\",\r\n        color: \"#07193E\",\r\n        maxWidth: \"321px\",\r\n        display: \"flex\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        cursor: \"default\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: \"flex\",\r\n          padding: {\r\n            sm: \"0 8px 0 8px\",\r\n            xs: \"0 10px 0 10px\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              fontSize: \"16px\",\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            {label}\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              gap: \"5px\",\r\n              justifyContent: \"space-between\",\r\n              paddingBottom: {\r\n                md: \"0px\",\r\n                xs: \"10px\",\r\n              },\r\n              fontSize: {\r\n                xl: \"55px\",\r\n                lg: \"50px\",\r\n                md: \"45px\",\r\n                xs: \"35px\",\r\n              },\r\n              flexFlow: \"row\",\r\n              fontWeight: 600,\r\n\r\n              \"& .stat-text\": {\r\n                color: \"#696969\",\r\n                fontSize: \"12px\",\r\n                marginTop: \"8px\",\r\n              },\r\n              \"& .stat-value\": {\r\n                textAlign: \"center\",\r\n                height: \"50px\",\r\n              },\r\n              \"& .min-icon\": {\r\n                marginRight: \"8px\",\r\n                marginTop: \"8px\",\r\n                height: \"10px\",\r\n                width: \"10px\",\r\n              },\r\n            }}\r\n          >\r\n            <Box>\r\n              <Box className=\"stat-value\">{onlineCount}</Box>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginTop: \"5px\",\r\n                  \"& .min-icon\": {\r\n                    fill: \"#4CCB92\",\r\n                  },\r\n                }}\r\n              >\r\n                <CircleIcon />\r\n                <div className=\"stat-text\">{okStatusText}</div>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Box className=\"stat-value\">{offlineCount}</Box>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginTop: \"8px\",\r\n                  \"& .min-icon\": {\r\n                    fill: \"#C83B51\",\r\n                  },\r\n                }}\r\n              >\r\n                <CircleIcon />{\" \"}\r\n                <div className=\"stat-text\">{notOkStatusText}</div>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: \"20px\",\r\n            height: \"20px\",\r\n            marginTop: \"8px\",\r\n            maxWidth: \"26px\",\r\n            \"& .min-icon\": {\r\n              width: \"16px\",\r\n              height: \"16px\",\r\n            },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StatusCountCard;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { ServerInfo } from \"../types\";\r\nimport { niceDays } from \"../../../../common/utils\";\r\nimport { Box } from \"@mui/material\";\r\nimport { CircleIcon } from \"../../../../icons\";\r\nimport get from \"lodash/get\";\r\nimport { commonDashboardInfocard } from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport {\r\n  getDriveStatusColor,\r\n  getNetworkStatusColor,\r\n  serverStatusColor,\r\n} from \"./Utils\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...commonDashboardInfocard,\r\n  });\r\n\r\ninterface ICardProps {\r\n  classes?: any;\r\n  server: ServerInfo;\r\n  index: number;\r\n}\r\n\r\nconst ServerStatItem = ({\r\n  label = \"\",\r\n  value = \"\",\r\n  statusColor = \"\",\r\n  hasStatus = false,\r\n}: {\r\n  label?: string;\r\n  value?: any;\r\n  hasStatus?: boolean;\r\n  statusColor: string | undefined;\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        alignItems: \"baseline\",\r\n        padding: \"5px\",\r\n        display: \"flex\",\r\n        gap: \"5px\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flexFlow: \"column\",\r\n          \"& .stat-text\": { color: \"#5E5E5E\", fontSize: \"12px\" },\r\n          \"& .stat-value\": {\r\n            fontSize: \"18px\",\r\n            color: \"#07193E\",\r\n            display: \"flex\",\r\n            fontWeight: 500,\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"stat-value\">\r\n          {value}{\" \"}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              flexFlow: \"column\",\r\n              marginLeft: \"5px\",\r\n              maxWidth: \"40px\",\r\n              \"&:first-of-type(svg)\": {\r\n                fill: \"#848484\",\r\n              },\r\n            }}\r\n          >\r\n            {hasStatus ? (\r\n              <Box\r\n                sx={{\r\n                  marginRight: \"0px\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  textAlign: \"center\",\r\n                  \"& svg.min-icon\": {\r\n                    fill: statusColor,\r\n                    width: \"10px\",\r\n                    height: \"10px\",\r\n                  },\r\n                }}\r\n              >\r\n                <CircleIcon />\r\n              </Box>\r\n            ) : (\r\n              <Box sx={{ width: \"12px\", height: \"12px\" }} />\r\n            )}\r\n          </Box>\r\n        </div>\r\n        <div className=\"stat-text\">{label}</div>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ServerInfoItem = ({ server }: ICardProps) => {\r\n  const networkKeys = Object.keys(get(server, \"network\", {}));\r\n  const networkTotal = networkKeys.length;\r\n  const totalDrives = server.drives ? server.drives.length : 0;\r\n  const activeNetwork = networkKeys.reduce((acc: number, currValue: string) => {\r\n    const item = server.network[currValue];\r\n    if (item === \"online\") {\r\n      return acc + 1;\r\n    }\r\n    return acc;\r\n  }, 0);\r\n  const activeDisks = server.drives\r\n    ? server.drives.filter((element) => element.state === \"ok\").length\r\n    : 0;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        flexFlow: \"column\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          padding: \"3px\",\r\n          gap: \"15px\",\r\n          justifyContent: \"space-between\",\r\n          width: \"100%\",\r\n          paddingLeft: \"20px\",\r\n\r\n          flexFlow: {\r\n            sm: \"row\",\r\n            xs: \"column\",\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              fontWeight: 600,\r\n              textTransform: \"none\",\r\n            }}\r\n          >\r\n            {server.endpoint || \"\"}\r\n          </Box>\r\n          {server?.state && (\r\n            <Box\r\n              sx={{\r\n                marginLeft: \"8px\",\r\n                \"& .min-icon\": {\r\n                  fill: serverStatusColor(server.state),\r\n                  height: \"14px\",\r\n                  width: \"14px\",\r\n                },\r\n              }}\r\n            >\r\n              <CircleIcon />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flex: \"1.5\",\r\n            gap: {\r\n              md: \"5%\",\r\n              xs: \"5%\",\r\n            },\r\n          }}\r\n        >\r\n          <ServerStatItem\r\n            statusColor={getDriveStatusColor(activeDisks, totalDrives)}\r\n            label={\"Drives\"}\r\n            hasStatus={true}\r\n            value={`${activeDisks}/${totalDrives}`}\r\n          />\r\n          <ServerStatItem\r\n            statusColor={getNetworkStatusColor(activeNetwork, networkTotal)}\r\n            label={\"Network\"}\r\n            hasStatus={true}\r\n            value={`${activeNetwork}/${networkTotal}`}\r\n          />\r\n\r\n          <ServerStatItem\r\n            statusColor={\"green\"}\r\n            label={\"Up time\"}\r\n            value={server?.uptime ? niceDays(server.uptime) : \"N/A\"}\r\n          />\r\n        </Box>\r\n        <ServerStatItem\r\n          statusColor={\"green\"}\r\n          label={\"\"}\r\n          value={\r\n            <Box\r\n              sx={{\r\n                background: \"rgb(235, 236, 237)\",\r\n                color: \"#000000\",\r\n                paddingLeft: \"10px\",\r\n                paddingRight: \"10px\",\r\n                borderRadius: \"2px\",\r\n                fontSize: \"12px\",\r\n                marginTop: \"5px\",\r\n\r\n                \"& .label\": {\r\n                  fontWeight: 600,\r\n                  marginRight: \"3px\",\r\n                },\r\n              }}\r\n            >\r\n              <span className=\"label\">Version:</span>\r\n              {server.version ? server.version : \"N/A\"}\r\n            </Box>\r\n          }\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nexport default withStyles(styles)(ServerInfoItem);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { IDriveInfo } from \"../types\";\r\nimport {\r\n  capacityColors,\r\n  niceBytes,\r\n  niceBytesInt,\r\n} from \"../../../../common/utils\";\r\nimport { Box } from \"@mui/material\";\r\nimport { Cell, Pie, PieChart } from \"recharts\";\r\nimport { CircleIcon } from \"../../../../icons\";\r\nimport { commonDashboardInfocard } from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport { STATUS_COLORS } from \"./Utils\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...commonDashboardInfocard,\r\n  });\r\n\r\ninterface ICardProps {\r\n  classes?: any;\r\n  drive: IDriveInfo;\r\n}\r\n\r\nconst driveStatusColor = (health_status: string) => {\r\n  switch (health_status) {\r\n    case \"offline\":\r\n      return STATUS_COLORS.RED;\r\n    case \"ok\":\r\n      return STATUS_COLORS.GREEN;\r\n    default:\r\n      return STATUS_COLORS.YELLOW;\r\n  }\r\n};\r\n\r\nconst DriveInfoItem = ({ drive }: ICardProps) => {\r\n  const freeSpace = drive.totalSpace - drive.usedSpace;\r\n\r\n  const plotValues = [\r\n    { value: freeSpace, color: \"#D6D6D6\", label: \"Free Space\" },\r\n    {\r\n      value: drive.usedSpace,\r\n      color: capacityColors(drive.usedSpace, drive.totalSpace),\r\n      label: \"Used Space\",\r\n    },\r\n  ];\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        paddingBottom: \"10px\",\r\n        padding: \"20px\",\r\n        border: \"1px solid #eaeaea\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexFlow: \"column\",\r\n          marginLeft: \"10px\",\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            fontSize: \"14px\",\r\n            fontWeight: 400,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n\r\n            \"& .min-icon\": {\r\n              marginRight: \"10px\",\r\n              height: \"10px\",\r\n              width: \"10px\",\r\n              fill: driveStatusColor(drive.state),\r\n              flexShrink: 0,\r\n            },\r\n\r\n            \"& .drive-endpoint\": {\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"normal\",\r\n              wordBreak: \"break-all\",\r\n              marginRight: \"8px\",\r\n              fontWeight: 600,\r\n              fontSize: {\r\n                md: \"16px\",\r\n                xs: \"10px\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <div className=\"drive-endpoint\">{drive.endpoint || \"\"}</div>\r\n          {drive.state && <CircleIcon />}\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            paddingLeft: \"20px\",\r\n            marginTop: \"10px\",\r\n            flexFlow: {\r\n              sm: \"row\",\r\n              xs: \"column\",\r\n            },\r\n            \"& .info-label\": {\r\n              color: \"#5E5E5E\",\r\n              fontSize: \"12px\",\r\n              textAlign: \"center\",\r\n            },\r\n            \"& .info-value\": {\r\n              fontSize: \"18px\",\r\n              color: \"#07193E\",\r\n              display: \"flex\",\r\n              fontWeight: 500,\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"nowrap\",\r\n            },\r\n          }}\r\n        >\r\n          <Box sx={{ flex: 1 }}>\r\n            <div style={{ position: \"relative\", width: 110, height: 110 }}>\r\n              <span\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"50%\",\r\n                  left: \"50%\",\r\n                  transform: \"translate(-50%, -50%)\",\r\n                  fontWeight: \"bold\",\r\n                  color: \"#000\",\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                {niceBytesInt(drive.usedSpace)}\r\n              </span>\r\n              <div>\r\n                <PieChart width={110} height={110}>\r\n                  <Pie\r\n                    data={plotValues}\r\n                    cx={\"50%\"}\r\n                    cy={\"50%\"}\r\n                    dataKey=\"value\"\r\n                    outerRadius={50}\r\n                    innerRadius={40}\r\n                    startAngle={-70}\r\n                    endAngle={360}\r\n                    animationDuration={1}\r\n                  >\r\n                    {plotValues.map((entry, index) => (\r\n                      <Cell key={`cellCapacity-${index}`} fill={entry.color} />\r\n                    ))}\r\n                  </Pie>\r\n                </PieChart>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              gap: \"5%\",\r\n              alignItems: \"center\",\r\n              flex: 2,\r\n              flexGrow: 1,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexFlow: \"column\",\r\n              }}\r\n            >\r\n              <div className=\"info-value\">\r\n                {niceBytes(\r\n                  drive.totalSpace ? drive.totalSpace.toString() : \"0\"\r\n                )}\r\n              </div>\r\n              <label className=\"info-label\">Capacity</label>\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexFlow: \"column\",\r\n              }}\r\n            >\r\n              <div className=\"info-value\">\r\n                {niceBytes(drive.usedSpace ? drive.usedSpace.toString() : \"0\")}\r\n              </div>\r\n              <label className=\"info-label\">Used</label>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexFlow: \"column\",\r\n              }}\r\n            >\r\n              <div className=\"info-value\">\r\n                {niceBytes(\r\n                  drive.availableSpace ? drive.availableSpace.toString() : \"0\"\r\n                )}\r\n              </div>\r\n              <label className=\"info-label\">Available</label>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(DriveInfoItem);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport ListSubheader from \"@mui/material/ListSubheader\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport { ServerInfo } from \"../types\";\r\nimport ServerInfoItem from \"./ServerInfoItem\";\r\nimport { Box } from \"@mui/material\";\r\nimport DriveInfoItem from \"./DriveInfoItem\";\r\nimport {\r\n  MenuCollapsedIcon,\r\n  MenuExpandedIcon,\r\n} from \"../../../../icons/SidebarMenus\";\r\n\r\nconst ServersList = ({ data }: { data: ServerInfo[] }) => {\r\n  const [expanded, setExpanded] = React.useState<string>(\r\n    data.length > 1 ? \"\" : data[0].endpoint + \"-0\"\r\n  );\r\n\r\n  const handleClick = (key: string) => {\r\n    setExpanded(key);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          marginBottom: \"10px\",\r\n        }}\r\n      >\r\n        Servers ({data.length})\r\n      </Box>\r\n      <List\r\n        sx={{ width: \"100%\", flex: 1, padding: \"0\" }}\r\n        component=\"nav\"\r\n        aria-labelledby=\"nested-list-subheader\"\r\n      >\r\n        {data.map((serverInfo, index) => {\r\n          const key = `${serverInfo.endpoint}-${index}`;\r\n          const isExpanded = expanded === key;\r\n          return (\r\n            <React.Fragment key={key}>\r\n              <ListItemButton\r\n                disableRipple\r\n                onClick={() => {\r\n                  if (!isExpanded) {\r\n                    handleClick(key);\r\n                  } else {\r\n                    handleClick(\"\");\r\n                  }\r\n                }}\r\n                className={isExpanded ? \"expanded\" : \"\"}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  border: \"1px solid #f1f1f1\",\r\n                  padding: \"3px 10px 3px 10px\",\r\n\r\n                  \"&:hover\": {\r\n                    background: \"#bebbbb0d\",\r\n                  },\r\n                }}\r\n              >\r\n                <ServerInfoItem server={serverInfo} index={index} />\r\n                <Box\r\n                  sx={{\r\n                    height: \"25px\",\r\n                    width: \"25px\",\r\n                    background: \"#FBFAFA\",\r\n                    borderRadius: \"2px\",\r\n                    \"&:hover\": {\r\n                      background: \"#fafafa\",\r\n                    },\r\n                    display: {\r\n                      md: \"block\",\r\n                      xs: \"none\",\r\n                    },\r\n                    \"& .collapse-icon\": {\r\n                      fill: \"#494949\",\r\n                      \"& g  rect\": {\r\n                        fill: \"#ffffff\",\r\n                      },\r\n                    },\r\n                    \"& .expand-icon\": {\r\n                      fill: \"#494949\",\r\n                      \"& rect\": {\r\n                        fill: \"#ffffff\",\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  {isExpanded ? (\r\n                    <MenuCollapsedIcon className=\"collapse-icon\" />\r\n                  ) : (\r\n                    <MenuExpandedIcon className=\"expand-icon\" />\r\n                  )}\r\n                </Box>\r\n              </ListItemButton>\r\n              {isExpanded ? (\r\n                <Box\r\n                  key={`${serverInfo.endpoint}-${index}`}\r\n                  sx={{\r\n                    border: \"1px solid #f1f1f1\",\r\n                    borderTop: \"0\",\r\n                  }}\r\n                >\r\n                  <ListSubheader\r\n                    key={`${index}-drive-details`}\r\n                    component=\"div\"\r\n                    sx={{ paddingLeft: \"30px\" }}\r\n                  >\r\n                    Drives ({serverInfo.drives.length})\r\n                  </ListSubheader>\r\n\r\n                  <Collapse\r\n                    in={isExpanded}\r\n                    timeout=\"auto\"\r\n                    unmountOnExit\r\n                    sx={{\r\n                      width: \"100%\",\r\n                      flex: 1,\r\n                      display: \"flex\",\r\n                      padding: { md: \"15px 30px\", xs: \"10px 10px\" },\r\n                      \"& .MuiCollapse-wrapperInner\": {\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        gap: \"15px\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    {serverInfo.drives.map((driveInfo, index) => {\r\n                      return (\r\n                        <DriveInfoItem\r\n                          drive={driveInfo}\r\n                          key={`${driveInfo.endpoint}-${index}`}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Collapse>\r\n                </Box>\r\n              ) : null}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ServersList;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Box, Tooltip } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst CounterCard = ({\r\n  counterValue,\r\n  label = \"\",\r\n  icon = null,\r\n  actions = null,\r\n  loading = false,\r\n}: {\r\n  counterValue: string | number;\r\n  label?: any;\r\n  icon?: any;\r\n  actions?: any;\r\n  loading?: boolean;\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        fontFamily: \"Lato,sans-serif\",\r\n        color: \"#07193E\",\r\n        maxWidth: \"300px\",\r\n        display: \"flex\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        cursor: \"default\",\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          flex: 1,\r\n          display: \"flex\",\r\n          width: \"100%\",\r\n          padding: {\r\n            sm: \"0 8px 0 8px\",\r\n            xs: \"0 10px 0 10px\",\r\n          },\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n            marginTop: \"8px\",\r\n            zIndex: 10,\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              fontSize: \"16px\",\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            {label}\r\n          </Box>\r\n\r\n          <Tooltip title={counterValue} placement=\"bottom\" enterDelay={500}>\r\n            <Box\r\n              sx={{\r\n                fontSize: {\r\n                  xl: \"55px\",\r\n                  lg: \"50px\",\r\n                  md: \"36px\",\r\n                  sm: \"35px\",\r\n                  xs: \"35px\",\r\n                },\r\n                fontWeight: 600,\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                maxWidth: {\r\n                  md: 187,\r\n                  xs: 200,\r\n                },\r\n                flexFlow: {\r\n                  md: \"row\",\r\n                  xs: \"column\",\r\n                },\r\n              }}\r\n            >\r\n              {counterValue}\r\n            </Box>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexFlow: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            marginTop: \"8px\",\r\n            maxWidth: \"26px\",\r\n            \"& .min-icon\": {\r\n              width: \"16px\",\r\n              height: \"16px\",\r\n            },\r\n          }}\r\n        >\r\n          {icon}\r\n\r\n          <Box>{actions}</Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CounterCard;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Box, Tooltip } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Cell, Pie, PieChart } from \"recharts\";\r\n\r\nconst ReportedUsage = ({\r\n  usageValue,\r\n  total,\r\n  unit,\r\n}: {\r\n  usageValue: string;\r\n  total: number | string;\r\n  unit: string;\r\n}) => {\r\n  const plotValues = [\r\n    { value: total, color: \"#D6D6D6\", label: \"Free Space\" },\r\n    {\r\n      value: usageValue,\r\n      color: \"#073052\",\r\n      label: \"Used Space\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxHeight: \"110px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: \"19px\",\r\n\r\n        padding: \"10px\",\r\n        \"& .unit-value\": {\r\n          fontSize: \"50px\",\r\n          color: \"#07193E\",\r\n        },\r\n        \"& .unit-type\": {\r\n          fontSize: \"18px\",\r\n          color: \"#5E5E5E\",\r\n          marginTop: \"20px\",\r\n          marginLeft: \"5px\",\r\n        },\r\n\r\n        \"& .usage-label\": {\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          fontSize: \"16px\",\r\n          fontWeight: 600,\r\n          marginRight: \"20px\",\r\n          marginTop: \"-10px\",\r\n          \"& .min-icon\": {\r\n            marginLeft: \"10px\",\r\n            height: 16,\r\n            width: 16,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Box>\r\n        <div className=\"usage-label\">\r\n          <span>Reported Usage</span>\r\n        </div>\r\n\r\n        <Tooltip title={`${usageValue} Bytes`}>\r\n          <label\r\n            className={\"unit-value\"}\r\n            style={{\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            {total}\r\n          </label>\r\n        </Tooltip>\r\n        <label className={\"unit-type\"}>{unit}</label>\r\n      </Box>\r\n\r\n      <Box>\r\n        <Box sx={{ flex: 1 }}>\r\n          <div\r\n            style={{\r\n              position: \"relative\",\r\n              width: 105,\r\n              height: 105,\r\n              top: \"-8px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <PieChart width={105} height={105}>\r\n                <Pie\r\n                  data={plotValues}\r\n                  cx={\"50%\"}\r\n                  cy={\"50%\"}\r\n                  dataKey=\"value\"\r\n                  outerRadius={45}\r\n                  innerRadius={35}\r\n                  startAngle={-70}\r\n                  endAngle={360}\r\n                  animationDuration={1}\r\n                >\r\n                  {plotValues.map((entry, index) => (\r\n                    <Cell key={`cellCapacity-${index}`} fill={entry.color} />\r\n                  ))}\r\n                </Pie>\r\n              </PieChart>\r\n            </div>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReportedUsage;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport {\r\n  ArrowRightIcon,\r\n  BucketsIcon,\r\n  DrivesIcon,\r\n  HealIcon,\r\n  PrometheusErrorIcon,\r\n  ServersIcon,\r\n  TotalObjectsIcon,\r\n  UptimeIcon,\r\n} from \"../../../../icons\";\r\nimport HelpBox from \"../../../../common/HelpBox\";\r\nimport { calculateBytes, representationNumber } from \"../../../../common/utils\";\r\nimport { IDriveInfo, Usage } from \"../types\";\r\nimport StatusCountCard from \"./StatusCountCard\";\r\nimport groupBy from \"lodash/groupBy\";\r\nimport ServersList from \"./ServersList\";\r\nimport CounterCard from \"./CounterCard\";\r\nimport ReportedUsage from \"./ReportedUsage\";\r\nimport { DiagnosticsMenuIcon } from \"../../../../icons/SidebarMenus\";\r\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\r\nimport TimeStatItem from \"../TimeStatItem\";\r\n\r\nconst BoxItem = ({ children }: { children: any }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        border: \"1px solid #f1f1f1\",\r\n        padding: {\r\n          md: \"15px\",\r\n          xs: \"5px\",\r\n        },\r\n        height: \"136px\",\r\n        maxWidth: {\r\n          sm: \"100%\",\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface IDashboardProps {\r\n  usage: Usage | null;\r\n}\r\n\r\nconst getServersList = (usage: Usage | null) => {\r\n  if (usage !== null) {\r\n    return usage.servers.sort(function (a, b) {\r\n      const nameA = a.endpoint.toLowerCase();\r\n      const nameB = b.endpoint.toLowerCase();\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nconst prettyUsage = (usage: string | undefined) => {\r\n  if (usage === undefined) {\r\n    return { total: \"0\", unit: \"Mi\" };\r\n  }\r\n\r\n  return calculateBytes(usage);\r\n};\r\n\r\nconst BasicDashboard = ({ usage }: IDashboardProps) => {\r\n  const usageValue = usage && usage.usage ? usage.usage.toString() : \"0\";\r\n  const usageToRepresent = prettyUsage(usageValue);\r\n\r\n  const { lastScan = \"n/a\", lastHeal = \"n/a\", upTime = \"n/a\" } = usage || {};\r\n\r\n  const serverList = getServersList(usage || null);\r\n\r\n  let allDrivesArray: IDriveInfo[] = [];\r\n\r\n  serverList.forEach((server) => {\r\n    const drivesInput = server.drives.map((drive) => {\r\n      return drive;\r\n    });\r\n\r\n    allDrivesArray = [...allDrivesArray, ...drivesInput];\r\n  });\r\n\r\n  const serversGroup = groupBy(serverList, \"state\");\r\n  const { offline: offlineServers = [], online: onlineServers = [] } =\r\n    serversGroup;\r\n  const drivesGroup = groupBy(allDrivesArray, \"state\");\r\n  const { offline: offlineDrives = [], ok: onlineDrives = [] } = drivesGroup;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxWidth: \"1536px\",\r\n        margin: \"auto\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"grid\",\r\n          gridTemplateRows: \"1fr\",\r\n          gridTemplateColumns: \"1fr\",\r\n          gap: \"27px\",\r\n          marginBottom: \"40px\",\r\n          marginTop: \"40px\",\r\n          marginLeft: \"40px\",\r\n          marginRight: \"40px\",\r\n        }}\r\n      >\r\n        <Box>\r\n          {usage?.prometheusNotReady && (\r\n            <HelpBox\r\n              iconComponent={<PrometheusErrorIcon />}\r\n              title={\"We can't retrieve advanced metrics at this time\"}\r\n              help={\r\n                <Fragment>\r\n                  Mantle SDS Dashboard will display basic metrics as we couldn't\r\n                  connect to Prometheus successfully.\r\n                  <br /> <br />\r\n                  Please try again in a few minutes. If the problem persists,\r\n                  you can review your configuration and confirm that Prometheus\r\n                  server is up and running.\r\n                </Fragment>\r\n              }\r\n            />\r\n          )}\r\n\r\n          {!usage?.prometheusNotReady && (\r\n            <HelpBox\r\n              iconComponent={<PrometheusErrorIcon />}\r\n              title={\"We can’t retrieve advanced metrics at this time.\"}\r\n              help={\r\n                <Box>\r\n                  <Box\r\n                    sx={{\r\n                      fontSize: \"14px\",\r\n                    }}\r\n                  >\r\n                    Mantle SDS Dashboard will display basic metrics as we couldn’t\r\n                    connect to Prometheus successfully. Please try again in a\r\n                    few minutes. If the problem persists, you can review your\r\n                    configuration and confirm that Prometheus server is up and\r\n                    running.\r\n                  </Box>\r\n                </Box>\r\n              }\r\n            />\r\n          )}\r\n        </Box>\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr\",\r\n            gap: \"40px\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"grid\",\r\n              gridTemplateRows: \"136px\",\r\n              gridTemplateColumns: {\r\n                sm: \"1fr 1fr 1fr\",\r\n                xs: \"1fr\",\r\n              },\r\n              gap: {\r\n                md: \"20px\",\r\n                xs: \"20px\",\r\n              },\r\n            }}\r\n          >\r\n            <BoxItem>\r\n              <CounterCard\r\n                label={\"Buckets\"}\r\n                icon={<BucketsIcon />}\r\n                counterValue={usage ? representationNumber(usage.buckets) : 0}\r\n                actions={\r\n                  <Link\r\n                    to={IAM_PAGES.BUCKETS}\r\n                    style={{\r\n                      zIndex: 999,\r\n                      textDecoration: \"none\",\r\n                      top: \"40px\",\r\n                      position: \"relative\",\r\n                      marginRight: \"75px\",\r\n                    }}\r\n                  >\r\n                    <RBIconButton\r\n                      tooltip={\"Browse\"}\r\n                      onClick={() => {}}\r\n                      text={\"Browse\"}\r\n                      icon={<ArrowRightIcon />}\r\n                      color={\"primary\"}\r\n                      variant={\"outlined\"}\r\n                    />\r\n                  </Link>\r\n                }\r\n              />\r\n            </BoxItem>\r\n            <BoxItem>\r\n              <CounterCard\r\n                label={\"Objects\"}\r\n                icon={<TotalObjectsIcon />}\r\n                counterValue={usage ? representationNumber(usage.objects) : 0}\r\n              />\r\n            </BoxItem>\r\n\r\n            <BoxItem>\r\n              <StatusCountCard\r\n                onlineCount={onlineServers.length}\r\n                offlineCount={offlineServers.length}\r\n                label={\"Servers\"}\r\n                icon={<ServersIcon />}\r\n              />\r\n            </BoxItem>\r\n            <BoxItem>\r\n              <StatusCountCard\r\n                offlineCount={offlineDrives.length}\r\n                onlineCount={onlineDrives.length}\r\n                label={\"Drives\"}\r\n                icon={<DrivesIcon />}\r\n              />\r\n            </BoxItem>\r\n\r\n            <Box\r\n              sx={{\r\n                gridRowStart: \"1\",\r\n                gridRowEnd: \"3\",\r\n                gridColumnStart: \"3\",\r\n                border: \"1px solid #f1f1f1\",\r\n                padding: \"15px\",\r\n                display: \"grid\",\r\n                justifyContent: \"stretch\",\r\n              }}\r\n            >\r\n              <ReportedUsage\r\n                usageValue={usageValue}\r\n                total={usageToRepresent.total}\r\n                unit={usageToRepresent.unit}\r\n              />\r\n\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexFlow: \"column\",\r\n                  gap: \"14px\",\r\n                }}\r\n              >\r\n                <TimeStatItem\r\n                  icon={<HealIcon />}\r\n                  label={\r\n                    <Box>\r\n                      <Box\r\n                        sx={{\r\n                          display: {\r\n                            md: \"inline\",\r\n                            xs: \"none\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        Time since last\r\n                      </Box>{\" \"}\r\n                      Heal Activity\r\n                    </Box>\r\n                  }\r\n                  value={lastHeal}\r\n                />\r\n                <TimeStatItem\r\n                  icon={<DiagnosticsMenuIcon />}\r\n                  label={\r\n                    <Box>\r\n                      <Box\r\n                        sx={{\r\n                          display: {\r\n                            md: \"inline\",\r\n                            xs: \"none\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        Time since last\r\n                      </Box>{\" \"}\r\n                      Scan Activity\r\n                    </Box>\r\n                  }\r\n                  value={lastScan}\r\n                />\r\n                <TimeStatItem\r\n                  icon={<UptimeIcon />}\r\n                  label={\"Uptime\"}\r\n                  value={upTime}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"grid\",\r\n              gridTemplateRows: \"auto\",\r\n              gridTemplateColumns: \"1fr\",\r\n              gap: \"auto\",\r\n            }}\r\n          >\r\n            <ServersList data={serverList} />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BasicDashboard;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\n\r\nimport get from \"lodash/get\";\r\nimport PrDashboard from \"./Prometheus/PrDashboard\";\r\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { containerForHeader } from \"../Common/FormComponents/common/styleLibrary\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { LinearProgress } from \"@mui/material\";\r\nimport api from \"../../../common/api\";\r\nimport { Usage } from \"./types\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\nimport BasicDashboard from \"./BasicDashboard/BasicDashboard\";\r\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../store\";\r\n\r\ninterface IDashboardSimple {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...containerForHeader(theme.spacing(4)),\r\n  });\r\n\r\nconst Dashboard = ({ classes }: IDashboardSimple) => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [basicResult, setBasicResult] = useState<Usage | null>(null);\r\n\r\n  const fetchUsage = useCallback(() => {\r\n    api\r\n      .invoke(\"GET\", `/api/v1/admin/info`)\r\n      .then((res: Usage) => {\r\n        setBasicResult(res);\r\n        setLoading(false);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        dispatch(setErrorSnackMessage(err));\r\n        setLoading(false);\r\n      });\r\n  }, [setBasicResult, setLoading, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      fetchUsage();\r\n    }\r\n  }, [loading, fetchUsage]);\r\n\r\n  const widgets = get(basicResult, \"widgets\", null);\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader label=\"Metrics\" />\r\n      {loading ? (\r\n        <Grid container>\r\n          <Grid item xs={12} className={classes.container}>\r\n            <LinearProgress />\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Fragment>\r\n          {widgets !== null ? (\r\n            <PrDashboard />\r\n          ) : (\r\n            <BasicDashboard usage={basicResult} />\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Dashboard);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nexport const TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      style={{ marginTop: \"5px\" }}\r\n      {...other}\r\n    >\r\n      {value === index && <Fragment>{children}</Fragment>}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","DateFilterAdornIcon","sx","actionsTray","widgetContainerCommon","syncButton","schedulerIcon","opacity","selectorLabel","color","whiteSpace","marginLeft","timeStart","setTimeStart","timeEnd","setTimeEnd","triggerSync","label","startLabel","endLabel","WebkitTextFillColor","md","gridTemplateColumns","sm","padding","gap","fill","value","onChange","id","classNamePrefix","forFilterContained","noInputIcon","openPickerIcon","justifyContent","type","variant","onClick","endIcon","dateSelectorOverride","borderBottom","borderColor","dateSelectorFilterOverride","dateSelectorFormOverride","maxWidth","parentDateOverride","flexGrow","textBoxContainer","openListIcon","marginTop","paperOverride","margin","textAlign","palette","primary","main","minHeight","borderTop","content","position","top","left","fieldBasic","tooltipHelper","forSearchBlock","tooltip","required","disabled","adornment","startAdornment","endAdornment","classOverridden","clsName","inputItem","dateAdapter","AdapterMoment","InputProps","components","OpenPickerIcon","renderInput","props","ampm","PopperProps","containerCls","fieldContainer","Fragment","htmlFor","inputLabel","tooltipContainer","placement","deleteDialogStyles","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","dispatch","useAppDispatch","useState","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","titleText","closeContainer","closeButton","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","STATUS_COLORS","RED","GREEN","YELLOW","getDriveStatusColor","activeDisks","totalDrives","serverStatusColor","health_status","getNetworkStatusColor","activeNetwork","networkTotal","widgetType","colorsMain","niceDaysFromNS","seconds","niceDays","roundNumber","parseInt","toString","panelsConfiguration","data","simpleWidget","widgetIcon","labelDisplayFunction","dataOuter","name","widgetConfiguration","outerChart","colorList","innerRadius","outerRadius","startAngle","endAngle","innerChart","pieChart","innerLabel","niceBytes","dataKey","keyLabel","lineColor","fillColor","areaGraph","yAxisFormatter","xAxisFormatter","getTimeFromTimestamp","background","greatestColor","customStructure","originTag","displayTag","barChart","singleRep","strokeWidth","linearGraph","HealIcon","DiagnosticsIcon","disableYAxis","mergedPanels","singleValue","calculateMainValue","elements","metricCalc","sumValues","reduce","accumulator","currValue","parseFloat","Math","floor","sortResult","sort","value1","value2","widgetDetailsToPanel","payloadData","panelItem","typeOfPayload","get","valueDisplay","chartSeries","filter","seriesItem","values","map","chartTarget","result","Array","isArray","elementValue","metricKeyItem","Object","keys","metric","metricName","legend","legendFormat","firstTarget","totalValues","targets","series","plotValues","forEach","targetMaster","index","results","itemVals","labelName","metrics","keysToReplace","expToReplace","RegExp","join","replacedLegend","replace","matchItem","nwMatchItem","countVarsOpen","match","countVarsClose","cleanLegend","element","constructLabelNames","keyName","push","valInfo","itemIndex","findIndex","itemToPush","seriesWithColors","series1","series2","serialC","textToRGBColor","sortedVals","chartBars","sortFunction","structureItem","metricTake","find","lastValue","a","valuesForBackground","eachVal","splitSizeMetric","val","splittedText","split","vl","isNaN","representationNumber","units","tabSubStyles","makeStyles","tabRoot","selected","indicator","scroller","selectedTab","tabOptions","subStyles","Tabs","indicatorColor","textColor","scrollButtons","e","newValue","option","Tab","key","tooltipCommon","active","payload","barChartConfiguration","customTooltip","timeStampTitle","pl","labelContainer","labelColor","style","itemValue","valueContainer","Box","cursor","openZoomPage","ZoomOutMap","Z","componentRef","React","anchorEl","setAnchorEl","openDownloadMenu","Boolean","downloadAsCSV","objectToConvert","filename","text","document","createElement","setAttribute","body","appendChild","click","removeChild","download","Date","now","trim","toLowerCase","concat","it","err","setErrorSnackMessage","onDownloadError","errorMessage","detailedError","justifyItems","currentTarget","Menu","MenuItem","ListItemText","pngFileName","exportComponentAsPNG","fileName","downloadAsPNG","CustomizedAxisTick","y","textAnchor","transform","dy","widgetCommon","loadingAlign","propLoading","apiPrefix","zoomActivated","loading","setLoading","setData","setResult","hover","setHover","useRef","stepCalc","secondsInPeriod","unix","periods","api","then","res","widgetsWithValue","catch","greatestIndex","currentValue","dataGraph","useTheme","biggerThanMd","useMediaQuery","breakpoints","up","singleValueContainer","onMouseOver","onMouseLeave","Grid","titleContainer","Loader","ref","zoomChartCont","contentContainer","ResponsiveContainer","BarChart","layout","barCategoryGap","XAxis","hide","YAxis","interval","tick","tickLine","axisLine","bar","Bar","barSize","_","Cell","Tooltip","linearConfiguration","verticalAlignment","flexDirection","chartCont","legendChart","flex","maxHeight","overflowY","hideYAxis","areaWidget","var1","var2","csvData","setCsvData","dataMax","setDataMax","maxVal","dp","intervalCount","dateFormatData","date","CustomizedDot","prop","cx","cy","r","dspLongDate","alignContent","AreaChart","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","strokeOpacity","stroke","vertical","tickFormatter","tickCount","domain","section","Area","isAnimationActive","fillOpacity","strokeLinecap","dot","wrapperStyle","zIndex","singleLegendContainer","colorContainer","legendLabel","pieChartLabel","chartContainer","dataInner","setDataInner","setDataOuter","pieChartConfiguration","middleLabel","innerColors","outerColors","PieChart","Pie","entry","connector","connect","mainWidgetContainer","icon","widgetLabel","textTransform","widgetValue","iconWidget","renderFn","valueToRender","fontFamily","flexFlow","overflow","enterDelay","xl","lg","textOverflow","repNumber","resultRep","lineHeight","titleElement","containerAlignment","totalUsableFree","setTotalUsableFree","totalUsableFreeRatio","setTotalUsableFreeRatio","totalUsed","setTotalUsed","totalUsable","setTotalUsable","tUsable","tUsed","tFree","eachArray","itemSum","freeRatio","round","usedConvert","calculateBytes","capacityColors","alignSelf","animationDuration","total","unit","niceBytesInt","componentToUse","CmpToRender","HealActivityRenderer","ScanActivityRenderer","UptimeActivityRenderer","includes","ModalWrapper","closeZoomPage","summaryPanelsLayout","minWidth","columns","componentId","trafficPanelsLayout","flexShrink","resourcesPanelsLayout","resourcesPanelsLayoutAdvanced","RowPanelLayout","cardSubStyles","cardRoot","metricText","unitText","subHearderContainer","subMessage","headerContainer","viewAll","extraMargin","metricValue","metricUnit","moreLink","rightComponent","SubHeader","leftSide","rightSide","Header","to","Card","CardHeader","subheader","leftComponent","statLabel","statItemLeft","statItemRight","info","leftPanel","rightPanel","lStatItem","rStatItem","statIcon","rightCmp","leftCmp","dashboardRow","flexWrap","zoomOpen","dashboard","zoom","openZoom","zoomWidget","widgetRender","panelInformation","setPanelInformation","curTab","setCurTab","fetchUsage","useCallback","widgets","panelT","renderPanelItems","layoutRows","prev","rowItem","rIdx","cellItems","cellItem","colIdx","panelInfo","renderCmpByConfig","panel","rowConfig","PageLayout","DateRangeSelector","onlineCount","offlineCount","okStatusText","notOkStatusText","ServerStatItem","statusColor","hasStatus","commonDashboardInfocard","server","networkKeys","drives","acc","network","endpoint","uptime","version","driveStatusColor","drive","totalSpace","usedSpace","wordBreak","availableSpace","expanded","setExpanded","handleClick","List","component","serverInfo","isExpanded","ListItemButton","ListSubheader","Collapse","in","timeout","unmountOnExit","driveInfo","counterValue","actions","usageValue","BoxItem","usage","usageToRepresent","undefined","prettyUsage","lastScan","lastHeal","upTime","serverList","servers","b","nameA","nameB","getServersList","allDrivesArray","drivesInput","serversGroup","groupBy","offline","offlineServers","online","onlineServers","drivesGroup","offlineDrives","ok","onlineDrives","gridTemplateRows","prometheusNotReady","HelpBox","buckets","IAM_PAGES","textDecoration","RBIconButton","objects","gridRowStart","gridRowEnd","gridColumnStart","containerForHeader","spacing","basicResult","setBasicResult","PageHeader","LinearProgress","TabPanel","other","role","hidden"],"sourceRoot":""}
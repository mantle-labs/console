{"version":3,"file":"static/js/7045.fcdc1336.chunk.js","mappings":"gJAuCA,IAhBoC,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACrC,OACE,SAAC,IAAD,CACEC,GAAI,CACFC,OAAQ,oBACRC,QAAS,CACPC,GAAI,OACJC,GAAI,SALV,SASGL,GAGN,C,4LCAKM,EAAYC,EAAAA,GAAAA,QAAoB,SAACC,GAAD,MAAkC,KAAnBA,EAAUC,IAAzB,IA8DtC,WAAeC,EAAAA,EAAAA,IA5DA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,kBACRC,EAAAA,IACAC,EAAAA,IAHQ,GA4Df,EAtDiC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAC5BC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,KAAND,EACR,OACE,UAAC,EAAAE,SAAD,YACE,SAAC,IAAD,CACEC,OACE,SAAC,EAAAD,SAAD,WACE,SAAC,IAAD,CACEE,GAAIC,EAAAA,GAAAA,wBACJF,MAAOH,EAAE,4BAIfM,SAAS,SAAC,WAAD,OAEX,SAAC,IAAD,WACE,UAAC,IAAD,YACE,gBAAKC,MAAO,CAAEC,SAAU,GAAIC,WAAY,IAAKC,cAAe,IAA5D,SACGV,EAAE,yBAEL,gBAAKW,UAAWd,EAAQe,cAAxB,SACGxB,EAAUyB,KAAI,SAACC,GACd,OACE,oBAEEH,UAAWd,EAAQkB,YACnBC,QAAS,WACPlB,EAAS,GAAD,OACHO,EAAAA,GAAAA,4BADG,YACsCS,EAAKG,eAEpD,EAPH,WASE,gBAAKN,UAAWd,EAAQqB,gBAAxB,UACE,gBACEC,IAAKL,EAAKvB,KACVoB,UAAWd,EAAQuB,WACnBC,IAAKP,EAAKQ,iBAId,gBAAKX,UAAWd,EAAQ0B,iBAAxB,UACE,uBAAIT,EAAKQ,kBAlBb,eACeR,EAAKQ,aAqBvB,aAMZ,G,mOC5EYE,EAAiB,kBACjBC,EAAc,eACdC,EAAc,eACdC,EAAa,cACbC,EAAa,cACbC,EAAc,eACdC,EAAa,cACbC,EAAsB,uBACtBC,EAAiB,iBACjBC,EAAY,aAEZC,EAAwB,SACnCC,GAEA,OAAOA,EAAqBtB,KAAI,SAACuB,GAC/B,MAAO,CACLC,aAAa,GAAD,OAAKD,EAAQE,QAAb,YAAwBF,EAAQG,YAC5CC,KAAMJ,EAAQE,QACdC,WAAYH,EAAQG,WACpBE,OAAQL,EAAQK,OAEnB,GACF,EAEYpD,EAAe,CAC1B,CACE4B,cAAeO,EACfF,YAAa,aACb/B,KAAM,sBAER,CACE0B,cAAeS,EACfJ,YAAa,QACb/B,KAAM,mBAER,CACE0B,cAAeU,EACfL,YAAa,OACb/B,KAAM,kBAER,CACE0B,cAAeW,EACfN,YAAa,OACb/B,KAAM,kBAER,CACE0B,cAAeY,EACfP,YAAa,QACb/B,KAAM,mBAER,CACE0B,cAAea,EACfR,YAAa,OACb/B,KAAM,kBAER,CACE0B,cAAeQ,EACfH,YAAa,QACb/B,KAAM,mBAER,CACE0B,cAAec,EACfT,YAAa,iBACb/B,KAAM,2BAER,CACE0B,cAAee,EACfV,YAAa,UACb/B,KAAM,sBAER,CACE0B,cAAegB,EACfX,YAAa,MACb/B,KAAM,kBAIJmD,EAAe,CACnB,CACEF,KAAM,YACNrC,MAAOwC,EAAAA,GAAAA,EAAU,aACjBC,UAAU,EAEVC,QAASF,EAAAA,GAAAA,EAAU,uCACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,oBAEzB,CACEH,KAAM,cACNrC,MAAOwC,EAAAA,GAAAA,EAAU,eACjBC,UAAU,EAEVC,QAASF,EAAAA,GAAAA,EAAU,yCACnBG,KAAM,SACNC,YAAYJ,EAAAA,GAAAA,EAAU,sBAExB,CACEH,KAAM,UACNrC,MAAOwC,EAAAA,GAAAA,EAAU,WACjBC,UAAU,EACVE,KAAM,UACNC,YAAaJ,EAAAA,GAAAA,EAAU,wBAIdK,EAAoB,SAACC,GAGhC,OAFuBA,EAAWC,QAAO,SAACC,GAAD,MAA2B,KAAhBA,EAAMC,KAAjB,GAG1C,EAEYC,GAAgC,eAC1C3B,EAD0C,CAEzC,CACEc,KAAM,UACNrC,MAAOwC,EAAAA,GAAAA,EAAU,WACjBC,UAAU,EAEVC,QAASF,EAAAA,GAAAA,EAAU,0CACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,kBAEzB,CACEH,KAAM,QACNrC,MAAOwC,EAAAA,GAAAA,EAAU,SACjBE,QAASF,EAAAA,GAAAA,EAAU,qBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,gBAEzB,CACEH,KAAM,gBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,iBACjBE,QAASF,EAAAA,GAAAA,EAAU,oCACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,wBAEzB,CACEH,KAAM,gBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,iBACjBE,QAASF,EAAAA,GAAAA,EAAU,oCACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,wBAEzB,CACEH,KAAM,iBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,kBACjBE,QAASF,EAAAA,GAAAA,EAAU,qCACnBG,KAAM,UAER,CACEN,KAAM,kBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,mBACjBE,QAASF,EAAAA,GAAAA,EAAU,uCACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,0BAEzB,CACEH,KAAM,OACNrC,MAAO,OACP0C,QAASF,EAAAA,GAAAA,EAAU,sBACnBG,KAAM,UAER,CACEN,KAAM,MACNrC,MAAO,MACP0C,QAASF,EAAAA,GAAAA,EAAU,wBACnBG,KAAM,UAER,CACEN,KAAM,kBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,mBACjBE,QAASF,EAAAA,GAAAA,EAAU,2BACnBG,KAAM,UAER,CACEN,KAAM,kBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,mBACjBE,QAASF,EAAAA,GAAAA,EAAU,uBACnBG,KAAM,OACNC,YAAaJ,EAAAA,GAAAA,EAAU,0BAEzB,CACEH,KAAM,iBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,kBACjBE,QAASF,EAAAA,GAAAA,EAAU,sBACnBG,KAAM,OACNC,YAAaJ,EAAAA,GAAAA,EAAU,yBAEzB,CACEH,KAAM,UACNrC,MAAO,UACP0C,QAASF,EAAAA,GAAAA,EAAU,qCACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,yBAlFgB,OAoFtCD,KApFsC,SAsF1Cf,EAtF0C,CAuFzC,CACEa,KAAM,MACNI,UAAU,EACVzC,MAAO,MACP0C,QAASF,EAAAA,GAAAA,EAAU,eACnBG,KAAM,OAER,CACEN,KAAM,WACNrC,MAAOwC,EAAAA,GAAAA,EAAU,YACjBE,QAASF,EAAAA,GAAAA,EAAU,yBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,mBAEzB,CACEH,KAAM,gBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,iBACjBE,QAASF,EAAAA,GAAAA,EAAU,sBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,wBAEzB,CACEH,KAAM,cACNrC,MAAOwC,EAAAA,GAAAA,EAAU,eACjBE,QAASF,EAAAA,GAAAA,EAAU,uBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,sBAEzB,CACEH,KAAM,YACNrC,MAAOwC,EAAAA,GAAAA,EAAU,aACjBE,QAASF,EAAAA,GAAAA,EAAU,qBACnBG,KAAM,UAER,CACEN,KAAM,UACNrC,MAAOwC,EAAAA,GAAAA,EAAU,WACjBE,QAASF,EAAAA,GAAAA,EAAU,mBACnBG,KAAM,UAER,CACEN,KAAM,UACNrC,MAAOwC,EAAAA,GAAAA,EAAU,WACjBE,QAAQF,EAAAA,GAAAA,EAAU,mBAClBG,KAAM,UAER,CACEN,KAAM,WACNrC,MAAOwC,EAAAA,GAAAA,EAAU,YACjBE,QAAQF,EAAAA,GAAAA,EAAU,oBAClBG,KAAM,UAER,CACEN,KAAM,eACNrC,MAAOwC,EAAAA,GAAAA,EAAU,gBACjBE,QAAQF,EAAAA,GAAAA,EAAU,wBAClBG,KAAM,UAER,CACEN,KAAM,gBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,iBACjBE,QAASF,EAAAA,GAAAA,EAAU,yBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,yBAtJgB,OAwJtCD,KAxJsC,SA0J1Cb,EA1J0C,CA2JzC,CACEW,KAAM,UACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,WACjBE,QAASF,EAAAA,GAAAA,EAAU,mBACnBG,KAAM,UACNC,YAAaJ,EAAAA,GAAAA,EAAU,kBAEzB,CACEH,KAAM,MACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,OACjBE,QAASF,EAAAA,GAAAA,EAAU,eACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,uBAEzB,CACEH,KAAM,WACNrC,MAAOwC,EAAAA,GAAAA,EAAU,YACjBE,QAASF,EAAAA,GAAAA,EAAU,yBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,oBAhLgB,OAkLtCD,KAlLsC,SAoL1Cd,EApL0C,CAqLzC,CACEY,KAAM,SACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,UACjBE,QAASF,EAAAA,GAAAA,EAAU,kBACnBG,KAAM,MACNC,YAAaJ,EAAAA,GAAAA,EAAU,kBAEzB,CACEH,KAAM,QACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,SACjBE,QAASF,EAAAA,GAAAA,EAAU,oBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,gBAEzB,CACEH,KAAM,WACNrC,MAAOwC,EAAAA,GAAAA,EAAU,YACjBE,QAASF,EAAAA,GAAAA,EAAU,iBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,mBAEzB,CACEH,KAAM,WACNrC,MAAOwC,EAAAA,GAAAA,EAAU,YACjBE,QAASF,EAAAA,GAAAA,EAAU,yBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,mBAEzB,CACEH,KAAM,MACNrC,MAAO,MACP0C,QAASF,EAAAA,GAAAA,EAAU,gCACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,cAEzB,CACEH,KAAM,sBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,uBACjBE,QAASF,EAAAA,GAAAA,EAAU,+BACnBG,KAAM,WACNC,YAAaJ,EAAAA,GAAAA,EAAU,8BAEzB,CACEH,KAAM,qBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,sBACjBE,QAASF,EAAAA,GAAAA,EAAU,8BACnBG,KAAM,WACNC,YAAaJ,EAAAA,GAAAA,EAAU,8BAtOgB,OAwOtCD,KAxOsC,SA0O1CZ,EA1O0C,CA2OzC,CACEU,KAAM,UACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,WACjBE,QAASF,EAAAA,GAAAA,EAAU,wBACnBG,KAAM,UACNC,YAAaJ,EAAAA,GAAAA,EAAU,kBAEzB,CACEH,KAAM,UACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,WACjBE,QAASF,EAAAA,GAAAA,EAAU,mBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,kBAEzB,CACEH,KAAM,WACNrC,MAAOwC,EAAAA,GAAAA,EAAU,YACjBE,QAASF,EAAAA,GAAAA,EAAU,oBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,wBAEzB,CACEH,KAAM,WACNrC,MAAOwC,EAAAA,GAAAA,EAAU,YACjBE,QAASF,EAAAA,GAAAA,EAAU,yBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,wBAEzB,CACEH,KAAM,QACNrC,MAAOwC,EAAAA,GAAAA,EAAU,SACjBE,QAASF,EAAAA,GAAAA,EAAU,iBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,gBAEzB,CACEH,KAAM,MACNrC,MAAO,MACP0C,QAASF,EAAAA,GAAAA,EAAU,eACnBG,KAAM,UAER,CACEN,KAAM,kBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,mBACjBE,QAAQF,EAAAA,GAAAA,EAAU,uBAClBG,KAAM,UAER,CACEN,KAAM,gBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,iBACjBE,QAASF,EAAAA,GAAAA,EAAU,yBACnBG,KAAM,WACNC,YAAaJ,EAAAA,GAAAA,EAAU,wBAEzB,CACEH,KAAM,YACNrC,MAAOwC,EAAAA,GAAAA,EAAU,aACjBE,QAASF,EAAAA,GAAAA,EAAU,qBACnBG,KAAM,UAER,CACEN,KAAM,kBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,mBACjBE,QAASF,EAAAA,GAAAA,EAAU,2BACnBG,KAAM,UAER,CACEN,KAAM,mCACNrC,MAAOwC,EAAAA,GAAAA,EAAU,oCACjBE,QAASF,EAAAA,GAAAA,EAAU,4CACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,2CAEzB,CACEH,KAAM,uBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,wBACjBE,QAASF,EAAAA,GAAAA,EAAU,gCACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,+BAEzB,CACEH,KAAM,iBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,kBACjBE,QAASF,EAAAA,GAAAA,EAAU,0BACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,yBAEzB,CACEH,KAAM,cACNrC,MAAOwC,EAAAA,GAAAA,EAAU,eACjBE,QAAQF,EAAAA,GAAAA,EAAU,uBAClBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,sBAEzB,CACEH,KAAM,aACNrC,MAAOwC,EAAAA,GAAAA,EAAU,cACjBE,QAASF,EAAAA,GAAAA,EAAU,sBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,sBAhVgB,OAkVtCD,KAlVsC,SAoV1CX,EApV0C,CAqVzC,CACES,KAAM,MACNI,UAAU,EACVzC,MAAO,MACP0C,QAAQF,EAAAA,GAAAA,EAAU,eAClBG,KAAM,MACNC,YAAaJ,EAAAA,GAAAA,EAAU,cAEzB,CACEH,KAAM,QACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,SACjBE,QAAQF,EAAAA,GAAAA,EAAU,iBAClBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,gBAEzB,CACEH,KAAM,SACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,UACjBE,QAAQF,EAAAA,GAAAA,EAAU,kBAClBG,KAAM,OACNC,YAAaJ,EAAAA,GAAAA,EAAU,kBA3WgB,OA6WtCD,KA7WsC,SA+W1CV,EA/W0C,CAgXzC,CACEQ,KAAM,WACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,YACjBE,QAAQF,EAAAA,GAAAA,EAAU,oBAClBG,KAAM,MACNC,YAAaJ,EAAAA,GAAAA,EAAU,kBAEzB,CACEH,KAAM,aACNrC,MAAOwC,EAAAA,GAAAA,EAAU,cACjBE,QAASF,EAAAA,GAAAA,EAAU,sBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,sBA7XgB,OA+XtCD,KA/XsC,SAiY1CT,EAjY0C,CAkYzC,CACEO,KAAM,eACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,gBACjBE,QAASF,EAAAA,GAAAA,EAAU,wBACnBG,KAAM,UACNC,YAAaJ,EAAAA,GAAAA,EAAU,uBAEzB,CACEH,KAAM,QACNI,UAAU,EACVzC,MAAOwC,EAAAA,GAAAA,EAAU,SACjBE,QAASF,EAAAA,GAAAA,EAAU,iBACnBG,KAAM,SACNC,YAAaJ,EAAAA,GAAAA,EAAU,gBAEzB,CACEH,KAAM,MACNrC,MAAO,MACP0C,QAASF,EAAAA,GAAAA,EAAU,eACnBG,KAAM,UAER,CACEN,KAAM,kBACNrC,MAAOwC,EAAAA,GAAAA,EAAU,mBACjBE,QAAQF,EAAAA,GAAAA,EAAU,2BAClBG,KAAM,WA5ZiC,OA8ZtCJ,IA9ZsC,GAkavCY,EAA6C,CACjDC,QAAS,iBACTC,KAAM,cACNC,MAAO,eACPC,KAAM,cACNC,KAAM,cACNC,IAAK,aACLC,MAAO,eACPC,WAAY,kBACZC,cAAe,uBACfC,MAAO,gBAGIC,EAA2B,SAACC,GACvC,OAAOZ,EAAmBY,EAC3B,C","sources":["screens/Console/Common/ContentBox.tsx","screens/Console/NotificationEndpoints/NotificationTypeSelector.tsx","screens/Console/NotificationEndpoints/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst ContentBox: React.FC<Props> = ({ children }) => {\n  return (\n    <Box\n      sx={{\n        border: \"1px solid #eaeaea\",\n        padding: {\n          lg: \"40px\",\n          xs: \"15px\",\n        },\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default ContentBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { servicesList } from \"./utils\";\nimport {\n  settingsCommon,\n  typesSelection,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport BackLink from \"../../../common/BackLink\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport ContentBox from \"../Common/ContentBox\";\nimport { useTranslation } from 'react-i18next';\n\ninterface INotificationTypeSelector {\n  classes: any;\n}\n\nconst withLogos = servicesList.filter((elService) => elService.logo !== \"\");\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...settingsCommon,\n    ...typesSelection,\n  });\n\nconst NotificationTypeSelector = ({ classes }: INotificationTypeSelector) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  return (\n    <Fragment>\n      <PageHeader\n        label={\n          <Fragment>\n            <BackLink\n              to={IAM_PAGES.NOTIFICATIONS_ENDPOINTS}\n              label={t(\"notification_targets\")}\n            />\n          </Fragment>\n        }\n        actions={<React.Fragment />}\n      />\n      <PageLayout>\n        <ContentBox>\n          <div style={{ fontSize: 16, fontWeight: 600, paddingBottom: 15 }}>\n            {t(\"select_target_type\")}            \n          </div>\n          <div className={classes.iconContainer}>\n            {withLogos.map((item) => {\n              return (\n                <button\n                  key={`icon-${item.targetTitle}`}\n                  className={classes.lambdaNotif}\n                  onClick={() => {\n                    navigate(\n                      `${IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD}/${item.actionTrigger}`\n                    );\n                  }}\n                >\n                  <div className={classes.lambdaNotifIcon}>\n                    <img\n                      src={item.logo}\n                      className={classes.logoButton}\n                      alt={item.targetTitle}\n                    />\n                  </div>\n\n                  <div className={classes.lambdaNotifTitle}>\n                    <b>{item.targetTitle}</b>\n                  </div>\n                </button>\n              );\n            })}\n          </div>\n        </ContentBox>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NotificationTypeSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\nimport i18next from \"i18next\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      name: element.service,\n      account_id: element.account_id,\n      status: element.status,\n    };\n  });\n};\n\nexport const servicesList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue-dir\",\n    label: i18next.t(\"queue_dir\"),\n    required: true,\n\n    tooltip: i18next.t(\"staging_dir_for_undelivered_message\"),\n    type: \"string\",\n    placeholder: i18next.t(\"enter_queue_dir\"),\n  },\n  {\n    name: \"queue-limit\",\n    label: i18next.t(\"queue_limit\"),\n    required: false,\n\n    tooltip: i18next.t(\"maximum_limit_for_undelivered_message\"),\n    type: \"number\",\n    placeholder:i18next.t(\"enter_queue_limit\"),\n  },\n  {\n    name: \"comment\",\n    label: i18next.t(\"comment\"),\n    required: false,\n    type: \"comment\",\n    placeholder: i18next.t(\"enter_custom_notes\"),\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: i18next.t(\"brokers\"),\n      required: true,\n\n      tooltip: i18next.t(\"comma_separated_list_kafka_broker_adds\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_brokers\"),\n    },\n    {\n      name: \"topic\",\n      label: i18next.t(\"topic\"),\n      tooltip: i18next.t(\"kafka_topic_notif\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_topic\"),\n    },\n    {\n      name: \"sasl_username\",\n      label: i18next.t(\"SALS_username\"),\n      tooltip: i18next.t(\"SALS_username_for_authentication\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_SALS_username\"),\n    },\n    {\n      name: \"sasl_password\",\n      label: i18next.t(\"SALS_password\"),\n      tooltip: i18next.t(\"SALS_password_for_authentication\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_SALS_password\"),\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: i18next.t(\"SALS_mechanism\"),\n      tooltip: i18next.t(\"SALS_mechanism_for_authentication\"),\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: i18next.t(\"TLS_client_auth\"),\n      tooltip: i18next.t(\"client_auth_determines_kafka_policy\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_TLS_client_auth\"),\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: i18next.t(\"set_on_enable_SASL\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: i18next.t(\"set_on_to_enalbe_TLS\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: i18next.t(\"TLS_slip_verify\"),\n      tooltip: i18next.t(\"TLS_slip_verify_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: i18next.t(\"client_TLS_cert\"),\n      tooltip: i18next.t(\"path_to_client_cret\"),\n      type: \"path\",\n      placeholder: i18next.t(\"enter_client_TLS_cert\"),\n    },\n    {\n      name: \"client_tls_key\",\n      label: i18next.t(\"client_TLS_key\"),\n      tooltip: i18next.t(\"path_to_client_key\"),\n      type: \"path\",\n      placeholder: i18next.t(\"enter_client_TLS_key\"),\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: i18next.t(\"specify_version_for_kafka_cluster\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_kafka_version\"),\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip: i18next.t(\"URL_tooltip\"),\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: i18next.t(\"exchange\"),\n      tooltip: i18next.t(\"name_of_AMQP_exchange\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_exchange\"),\n    },\n    {\n      name: \"exchange_type\",\n      label: i18next.t(\"exchange_type\"),\n      tooltip: i18next.t(\"AMQP_exchange_type\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_exchange_type\"),\n    },\n    {\n      name: \"routing_key\",\n      label: i18next.t(\"routing_key\"),\n      tooltip: i18next.t(\"routing_key_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_routing_key\"),\n    },\n    {\n      name: \"mandatory\",\n      label: i18next.t(\"mandatory\"),\n      tooltip: i18next.t(\"mandatory_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: i18next.t(\"durable\"),\n      tooltip: i18next.t(\"durable_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: i18next.t(\"no_wait\"),\n      tooltip:i18next.t(\"no_wait_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: i18next.t(\"internal\"),\n      tooltip:i18next.t(\"internal_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: i18next.t(\"auto_deleted\"),\n      tooltip:i18next.t(\"auto_deleted_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: i18next.t(\"delivery_mode\"),\n      tooltip: i18next.t(\"delivery_mode_tooltip\"),\n      type: \"number\",\n      placeholder: i18next.t(\"enter_delivery_mode\"),\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: i18next.t(\"address\"),\n      tooltip: i18next.t(\"address_tooltip\"),\n      type: \"address\",\n      placeholder: i18next.t(\"enter_address\"),\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: i18next.t(\"key\"),\n      tooltip: i18next.t(\"key_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"queue_denter_keyir\"),\n    },\n    {\n      name: \"password\",\n      label: i18next.t(\"password\"),\n      tooltip: i18next.t(\"redis_server_password\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_password\"),\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: i18next.t(\"broker\"),\n      tooltip: i18next.t(\"broker_tooltip\"),\n      type: \"uri\",\n      placeholder: i18next.t(\"enter_brokers\"),\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: i18next.t(\"topic\"),\n      tooltip: i18next.t(\"topic_notif_MQTT\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_topic\"),\n    },\n    {\n      name: \"username\",\n      label: i18next.t(\"username\"),\n      tooltip: i18next.t(\"MQTT_username\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_username\"),\n    },\n    {\n      name: \"password\",\n      label: i18next.t(\"password\"),\n      tooltip: i18next.t(\"MQTT_password_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_password\"),\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: i18next.t(\"set_quality_service_priority\"),\n      type: \"number\",\n      placeholder: i18next.t(\"enter_QOS\"),\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: i18next.t(\"keep_alive_interval\"),\n      tooltip: i18next.t(\"keep_alive_interval_tooltip\"),\n      type: \"duration\",\n      placeholder: i18next.t(\"enter_keep_alive_interval\"),\n    },\n    {\n      name: \"reconnect_interval\",\n      label: i18next.t(\"reconnect_interval\"),\n      tooltip: i18next.t(\"reconnect_interval_tooltip\"),\n      type: \"duration\",\n      placeholder: i18next.t(\"enter_reconnect_interval\"),\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: i18next.t(\"address\"),\n      tooltip: i18next.t(\"address_tooltip_NATS\"),\n      type: \"address\",\n      placeholder: i18next.t(\"enter_address\"),\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: i18next.t(\"subject\"),\n      tooltip: i18next.t(\"subject_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_subject\"),\n    },\n    {\n      name: \"username\",\n      label: i18next.t(\"username\"),\n      tooltip: i18next.t(\"username_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_ANTS_username\"),\n    },\n    {\n      name: \"password\",\n      label: i18next.t(\"password\"),\n      tooltip: i18next.t(\"password_NATS_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_NATS_password\"),\n    },\n    {\n      name: \"token\",\n      label: i18next.t(\"token\"),\n      tooltip: i18next.t(\"token_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_token\"),\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: i18next.t(\"tls_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: i18next.t(\"tls_skip_verify\"),\n      tooltip:i18next.t(\"subject_TLS_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: i18next.t(\"ping_interval\"),\n      tooltip: i18next.t(\"ping_interval_tooltip\"),\n      type: \"duration\",\n      placeholder: i18next.t(\"enter_ping_interval\"),\n    },\n    {\n      name: \"streaming\",\n      label: i18next.t(\"streaming\"),\n      tooltip: i18next.t(\"streaming_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: i18next.t(\"streaming_async\"),\n      tooltip: i18next.t(\"streaming_async_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: i18next.t(\"streaming_max_pub_acks_in_flight\"),\n      tooltip: i18next.t(\"streaming_max_pub_acks_in_flight_tooltip\"),\n      type: \"number\",\n      placeholder: i18next.t(\"enter_streaming_max_pub_acks_in_flight\"),\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: i18next.t(\"streaming_cluster_id\"),\n      tooltip: i18next.t(\"streaming_cluster_id_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_streaming_cluster_id\"),\n    },\n    {\n      name: \"cert_authority\",\n      label: i18next.t(\"cert_authority\"),\n      tooltip: i18next.t(\"cert_authority_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_cert_authority\"),\n    },\n    {\n      name: \"client_cert\",\n      label: i18next.t(\"client_cert\"),\n      tooltip:i18next.t(\"client_cert_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_client_cert\"),\n    },\n    {\n      name: \"client_key\",\n      label: i18next.t(\"client_key\"),\n      tooltip: i18next.t(\"client_key-tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_client_key\"),\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:i18next.t(\"url_tooltip\"),\n      type: \"url\",\n      placeholder: i18next.t(\"enter_url\"),\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: i18next.t(\"index\"),\n      tooltip:i18next.t(\"index_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_index\"),\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: i18next.t(\"format\"),\n      tooltip:i18next.t(\"format_tooltip\"),\n      type: \"enum\",\n      placeholder: i18next.t(\"enter_format\"),\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: i18next.t(\"endpoint\"),\n      tooltip:i18next.t(\"endpoint_tooltip\"),\n      type: \"url\",\n      placeholder: i18next.t(\"enter_endpoit\"),\n    },\n    {\n      name: \"auth_token\",\n      label: i18next.t(\"auth_token\"),\n      tooltip: i18next.t(\"auth_token_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_auth_token\"),\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: i18next.t(\"nsqd_address\"),\n      tooltip: i18next.t(\"nsqd_address_tooltip\"),\n      type: \"address\",\n      placeholder: i18next.t(\"enter_nsqd_address\"),\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: i18next.t(\"topic\"),\n      tooltip: i18next.t(\"topic_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_topic\"),\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: i18next.t(\"tls_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: i18next.t(\"tls_skip_verify\"),\n      tooltip:i18next.t(\"tls_skip_verify_tooltip\"),\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n\nconst serviceToConfigMap: Record<string, string> = {\n  webhook: \"notify_webhook\",\n  amqp: \"notify_amqp\",\n  kafka: \"notify_kafka\",\n  mqtt: \"notify_mqtt\",\n  nats: \"notify_nats\",\n  nsq: \"notify_nsq\",\n  mysql: \"notify_mysql\",\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from restapi/admin_notification_endpoints.go\n  elasticsearch: \"notify_elasticsearch\",\n  redis: \"notify_redis\",\n};\n\nexport const getNotificationConfigKey = (serviceName: string) => {\n  return serviceToConfigMap[serviceName];\n};\n"],"names":["children","sx","border","padding","lg","xs","withLogos","servicesList","elService","logo","withStyles","theme","createStyles","settingsCommon","typesSelection","classes","navigate","useNavigate","t","useTranslation","Fragment","label","to","IAM_PAGES","actions","style","fontSize","fontWeight","paddingBottom","className","iconContainer","map","item","lambdaNotif","onClick","actionTrigger","lambdaNotifIcon","src","logoButton","alt","targetTitle","lambdaNotifTitle","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","element","service_name","service","account_id","name","status","commonFields","i18next","required","tooltip","type","placeholder","removeEmptyFields","formFields","filter","field","value","notificationEndpointsFields","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","getNotificationConfigKey","serviceName"],"sourceRoot":""}
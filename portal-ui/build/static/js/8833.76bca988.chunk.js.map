{"version":3,"file":"static/js/8833.76bca988.chunk.js","mappings":"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","sources":["screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tools/Inspect.tsx","screens/Console/Tools/KeyRevealer.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box, Grid } from \"@mui/material\";\r\nimport HelpBox from \"../../../../common/HelpBox\";\r\n\r\ninterface IDistributedOnly {\r\n  iconComponent: any;\r\n  entity: string;\r\n}\r\n\r\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\r\n  return (\r\n    <Grid container alignItems={\"center\"}>\r\n      <Grid item xs={12}>\r\n        <HelpBox\r\n          title={`${entity} not available`}\r\n          iconComponent={iconComponent}\r\n          help={\r\n            <Box\r\n              sx={{\r\n                fontSize: \"14px\",\r\n                display: \"flex\",\r\n                border: \"none\",\r\n                flexFlow: {\r\n                  xs: \"column\",\r\n                  md: \"row\",\r\n                },\r\n                \"& a\": {\r\n                  color: (theme) => theme.colors.link,\r\n                  textDecoration: \"underline\",\r\n                },\r\n              }}\r\n            >\r\n              <div>This feature is not available for a single-disk setup.</div>\r\n\r\n              <div>\r\n                Please deploy a server in{\" \"}\r\n                <a\r\n                  href=\"https://docs.min.io/minio/baremetal/installation/deploy-minio-distributed.html?ref=con\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  Distributed Mode\r\n                </a>{\" \"}\r\n                to use this feature.\r\n              </div>\r\n            </Box>\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DistributedOnly;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Box, Button, DialogContentText } from \"@mui/material\";\r\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\r\nimport PageLayout from \"../Common/Layout/PageLayout\";\r\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport { PasswordKeyIcon } from \"../../../icons\";\r\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  modalStyleUtils,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport HelpBox from \"../../../common/HelpBox\";\r\nimport {\r\n  deleteCookie,\r\n  encodeURLString,\r\n  getCookieValue,\r\n  performDownload,\r\n} from \"../../../common/utils\";\r\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\r\nimport { InspectMenuIcon } from \"../../../icons/SidebarMenus\";\r\nimport KeyRevealer from \"./KeyRevealer\";\r\nimport { selDistSet, setErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../store\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    switchLabel: {\r\n      fontWeight: \"normal\",\r\n    },\r\n    ...deleteDialogStyles,\r\n    ...modalStyleUtils,\r\n  });\r\n\r\nconst ExampleBlock = ({\r\n  volumeVal,\r\n  pathVal,\r\n}: {\r\n  volumeVal: string;\r\n  pathVal: string;\r\n}) => {\r\n  return (\r\n    <Box className=\"code-block-container\">\r\n      <Box className=\"example-code-block\">\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            marginBottom: \"5px\",\r\n            flexFlow: {\r\n              sm: \"row\",\r\n              xs: \"column\",\r\n            },\r\n          }}\r\n        >\r\n          <label>Volume/bucket Name :</label> <code>{volumeVal}</code>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexFlow: {\r\n              sm: \"row\",\r\n              xs: \"column\",\r\n            },\r\n          }}\r\n        >\r\n          <label>Path : </label>\r\n          <code>{pathVal}</code>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Inspect = ({ classes }: { classes: any }) => {\r\n  const dispatch = useAppDispatch();\r\n  const distributedSetup = useSelector(selDistSet);\r\n  const [volumeName, setVolumeName] = useState<string>(\"\");\r\n  const [inspectPath, setInspectPath] = useState<string>(\"\");\r\n  const [isEncrypt, setIsEncrypt] = useState<boolean>(true);\r\n\r\n  const [decryptionKey, setDecryptionKey] = useState<string>(\"\");\r\n\r\n  const [insFileName, setInsFileName] = useState<string>(\"\");\r\n\r\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\r\n  const [volumeError, setVolumeError] = useState<string>(\"\");\r\n  const [pathError, setPathError] = useState<string>(\"\");\r\n\r\n  /**\r\n   * Validation Effect\r\n   */\r\n  useEffect(() => {\r\n    let isVolValid;\r\n    let isPathValid;\r\n\r\n    isVolValid = volumeName.trim().length > 0;\r\n    if (!isVolValid) {\r\n      setVolumeError(\"This field is required\");\r\n    } else if (volumeName.slice(0, 1) === \"/\") {\r\n      isVolValid = false;\r\n      setVolumeError(\"Volume/Bucket name cannot start with /\");\r\n    }\r\n    isPathValid = inspectPath.trim().length > 0;\r\n    if (!inspectPath) {\r\n      setPathError(\"This field is required\");\r\n    } else if (inspectPath.slice(0, 1) === \"/\") {\r\n      isPathValid = false;\r\n      setPathError(\"Path cannot start with /\");\r\n    }\r\n    const isValid = isVolValid && isPathValid;\r\n\r\n    if (isVolValid) {\r\n      setVolumeError(\"\");\r\n    }\r\n    if (isPathValid) {\r\n      setPathError(\"\");\r\n    }\r\n\r\n    setIsFormValid(isValid);\r\n  }, [volumeName, inspectPath]);\r\n\r\n  const makeRequest = async (url: string) => {\r\n    return await fetch(url, { method: \"GET\" });\r\n  };\r\n\r\n  const performInspect = async () => {\r\n    const file = encodeURLString(inspectPath);\r\n    const volume = encodeURLString(volumeName);\r\n\r\n    const urlOfInspectApi = `/api/v1/admin/inspect?volume=${volume}&file=${file}&encrypt=${isEncrypt}`;\r\n\r\n    makeRequest(urlOfInspectApi)\r\n      .then(async (res) => {\r\n        if (!res.ok) {\r\n          const resErr: any = await res.json();\r\n\r\n          dispatch(\r\n            setErrorSnackMessage({\r\n              errorMessage: resErr.message,\r\n              detailedError: resErr.code,\r\n            })\r\n          );\r\n        }\r\n        const blob: Blob = await res.blob();\r\n\r\n        //@ts-ignore\r\n        const filename = res.headers.get(\"content-disposition\").split('\"')[1];\r\n        const decryptKey = getCookieValue(filename) || \"\";\r\n\r\n        performDownload(blob, filename);\r\n        setInsFileName(filename);\r\n        setDecryptionKey(decryptKey);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setVolumeName(\"\");\r\n    setInspectPath(\"\");\r\n    setIsEncrypt(true);\r\n  };\r\n\r\n  const onCloseDecKeyModal = () => {\r\n    deleteCookie(insFileName);\r\n    setDecryptionKey(\"\");\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader label={\"Inspect\"} />\r\n      <PageLayout>\r\n        {!distributedSetup ? (\r\n          <DistributedOnly\r\n            iconComponent={<InspectMenuIcon />}\r\n            entity={\"Inspect\"}\r\n          />\r\n        ) : (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"flex-start\",\r\n              justifyContent: \"flex-start\",\r\n              border: \"1px solid #eaeaea\",\r\n              padding: {\r\n                lg: \"40px\",\r\n                xs: \"15px\",\r\n              },\r\n              flexWrap: \"wrap\",\r\n              gap: {\r\n                lg: \"55px\",\r\n                xs: \"20px\",\r\n              },\r\n              height: {\r\n                md: \"calc(100vh - 120px)\",\r\n                xs: \"100%\",\r\n              },\r\n              flexFlow: {\r\n                lg: \"row\",\r\n                xs: \"column\",\r\n              },\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                border: \"1px solid #eaeaea\",\r\n                flex: {\r\n                  md: 2,\r\n                  xs: 1,\r\n                },\r\n                width: {\r\n                  lg: \"auto\",\r\n                  xs: \"100%\",\r\n                },\r\n                padding: {\r\n                  lg: \"40px\",\r\n                  xs: \"15px\",\r\n                },\r\n              }}\r\n            >\r\n              <form\r\n                noValidate\r\n                autoComplete=\"off\"\r\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\r\n                  e.preventDefault();\r\n                  performInspect();\r\n                }}\r\n              >\r\n                <Box>\r\n                  <InputBoxWrapper\r\n                    id=\"inspect_volume\"\r\n                    name=\"inspect_volume\"\r\n                    extraInputProps={{\r\n                      \"data-test-id\": \"inspect_volume\",\r\n                    }}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setVolumeName(e.target.value);\r\n                    }}\r\n                    label=\"Volume or Bucket Name\"\r\n                    value={volumeName}\r\n                    error={volumeError}\r\n                    required\r\n                    placeholder={\"test-bucket\"}\r\n                  />\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    marginTop: \"15px\",\r\n                  }}\r\n                >\r\n                  <InputBoxWrapper\r\n                    id=\"inspect_path\"\r\n                    name=\"inspect_path\"\r\n                    extraInputProps={{\r\n                      \"data-test-id\": \"inspect_path\",\r\n                    }}\r\n                    error={pathError}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setInspectPath(e.target.value);\r\n                    }}\r\n                    label=\"File or Path to inspect\"\r\n                    value={inspectPath}\r\n                    required\r\n                    placeholder={\"test*/xl.meta\"}\r\n                  />\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    marginTop: \"25px\",\r\n                  }}\r\n                >\r\n                  <FormSwitchWrapper\r\n                    classes={{\r\n                      inputLabel: classes.switchLabel,\r\n                    }}\r\n                    extraInputProps={{\r\n                      \"data-test-id\": \"inspect_encrypt\",\r\n                    }}\r\n                    label=\"Encrypt\"\r\n                    indicatorLabels={[\"True\", \"False\"]}\r\n                    checked={isEncrypt}\r\n                    value={\"true\"}\r\n                    id=\"inspect_encrypt\"\r\n                    name=\"inspect_encrypt\"\r\n                    onChange={(e) => {\r\n                      setIsEncrypt(!isEncrypt);\r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\",\r\n                    marginTop: \"55px\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    sx={{\r\n                      marginRight: \"15px\",\r\n                    }}\r\n                    type=\"button\"\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    data-test-id=\"inspect-clear-button\"\r\n                    onClick={resetForm}\r\n                  >\r\n                    Clear\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    data-test-id=\"inspect-submit-button\"\r\n                    disabled={!isFormValid}\r\n                  >\r\n                    Inspect\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                flex: 1,\r\n                minWidth: {\r\n                  md: \"365px\",\r\n                  xs: \"100%\",\r\n                },\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <HelpBox\r\n                title={\"\"}\r\n                iconComponent={null}\r\n                help={\r\n                  <Fragment>\r\n                    <Box\r\n                      sx={{\r\n                        marginTop: \"-25px\",\r\n                        fontSize: \"16px\",\r\n                        fontWeight: 600,\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                        padding: \"2px\",\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          backgroundColor: \"#07193E\",\r\n                          height: \"15px\",\r\n                          width: \"15px\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"center\",\r\n                          borderRadius: \"50%\",\r\n                          marginRight: \"18px\",\r\n                          padding: \"3px\",\r\n                          \"& .min-icon\": {\r\n                            height: \"11px\",\r\n                            width: \"11px\",\r\n                            fill: \"#ffffff\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <InspectMenuIcon />\r\n                      </Box>\r\n                      Learn more about the Inspect feature\r\n                    </Box>\r\n\r\n                    <Box\r\n                      sx={{\r\n                        marginTop: \"16px\",\r\n                        fontWeight: 600,\r\n                        fontStyle: \"italic\",\r\n                        fontSize: \"14px\",\r\n                      }}\r\n                    >\r\n                      Examples:\r\n                    </Box>\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        fontSize: \"14px\",\r\n                        flex: \"2\",\r\n                        \"& .step-number\": {\r\n                          color: \"#ffffff\",\r\n                          height: \"25px\",\r\n                          width: \"25px\",\r\n                          background: \"#081C42\",\r\n                          marginRight: \"10px\",\r\n                          textAlign: \"center\",\r\n                          fontWeight: 600,\r\n                          borderRadius: \"50%\",\r\n                        },\r\n\r\n                        \"& .step-row\": {\r\n                          fontSize: \"14px\",\r\n                          display: \"flex\",\r\n                          marginTop: \"15px\",\r\n                          marginBottom: \"15px\",\r\n\r\n                          \"&.step-text\": {\r\n                            fontWeight: 400,\r\n                          },\r\n                          \"&:before\": {\r\n                            content: \"' '\",\r\n                            height: \"7px\",\r\n                            width: \"7px\",\r\n                            backgroundColor: \"#2781B0\",\r\n                            marginRight: \"10px\",\r\n                            marginTop: \"7px\",\r\n                            flexShrink: 0,\r\n                          },\r\n                        },\r\n\r\n                        \"& .code-block-container\": {\r\n                          flex: \"1\",\r\n                          marginTop: \"15px\",\r\n                          marginLeft: \"35px\",\r\n\r\n                          \"& input\": {\r\n                            color: \"#737373\",\r\n                          },\r\n                        },\r\n\r\n                        \"& .example-code-block label\": {\r\n                          display: \"inline-block\",\r\n                          width: {\r\n                            sm: \"160px\",\r\n                            xs: \"100%\",\r\n                          },\r\n                          fontWeight: 600,\r\n                          fontSize: \"14px\",\r\n                        },\r\n\r\n                        \"& code\": {\r\n                          width: {\r\n                            sm: \"100px\",\r\n                            xs: \"100%\",\r\n                          },\r\n                          paddingLeft: \"10px\",\r\n                          fontFamily: \"monospace\",\r\n                          paddingRight: \"10px\",\r\n                          paddingTop: \"3px\",\r\n                          paddingBottom: \"3px\",\r\n                          borderRadius: \"2px\",\r\n                          border: \"1px solid #eaeaea\",\r\n                          fontSize: \"10px\",\r\n                          color: \"#082146\",\r\n                          fontWeight: 500,\r\n                        },\r\n                        \"& .spacer\": {\r\n                          marginBottom: \"5px\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      <Box>\r\n                        <Box className=\"step-row\">\r\n                          <div className=\"step-text\">\r\n                            To Download 'xl.meta' for a specific object from all\r\n                            the drives in a zip file:\r\n                          </div>\r\n                        </Box>\r\n\r\n                        <ExampleBlock\r\n                          pathVal={`test*/xl.meta`}\r\n                          volumeVal={`test-bucket`}\r\n                        />\r\n                      </Box>\r\n\r\n                      <Box>\r\n                        <Box className=\"step-row\">\r\n                          <div className=\"step-text\">\r\n                            To Download all constituent parts for a specific\r\n                            object, and optionally encrypt the downloaded zip:\r\n                          </div>\r\n                        </Box>\r\n\r\n                        <ExampleBlock\r\n                          pathVal={`test*/xl.meta`}\r\n                          volumeVal={`test*/*/part.*`}\r\n                        />\r\n                      </Box>\r\n                      <Box>\r\n                        <Box className=\"step-row\">\r\n                          <div className=\"step-text\">\r\n                            To Download recursively all objects at a prefix.\r\n                            <br />\r\n                            NOTE: This can be an expensive operation use it with\r\n                            caution.\r\n                          </div>\r\n                        </Box>\r\n                        <ExampleBlock\r\n                          pathVal={`test*/xl.meta`}\r\n                          volumeVal={`test/**`}\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n\r\n                    <Box\r\n                      sx={{\r\n                        marginTop: \"30px\",\r\n                        marginLeft: \"15px\",\r\n                        fontSize: \"14px\",\r\n                      }}\r\n                    >\r\n                      You can learn more at our{\" \"}\r\n                      <a\r\n                        href=\"https://github.com/minio/minio/tree/master/docs/debugging?ref=con\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        documentation\r\n                      </a>\r\n                      .\r\n                    </Box>\r\n                  </Fragment>\r\n                }\r\n              />\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        {decryptionKey ? (\r\n          <ModalWrapper\r\n            modalOpen={true}\r\n            title=\"Inspect Decryption Key\"\r\n            onClose={onCloseDecKeyModal}\r\n            titleIcon={<PasswordKeyIcon />}\r\n          >\r\n            <DialogContentText component=\"div\">\r\n              <Box>\r\n                This will be displayed only once. It cannot be recovered.\r\n                <br />\r\n                Use secure medium to share this key.\r\n              </Box>\r\n              <form\r\n                noValidate\r\n                onSubmit={() => {\r\n                  return false;\r\n                }}\r\n              >\r\n                <KeyRevealer value={decryptionKey} />\r\n              </form>\r\n            </DialogContentText>\r\n          </ModalWrapper>\r\n        ) : null}\r\n      </PageLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Inspect);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Box, Button } from \"@mui/material\";\r\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { CopyIcon } from \"../../../icons\";\r\nimport { useState } from \"react\";\r\n\r\nconst KeyRevealer = ({ value }: { value: string }) => {\r\n  const [shown, setShown] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        flexFlow: {\r\n          sm: \"row\",\r\n          xs: \"column\",\r\n        },\r\n      }}\r\n    >\r\n      <InputBoxWrapper\r\n        id=\"inspect-dec-key\"\r\n        name=\"inspect-dec-key\"\r\n        placeholder=\"\"\r\n        label=\"\"\r\n        type={shown ? \"text\" : \"password\"}\r\n        onChange={() => {}}\r\n        value={value}\r\n        overlayIcon={<CopyIcon />}\r\n        extraInputProps={{\r\n          readOnly: true,\r\n        }}\r\n        overlayAction={() => navigator.clipboard.writeText(value)}\r\n      />\r\n\r\n      <Button\r\n        sx={{\r\n          marginLeft: \"10px\",\r\n        }}\r\n        variant=\"contained\"\r\n        onClick={() => setShown(!shown)}\r\n      >\r\n        Show/Hide\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default KeyRevealer;\r\n"],"names":["iconComponent","entity","container","alignItems","item","xs","title","help","sx","fontSize","display","border","flexFlow","md","color","theme","colors","link","textDecoration","href","target","rel","withStyles","createStyles","deleteDialogStyles","content","padding","paddingBottom","customDialogSize","width","maxWidth","snackBarCommon","onClose","modalOpen","children","classes","wideLimit","noContentPadding","titleIcon","dispatch","useAppDispatch","useState","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","type","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","className","root","titleText","closeContainer","id","closeButton","onClick","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","ExampleBlock","volumeVal","pathVal","marginBottom","sm","switchLabel","fontWeight","modalStyleUtils","distributedSetup","selDistSet","volumeName","setVolumeName","inspectPath","setInspectPath","isEncrypt","setIsEncrypt","decryptionKey","setDecryptionKey","insFileName","setInsFileName","isFormValid","setIsFormValid","volumeError","setVolumeError","pathError","setPathError","isVolValid","isPathValid","trim","slice","isValid","makeRequest","url","fetch","method","performInspect","file","encodeURLString","volume","urlOfInspectApi","then","res","ok","json","resErr","setErrorSnackMessage","errorMessage","detailedError","code","blob","filename","headers","get","split","decryptKey","getCookieValue","performDownload","catch","err","resetForm","Fragment","label","justifyContent","lg","flexWrap","gap","height","flex","noValidate","autoComplete","onSubmit","e","preventDefault","name","extraInputProps","onChange","value","error","required","placeholder","marginTop","inputLabel","indicatorLabels","checked","marginRight","variant","disabled","minWidth","backgroundColor","borderRadius","fill","fontStyle","background","textAlign","flexShrink","marginLeft","paddingLeft","fontFamily","paddingRight","paddingTop","deleteCookie","component","shown","setShown","overlayIcon","readOnly","overlayAction","navigator","clipboard","writeText"],"sourceRoot":""}
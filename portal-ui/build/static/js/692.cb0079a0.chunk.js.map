{"version":3,"file":"static/js/692.cb0079a0.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolResources.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolConfiguration.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/PoolPodPlacement.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/AddPoolCreateButton.tsx","screens/Console/Tenants/TenantDetails/Pools/AddPool/AddPool.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  formFieldStyles,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { niceBytes } from \"../../../../../../common/utils\";\r\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\r\nimport api from \"../../../../../../common/api\";\r\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\r\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport { IQuotaElement, IQuotas } from \"../../../ListTenants/utils\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\nimport InputUnitMenu from \"../../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\r\nimport {\r\n  isPoolPageValid,\r\n  setPoolField,\r\n  setPoolStorageClasses,\r\n} from \"./addPoolSlice\";\r\n\r\ninterface IPoolResourcesProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    bottomContainer: {\r\n      display: \"flex\",\r\n      flexGrow: 1,\r\n      alignItems: \"center\",\r\n      margin: \"auto\",\r\n      justifyContent: \"center\",\r\n      \"& div\": {\r\n        width: 150,\r\n        \"@media (max-width: 900px)\": {\r\n          flexFlow: \"column\",\r\n        },\r\n      },\r\n    },\r\n    factorElements: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      marginLeft: 30,\r\n    },\r\n    sizeNumber: {\r\n      fontSize: 35,\r\n      fontWeight: 700,\r\n      textAlign: \"center\",\r\n    },\r\n    sizeDescription: {\r\n      fontSize: 14,\r\n      color: \"#777\",\r\n      textAlign: \"center\",\r\n    },\r\n    ...formFieldStyles,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst PoolResources = ({ classes }: IPoolResourcesProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\r\n  const storageClasses = useSelector(\r\n    (state: AppState) => state.addPool.storageClasses\r\n  );\r\n  const numberOfNodes = useSelector((state: AppState) =>\r\n    state.addPool.setup.numberOfNodes.toString()\r\n  );\r\n  const storageClass = useSelector(\r\n    (state: AppState) => state.addPool.setup.storageClass\r\n  );\r\n  const volumeSize = useSelector((state: AppState) =>\r\n    state.addPool.setup.volumeSize.toString()\r\n  );\r\n  const volumesPerServer = useSelector((state: AppState) =>\r\n    state.addPool.setup.volumesPerServer.toString()\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  const instanceCapacity: number =\r\n    parseInt(volumeSize) * 1073741824 * parseInt(volumesPerServer);\r\n  const totalCapacity: number = instanceCapacity * parseInt(numberOfNodes);\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customAccountValidation: IValidation[] = [\r\n      {\r\n        fieldKey: \"number_of_nodes\",\r\n        required: true,\r\n        value: numberOfNodes.toString(),\r\n        customValidation:\r\n          parseInt(numberOfNodes) < 1 || isNaN(parseInt(numberOfNodes)),\r\n        customValidationMessage: \"Number of servers must be at least 1\",\r\n      },\r\n      {\r\n        fieldKey: \"pool_size\",\r\n        required: true,\r\n        value: volumeSize.toString(),\r\n        customValidation:\r\n          parseInt(volumeSize) < 1 || isNaN(parseInt(volumeSize)),\r\n        customValidationMessage: \"Pool Size cannot be 0\",\r\n      },\r\n      {\r\n        fieldKey: \"volumes_per_server\",\r\n        required: true,\r\n        value: volumesPerServer.toString(),\r\n        customValidation:\r\n          parseInt(volumesPerServer) < 1 || isNaN(parseInt(volumesPerServer)),\r\n        customValidationMessage: \"1 volume or more are required\",\r\n      },\r\n    ];\r\n\r\n    const commonVal = commonFormValidation(customAccountValidation);\r\n\r\n    dispatch(\r\n      isPoolPageValid({\r\n        page: \"setup\",\r\n        status: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [dispatch, numberOfNodes, volumeSize, volumesPerServer, storageClass]);\r\n\r\n  useEffect(() => {\r\n    if (storageClasses.length === 0 && tenant) {\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/namespaces/${tenant.namespace}/resourcequotas/${tenant.namespace}-storagequota`\r\n        )\r\n        .then((res: IQuotas) => {\r\n          const elements: IQuotaElement[] = get(res, \"elements\", []);\r\n\r\n          const newStorage = elements.map((storageClass: any) => {\r\n            const name = get(storageClass, \"name\", \"\").split(\r\n              \".storageclass.storage.k8s.io/requests.storage\"\r\n            )[0];\r\n\r\n            return { label: name, value: name };\r\n          });\r\n\r\n          dispatch(\r\n            setPoolField({\r\n              page: \"setup\",\r\n              field: \"storageClass\",\r\n              value: newStorage[0].value,\r\n            })\r\n          );\r\n\r\n          dispatch(setPoolStorageClasses(newStorage));\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }, [tenant, storageClasses, dispatch]);\r\n\r\n  const setFieldInfo = (fieldName: string, value: any) => {\r\n    dispatch(\r\n      setPoolField({\r\n        page: \"setup\",\r\n        field: fieldName,\r\n        value: value,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <div className={classes.headerElement}>\r\n        <h3 className={classes.h3Section}>New Pool Configuration</h3>\r\n        <span className={classes.descriptionText}>\r\n          Configure a new Pool to expand MinIO storage\r\n        </span>\r\n      </div>\r\n\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"number_of_nodes\"\r\n          name=\"number_of_nodes\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            const intValue = parseInt(e.target.value);\r\n\r\n            if (e.target.validity.valid && !isNaN(intValue)) {\r\n              setFieldInfo(\"numberOfNodes\", intValue);\r\n            } else if (isNaN(intValue)) {\r\n              setFieldInfo(\"numberOfNodes\", 0);\r\n            }\r\n          }}\r\n          label=\"Number of Servers\"\r\n          value={numberOfNodes}\r\n          error={validationErrors[\"number_of_nodes\"] || \"\"}\r\n          pattern={\"[0-9]*\"}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"pool_size\"\r\n          name=\"pool_size\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            const intValue = parseInt(e.target.value);\r\n\r\n            if (e.target.validity.valid && !isNaN(intValue)) {\r\n              setFieldInfo(\"volumeSize\", intValue);\r\n            } else if (isNaN(intValue)) {\r\n              setFieldInfo(\"volumeSize\", 0);\r\n            }\r\n          }}\r\n          label=\"Volume Size\"\r\n          value={volumeSize}\r\n          error={validationErrors[\"pool_size\"] || \"\"}\r\n          pattern={\"[0-9]*\"}\r\n          overlayObject={\r\n            <InputUnitMenu\r\n              id={\"quota_unit\"}\r\n              onUnitChange={() => {}}\r\n              unitSelected={\"Gi\"}\r\n              unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\r\n              disabled={true}\r\n            />\r\n          }\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"volumes_per_sever\"\r\n          name=\"volumes_per_sever\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            const intValue = parseInt(e.target.value);\r\n\r\n            if (e.target.validity.valid && !isNaN(intValue)) {\r\n              setFieldInfo(\"volumesPerServer\", intValue);\r\n            } else if (isNaN(intValue)) {\r\n              setFieldInfo(\"volumesPerServer\", 0);\r\n            }\r\n          }}\r\n          label=\"Volumes per Server\"\r\n          value={volumesPerServer}\r\n          error={validationErrors[\"volumes_per_server\"] || \"\"}\r\n          pattern={\"[0-9]*\"}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <SelectWrapper\r\n          id=\"storage_class\"\r\n          name=\"storage_class\"\r\n          onChange={(e: SelectChangeEvent<string>) => {\r\n            setFieldInfo(\"storageClass\", e.target.value as string);\r\n          }}\r\n          label=\"Storage Class\"\r\n          value={storageClass}\r\n          options={storageClasses}\r\n          disabled={storageClasses.length < 1}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.bottomContainer}>\r\n        <div className={classes.factorElements}>\r\n          <div>\r\n            <div className={classes.sizeNumber}>\r\n              {niceBytes(instanceCapacity.toString(10))}\r\n            </div>\r\n            <div className={classes.sizeDescription}>Instance Capacity</div>\r\n          </div>\r\n          <div>\r\n            <div className={classes.sizeNumber}>\r\n              {niceBytes(totalCapacity.toString(10))}\r\n            </div>\r\n            <div className={classes.sizeDescription}>Total Capacity</div>\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(PoolResources);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid, Paper } from \"@mui/material\";\r\nimport {\r\n  createTenantCommon,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { clearValidationError } from \"../../../utils\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { isPoolPageValid, setPoolField } from \"./addPoolSlice\";\r\n\r\ninterface IConfigureProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    configSectionItem: {\r\n      marginRight: 15,\r\n\r\n      \"& .multiContainer\": {\r\n        border: \"1px solid red\",\r\n      },\r\n    },\r\n    tenantCustomizationFields: {\r\n      marginLeft: 30, // 2nd Level(15+15)\r\n      width: \"88%\",\r\n      margin: \"auto\",\r\n    },\r\n    containerItem: {\r\n      marginRight: 15,\r\n    },\r\n    fieldGroup: {\r\n      ...createTenantCommon.fieldGroup,\r\n      paddingTop: 15,\r\n      marginBottom: 25,\r\n    },\r\n    responsiveSectionItem: {\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n        alignItems: \"flex-start\",\r\n\r\n        \"& div > div\": {\r\n          marginBottom: 5,\r\n          marginRight: 0,\r\n        },\r\n      },\r\n    },\r\n\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst PoolConfiguration = ({ classes }: IConfigureProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const securityContextEnabled = useSelector(\r\n    (state: AppState) => state.addPool.configuration.securityContextEnabled\r\n  );\r\n  const securityContext = useSelector(\r\n    (state: AppState) => state.addPool.configuration.securityContext\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        setPoolField({\r\n          page: \"configuration\",\r\n          field: field,\r\n          value: value,\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customAccountValidation: IValidation[] = [];\r\n    if (securityContextEnabled) {\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        {\r\n          fieldKey: \"pool_securityContext_runAsUser\",\r\n          required: true,\r\n          value: securityContext.runAsUser,\r\n          customValidation:\r\n            securityContext.runAsUser === \"\" ||\r\n            parseInt(securityContext.runAsUser) < 0,\r\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"pool_securityContext_runAsGroup\",\r\n          required: true,\r\n          value: securityContext.runAsGroup,\r\n          customValidation:\r\n            securityContext.runAsGroup === \"\" ||\r\n            parseInt(securityContext.runAsGroup) < 0,\r\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"pool_securityContext_fsGroup\",\r\n          required: true,\r\n          value: securityContext.fsGroup,\r\n          customValidation:\r\n            securityContext.fsGroup === \"\" ||\r\n            parseInt(securityContext.fsGroup) < 0,\r\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\r\n        },\r\n      ];\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customAccountValidation);\r\n\r\n    dispatch(\r\n      isPoolPageValid({\r\n        page: \"configure\",\r\n        status: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [dispatch, securityContextEnabled, securityContext]);\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <div className={classes.headerElement}>\r\n        <h3 className={classes.h3Section}>Configure</h3>\r\n        <span className={classes.descriptionText}>\r\n          Aditional Configurations for the new Pool\r\n        </span>\r\n      </div>\r\n      <Grid item xs={12} className={classes.configSectionItem}>\r\n        <FormSwitchWrapper\r\n          value=\"tenantConfig\"\r\n          id=\"pool_configuration\"\r\n          name=\"pool_configuration\"\r\n          checked={securityContextEnabled}\r\n          onChange={(e) => {\r\n            const targetD = e.target;\r\n            const checked = targetD.checked;\r\n\r\n            updateField(\"securityContextEnabled\", checked);\r\n          }}\r\n          label={\"Security Context\"}\r\n        />\r\n      </Grid>\r\n      {securityContextEnabled && (\r\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\r\n          <fieldset className={classes.fieldGroup}>\r\n            <legend className={classes.descriptionText}>\r\n              Pool's Security Context\r\n            </legend>\r\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\r\n              <div\r\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\r\n              >\r\n                <div className={classes.containerItem}>\r\n                  <InputBoxWrapper\r\n                    type=\"number\"\r\n                    id=\"pool_securityContext_runAsUser\"\r\n                    name=\"pool_securityContext_runAsUser\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      updateField(\"securityContext\", {\r\n                        ...securityContext,\r\n                        runAsUser: e.target.value,\r\n                      });\r\n                      cleanValidation(\"pool_securityContext_runAsUser\");\r\n                    }}\r\n                    label=\"Run As User\"\r\n                    value={securityContext.runAsUser}\r\n                    required\r\n                    error={\r\n                      validationErrors[\"pool_securityContext_runAsUser\"] || \"\"\r\n                    }\r\n                    min=\"0\"\r\n                  />\r\n                </div>\r\n                <div className={classes.containerItem}>\r\n                  <InputBoxWrapper\r\n                    type=\"number\"\r\n                    id=\"pool_securityContext_runAsGroup\"\r\n                    name=\"pool_securityContext_runAsGroup\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      updateField(\"securityContext\", {\r\n                        ...securityContext,\r\n                        runAsGroup: e.target.value,\r\n                      });\r\n                      cleanValidation(\"pool_securityContext_runAsGroup\");\r\n                    }}\r\n                    label=\"Run As Group\"\r\n                    value={securityContext.runAsGroup}\r\n                    required\r\n                    error={\r\n                      validationErrors[\"pool_securityContext_runAsGroup\"] || \"\"\r\n                    }\r\n                    min=\"0\"\r\n                  />\r\n                </div>\r\n                <div className={classes.containerItem}>\r\n                  <InputBoxWrapper\r\n                    type=\"number\"\r\n                    id=\"pool_securityContext_fsGroup\"\r\n                    name=\"pool_securityContext_fsGroup\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      updateField(\"securityContext\", {\r\n                        ...securityContext,\r\n                        fsGroup: e.target.value,\r\n                      });\r\n                      cleanValidation(\"pool_securityContext_fsGroup\");\r\n                    }}\r\n                    label=\"FsGroup\"\r\n                    value={securityContext.fsGroup}\r\n                    required\r\n                    error={\r\n                      validationErrors[\"pool_securityContext_fsGroup\"] || \"\"\r\n                    }\r\n                    min=\"0\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <br />\r\n            <Grid item xs={12} className={classes.configSectionItem}>\r\n              <div className={classes.multiContainer}>\r\n                <FormSwitchWrapper\r\n                  value=\"securityContextRunAsNonRoot\"\r\n                  id=\"pool_securityContext_runAsNonRoot\"\r\n                  name=\"pool_securityContext_runAsNonRoot\"\r\n                  checked={securityContext.runAsNonRoot}\r\n                  onChange={(e) => {\r\n                    const targetD = e.target;\r\n                    const checked = targetD.checked;\r\n                    updateField(\"securityContext\", {\r\n                      ...securityContext,\r\n                      runAsNonRoot: checked,\r\n                    });\r\n                  }}\r\n                  label={\"Do not run as Root\"}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </fieldset>\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(PoolConfiguration);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\n\r\nimport {\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\r\nimport { LabelKeyPair } from \"../../../types\";\r\nimport RadioGroupSelector from \"../../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\r\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport api from \"../../../../../../common/api\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport AddIcon from \"../../../../../../icons/AddIcon\";\r\nimport RemoveIcon from \"../../../../../../icons/RemoveIcon\";\r\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport TolerationSelector from \"../../../../Common/TolerationSelector/TolerationSelector\";\r\nimport { setModalErrorSnackMessage } from \"../../../../../../systemSlice\";\r\nimport {\r\n  addNewPoolToleration,\r\n  isPoolPageValid,\r\n  removePoolToleration,\r\n  setPoolField,\r\n  setPoolKeyValuePairs,\r\n  setPoolTolerationInfo,\r\n} from \"./addPoolSlice\";\r\n\r\ninterface IAffinityProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    overlayAction: {\r\n      marginLeft: 10,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& svg\": {\r\n        maxWidth: 15,\r\n        maxHeight: 15,\r\n      },\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n    affinityConfigField: {\r\n      display: \"flex\",\r\n    },\r\n    affinityFieldLabel: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      flex: 1,\r\n    },\r\n    radioField: {\r\n      display: \"flex\",\r\n      alignItems: \"flex-start\",\r\n      marginTop: 10,\r\n      \"& div:first-child\": {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"baseline\",\r\n        textAlign: \"left !important\",\r\n      },\r\n    },\r\n    affinityLabelKey: {\r\n      \"& div:first-child\": {\r\n        marginBottom: 0,\r\n      },\r\n    },\r\n    affinityLabelValue: {\r\n      marginLeft: 10,\r\n      \"& div:first-child\": {\r\n        marginBottom: 0,\r\n      },\r\n    },\r\n    rowActions: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    affinityRow: {\r\n      marginBottom: 10,\r\n      display: \"flex\",\r\n    },\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\ninterface OptionPair {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst Affinity = ({ classes }: IAffinityProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const podAffinity = useSelector(\r\n    (state: AppState) => state.addPool.affinity.podAffinity\r\n  );\r\n  const nodeSelectorLabels = useSelector(\r\n    (state: AppState) => state.addPool.affinity.nodeSelectorLabels\r\n  );\r\n  const withPodAntiAffinity = useSelector(\r\n    (state: AppState) => state.addPool.affinity.withPodAntiAffinity\r\n  );\r\n  const keyValuePairs = useSelector(\r\n    (state: AppState) => state.addPool.nodeSelectorPairs\r\n  );\r\n  const tolerations = useSelector(\r\n    (state: AppState) => state.addPool.tolerations\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\r\n    {}\r\n  );\r\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        setPoolField({\r\n          page: \"affinity\",\r\n          field: field,\r\n          value: value,\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\r\n        .then((res: { [key: string]: string[] }) => {\r\n          setLoading(false);\r\n          setKeyValueMap(res);\r\n          let keys: OptionPair[] = [];\r\n          for (let k in res) {\r\n            keys.push({\r\n              label: k,\r\n              value: k,\r\n            });\r\n          }\r\n          setKeyOptions(keys);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setLoading(false);\r\n          dispatch(setModalErrorSnackMessage(err));\r\n          setKeyValueMap({});\r\n        });\r\n    }\r\n  }, [dispatch, loading]);\r\n\r\n  useEffect(() => {\r\n    if (keyValuePairs) {\r\n      const vlr = keyValuePairs\r\n        .filter((kvp) => kvp.key !== \"\")\r\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\r\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\r\n      const vl = vlr.join(\"&\");\r\n      updateField(\"nodeSelectorLabels\", vl);\r\n    }\r\n  }, [keyValuePairs, updateField]);\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customAccountValidation: IValidation[] = [];\r\n\r\n    if (podAffinity === \"nodeSelector\") {\r\n      let valid = true;\r\n\r\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\r\n\r\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\r\n        valid = false;\r\n      }\r\n\r\n      splittedLabels.forEach((item: string, index: number) => {\r\n        const splitItem = item.split(\"=\");\r\n\r\n        if (splitItem.length !== 2) {\r\n          valid = false;\r\n        }\r\n\r\n        if (index + 1 !== splittedLabels.length) {\r\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\r\n            valid = false;\r\n          }\r\n        }\r\n      });\r\n\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        {\r\n          fieldKey: \"labels\",\r\n          required: true,\r\n          value: nodeSelectorLabels,\r\n          customValidation: !valid,\r\n          customValidationMessage:\r\n            \"You need to add at least one label key-pair\",\r\n        },\r\n      ];\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customAccountValidation);\r\n\r\n    dispatch(\r\n      isPoolPageValid({\r\n        page: \"affinity\",\r\n        status: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\r\n\r\n  const updateToleration = (index: number, field: string, value: any) => {\r\n    const alterToleration = { ...tolerations[index], [field]: value };\r\n\r\n    dispatch(\r\n      setPoolTolerationInfo({\r\n        index: index,\r\n        tolerationValue: alterToleration,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <div className={classes.headerElement}>\r\n        <h3 className={classes.h3Section}>Pod Placement</h3>\r\n        <span className={classes.descriptionText}>\r\n          Configure how pods will be assigned to nodes\r\n        </span>\r\n      </div>\r\n      <Grid item xs={12} className={classes.affinityConfigField}>\r\n        <Grid item className={classes.affinityFieldLabel}>\r\n          <div className={classes.label}>Type</div>\r\n          <div\r\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\r\n          >\r\n            MinIO supports multiple configurations for Pod Affinity\r\n          </div>\r\n          <Grid item className={classes.radioField}>\r\n            <RadioGroupSelector\r\n              currentSelection={podAffinity}\r\n              id=\"affinity-options\"\r\n              name=\"affinity-options\"\r\n              label={\" \"}\r\n              onChange={(e) => {\r\n                updateField(\"podAffinity\", e.target.value);\r\n              }}\r\n              selectorOptions={[\r\n                { label: \"None\", value: \"none\" },\r\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\r\n                { label: \"Node Selector\", value: \"nodeSelector\" },\r\n              ]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {podAffinity === \"nodeSelector\" && (\r\n        <Fragment>\r\n          <br />\r\n          <Grid item xs={12}>\r\n            <FormSwitchWrapper\r\n              value=\"with_pod_anti_affinity\"\r\n              id=\"with_pod_anti_affinity\"\r\n              name=\"with_pod_anti_affinity\"\r\n              checked={withPodAntiAffinity}\r\n              onChange={(e) => {\r\n                const targetD = e.target;\r\n                const checked = targetD.checked;\r\n\r\n                updateField(\"withPodAntiAffinity\", checked);\r\n              }}\r\n              label={\"With Pod Anti-Affinity\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3>Labels</h3>\r\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\r\n            <Grid container>\r\n              {keyValuePairs &&\r\n                keyValuePairs.map((kvp, i) => {\r\n                  return (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      className={classes.affinityRow}\r\n                      key={`affinity-keyVal-${i.toString()}`}\r\n                    >\r\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\r\n                        {keyOptions.length > 0 && (\r\n                          <SelectWrapper\r\n                            onChange={(e: SelectChangeEvent<string>) => {\r\n                              const newKey = e.target.value as string;\r\n                              const newLKP: LabelKeyPair = {\r\n                                key: newKey,\r\n                                value: keyValueMap[newKey][0],\r\n                              };\r\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\r\n                              arrCp[i] = newLKP;\r\n                              dispatch(setPoolKeyValuePairs(arrCp));\r\n                            }}\r\n                            id=\"select-access-policy\"\r\n                            name=\"select-access-policy\"\r\n                            label={\"\"}\r\n                            value={kvp.key}\r\n                            options={keyOptions}\r\n                          />\r\n                        )}\r\n                        {keyOptions.length === 0 && (\r\n                          <InputBoxWrapper\r\n                            id={`nodeselector-key-${i.toString()}`}\r\n                            label={\"\"}\r\n                            name={`nodeselector-${i.toString()}`}\r\n                            value={kvp.key}\r\n                            onChange={(e) => {\r\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\r\n                              arrCp[i] = {\r\n                                key: arrCp[i].key,\r\n                                value: e.target.value as string,\r\n                              };\r\n                              dispatch(setPoolKeyValuePairs(arrCp));\r\n                            }}\r\n                            index={i}\r\n                            placeholder={\"Key\"}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\r\n                        {keyOptions.length > 0 && (\r\n                          <SelectWrapper\r\n                            onChange={(e: SelectChangeEvent<string>) => {\r\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\r\n                              arrCp[i] = {\r\n                                key: arrCp[i].key,\r\n                                value: e.target.value as string,\r\n                              };\r\n                              dispatch(setPoolKeyValuePairs(arrCp));\r\n                            }}\r\n                            id=\"select-access-policy\"\r\n                            name=\"select-access-policy\"\r\n                            label={\"\"}\r\n                            value={kvp.value}\r\n                            options={\r\n                              keyValueMap[kvp.key]\r\n                                ? keyValueMap[kvp.key].map((v) => {\r\n                                    return { label: v, value: v };\r\n                                  })\r\n                                : []\r\n                            }\r\n                          />\r\n                        )}\r\n                        {keyOptions.length === 0 && (\r\n                          <InputBoxWrapper\r\n                            id={`nodeselector-value-${i.toString()}`}\r\n                            label={\"\"}\r\n                            name={`nodeselector-${i.toString()}`}\r\n                            value={kvp.value}\r\n                            onChange={(e) => {\r\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\r\n                              arrCp[i] = {\r\n                                key: arrCp[i].key,\r\n                                value: e.target.value as string,\r\n                              };\r\n                              dispatch(setPoolKeyValuePairs(arrCp));\r\n                            }}\r\n                            index={i}\r\n                            placeholder={\"value\"}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item xs={2} className={classes.rowActions}>\r\n                        <div className={classes.overlayAction}>\r\n                          <IconButton\r\n                            size={\"small\"}\r\n                            onClick={() => {\r\n                              const arrCp = [...keyValuePairs];\r\n                              if (keyOptions.length > 0) {\r\n                                arrCp.push({\r\n                                  key: keyOptions[0].value,\r\n                                  value: keyValueMap[keyOptions[0].value][0],\r\n                                });\r\n                              } else {\r\n                                arrCp.push({ key: \"\", value: \"\" });\r\n                              }\r\n\r\n                              dispatch(setPoolKeyValuePairs(arrCp));\r\n                            }}\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                        {keyValuePairs.length > 1 && (\r\n                          <div className={classes.overlayAction}>\r\n                            <IconButton\r\n                              size={\"small\"}\r\n                              onClick={() => {\r\n                                const arrCp = keyValuePairs.filter(\r\n                                  (item, index) => index !== i\r\n                                );\r\n                                dispatch(setPoolKeyValuePairs(arrCp));\r\n                              }}\r\n                            >\r\n                              <RemoveIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      )}\r\n      <Grid item xs={12} className={classes.affinityConfigField}>\r\n        <Grid item className={classes.affinityFieldLabel}>\r\n          <h3>Tolerations</h3>\r\n          <span className={classes.error}>\r\n            {validationErrors[\"tolerations\"]}\r\n          </span>\r\n          <Grid container>\r\n            {tolerations &&\r\n              tolerations.map((tol, i) => {\r\n                return (\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    className={classes.affinityRow}\r\n                    key={`affinity-keyVal-${i.toString()}`}\r\n                  >\r\n                    <TolerationSelector\r\n                      effect={tol.effect}\r\n                      onEffectChange={(value) => {\r\n                        updateToleration(i, \"effect\", value);\r\n                      }}\r\n                      tolerationKey={tol.key}\r\n                      onTolerationKeyChange={(value) => {\r\n                        updateToleration(i, \"key\", value);\r\n                      }}\r\n                      operator={tol.operator}\r\n                      onOperatorChange={(value) => {\r\n                        updateToleration(i, \"operator\", value);\r\n                      }}\r\n                      value={tol.value}\r\n                      onValueChange={(value) => {\r\n                        updateToleration(i, \"value\", value);\r\n                      }}\r\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\r\n                      onSecondsChange={(value) => {\r\n                        updateToleration(i, \"tolerationSeconds\", {\r\n                          seconds: value,\r\n                        });\r\n                      }}\r\n                      index={i}\r\n                    />\r\n                    <div className={classes.overlayAction}>\r\n                      <IconButton\r\n                        size={\"small\"}\r\n                        onClick={() => {\r\n                          dispatch(addNewPoolToleration());\r\n                        }}\r\n                        disabled={i !== tolerations.length - 1}\r\n                      >\r\n                        <AddIcon />\r\n                      </IconButton>\r\n                    </div>\r\n\r\n                    <div className={classes.overlayAction}>\r\n                      <IconButton\r\n                        size={\"small\"}\r\n                        onClick={() => dispatch(removePoolToleration(i))}\r\n                        disabled={tolerations.length <= 1}\r\n                      >\r\n                        <RemoveIcon />\r\n                      </IconButton>\r\n                    </div>\r\n                  </Grid>\r\n                );\r\n              })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Affinity);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { addPoolAsync } from \"./addPoolThunks\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\n\r\nconst AddPoolCreateButton = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const selectedStorageClass = useSelector(\r\n    (state: AppState) => state.addPool.setup.storageClass\r\n  );\r\n  const validPages = useSelector((state: AppState) => state.addPool.validPages);\r\n\r\n  const sending = useSelector((state: AppState) => state.addPool.sending);\r\n  const requiredPages = [\"setup\", \"affinity\", \"configure\"];\r\n  const enabled =\r\n    !sending &&\r\n    selectedStorageClass !== \"\" &&\r\n    requiredPages.every((v) => validPages.includes(v));\r\n  return (\r\n    <Button\r\n      id={\"wizard-button-Create\"}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      size=\"small\"\r\n      onClick={() => {\r\n        dispatch(addPoolAsync());\r\n      }}\r\n      disabled={!enabled}\r\n      key={`button-AddTenant-Create`}\r\n    >\r\n      Create\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AddPoolCreateButton;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  formFieldStyles,\r\n  modalStyleUtils,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { niceBytes } from \"../../../../../../common/utils\";\r\nimport { LinearProgress } from \"@mui/material\";\r\nimport PageHeader from \"../../../../Common/PageHeader/PageHeader\";\r\nimport PageLayout from \"../../../../Common/Layout/PageLayout\";\r\nimport GenericWizard from \"../../../../Common/GenericWizard/GenericWizard\";\r\nimport { IWizardElement } from \"../../../../Common/GenericWizard/types\";\r\nimport PoolResources from \"./PoolResources\";\r\nimport ScreenTitle from \"../../../../Common/ScreenTitle/ScreenTitle\";\r\nimport TenantsIcon from \"../../../../../../icons/TenantsIcon\";\r\n\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PoolConfiguration from \"./PoolConfiguration\";\r\nimport PoolPodPlacement from \"./PoolPodPlacement\";\r\nimport BackLink from \"../../../../../../common/BackLink\";\r\nimport { resetPoolForm } from \"./addPoolSlice\";\r\nimport AddPoolCreateButton from \"./AddPoolCreateButton\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    bottomContainer: {\r\n      display: \"flex\",\r\n      flexGrow: 1,\r\n      alignItems: \"center\",\r\n      margin: \"auto\",\r\n      justifyContent: \"center\",\r\n      \"& div\": {\r\n        width: 150,\r\n        \"@media (max-width: 900px)\": {\r\n          flexFlow: \"column\",\r\n        },\r\n      },\r\n    },\r\n    pageBox: {\r\n      border: \"1px solid #EAEAEA\",\r\n      borderTop: 0,\r\n    },\r\n    addPoolTitle: {\r\n      border: \"1px solid #EAEAEA\",\r\n      borderBottom: 0,\r\n    },\r\n    ...formFieldStyles,\r\n    ...modalStyleUtils,\r\n  })\r\n);\r\n\r\nconst AddPool = () => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n\r\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\r\n  const sending = useSelector((state: AppState) => state.addPool.sending);\r\n  const navigateTo = useSelector((state: AppState) => state.addPool.navigateTo);\r\n\r\n  const poolsURL = `/namespaces/${tenant?.namespace || \"\"}/tenants/${\r\n    tenant?.name || \"\"\r\n  }/pools`;\r\n\r\n  useEffect(() => {\r\n    if (navigateTo !== \"\") {\r\n      const goTo = `${navigateTo}`;\r\n      dispatch(resetPoolForm());\r\n      navigate(goTo);\r\n    }\r\n  }, [navigateTo, navigate, dispatch]);\r\n\r\n  const cancelButton = {\r\n    label: \"Cancel\",\r\n    type: \"other\",\r\n    enabled: true,\r\n    action: () => {\r\n      dispatch(resetPoolForm());\r\n      navigate(poolsURL);\r\n    },\r\n  };\r\n\r\n  const createButton = {\r\n    componentRender: <AddPoolCreateButton key={\"add-pool-crate\"} />,\r\n  };\r\n\r\n  const wizardSteps: IWizardElement[] = [\r\n    {\r\n      label: \"Setup\",\r\n      componentRender: <PoolResources />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Configuration\",\r\n      advancedOnly: true,\r\n      componentRender: <PoolConfiguration />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Pod Placement\",\r\n      advancedOnly: true,\r\n      componentRender: <PoolPodPlacement />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12}>\r\n        <PageHeader\r\n          label={\r\n            <Fragment>\r\n              <BackLink to={poolsURL} label={`Tenant Pools`} />\r\n            </Fragment>\r\n          }\r\n        />\r\n        <PageLayout>\r\n          <Grid item xs={12} className={classes.addPoolTitle}>\r\n            <ScreenTitle\r\n              icon={<TenantsIcon />}\r\n              title={`Add New Pool to ${tenant?.name || \"\"}`}\r\n              subTitle={\r\n                <Fragment>\r\n                  Namespace: {tenant?.namespace || \"\"} / Current Capacity:{\" \"}\r\n                  {niceBytes((tenant?.total_size || 0).toString(10))}\r\n                </Fragment>\r\n              }\r\n            />\r\n          </Grid>\r\n          {sending && (\r\n            <Grid item xs={12}>\r\n              <LinearProgress />\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12} className={classes.pageBox}>\r\n            <GenericWizard wizardSteps={wizardSteps} />\r\n          </Grid>\r\n        </PageLayout>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddPool;\r\n"],"names":["withStyles","theme","createStyles","bottomContainer","display","flexGrow","alignItems","margin","justifyContent","width","flexFlow","factorElements","marginLeft","sizeNumber","fontSize","fontWeight","textAlign","sizeDescription","color","formFieldStyles","wizardCommon","classes","dispatch","useAppDispatch","tenant","useSelector","state","tenants","tenantInfo","storageClasses","addPool","numberOfNodes","setup","toString","storageClass","volumeSize","volumesPerServer","useState","validationErrors","setValidationErrors","instanceCapacity","parseInt","totalCapacity","useEffect","customAccountValidation","fieldKey","required","value","customValidation","isNaN","customValidationMessage","commonVal","commonFormValidation","isPoolPageValid","page","status","Object","keys","length","api","namespace","then","res","newStorage","get","map","name","split","label","setPoolField","field","setPoolStorageClasses","catch","err","console","error","setFieldInfo","fieldName","Paper","className","paperWrapper","headerElement","h3Section","descriptionText","Grid","item","xs","formFieldRow","InputBoxWrapper","id","onChange","e","intValue","target","validity","valid","pattern","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","disabled","SelectWrapper","options","niceBytes","configSectionItem","marginRight","border","tenantCustomizationFields","containerItem","fieldGroup","createTenantCommon","paddingTop","marginBottom","responsiveSectionItem","modalBasic","securityContextEnabled","configuration","securityContext","updateField","useCallback","runAsUser","runAsGroup","fsGroup","cleanValidation","clearValidationError","FormSwitchWrapper","checked","multiContainer","type","min","runAsNonRoot","overlayAction","maxWidth","maxHeight","background","affinityConfigField","affinityFieldLabel","flex","radioField","marginTop","affinityLabelKey","affinityLabelValue","rowActions","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","k","push","setModalErrorSnackMessage","vl","filter","kvp","key","kvs","i","a","indexOf","join","splittedLabels","forEach","index","splitItem","updateToleration","alterToleration","setPoolTolerationInfo","tolerationValue","affinityHelpText","RadioGroupSelector","currentSelection","selectorOptions","Fragment","container","newKey","newLKP","arrCp","setPoolKeyValuePairs","placeholder","v","IconButton","size","onClick","AddIcon","RemoveIcon","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewPoolToleration","removePoolToleration","selectedStorageClass","validPages","enabled","sending","every","includes","Button","variant","addPoolAsync","useStyles","makeStyles","pageBox","borderTop","addPoolTitle","borderBottom","modalStyleUtils","navigate","useNavigate","navigateTo","poolsURL","goTo","resetPoolForm","cancelButton","action","createButton","componentRender","wizardSteps","buttons","advancedOnly","PoolPodPlacement","PageHeader","BackLink","to","PageLayout","ScreenTitle","icon","TenantsIcon","title","subTitle","total_size","LinearProgress","GenericWizard"],"sourceRoot":""}
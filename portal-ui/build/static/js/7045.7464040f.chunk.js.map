{"version":3,"file":"static/js/7045.7464040f.chunk.js","mappings":"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","sources":["screens/Console/Common/ContentBox.tsx","screens/Console/NotificationEndpoints/NotificationTypeSelector.tsx","screens/Console/NotificationEndpoints/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst ContentBox: React.FC<Props> = ({ children }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        border: \"1px solid #eaeaea\",\r\n        padding: {\r\n          lg: \"40px\",\r\n          xs: \"15px\",\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContentBox;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { servicesList } from \"./utils\";\r\nimport {\r\n  settingsCommon,\r\n  typesSelection,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\r\nimport BackLink from \"../../../common/BackLink\";\r\nimport PageLayout from \"../Common/Layout/PageLayout\";\r\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\r\nimport ContentBox from \"../Common/ContentBox\";\r\n\r\ninterface INotificationTypeSelector {\r\n  classes: any;\r\n}\r\n\r\nconst withLogos = servicesList.filter((elService) => elService.logo !== \"\");\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...settingsCommon,\r\n    ...typesSelection,\r\n  });\r\n\r\nconst NotificationTypeSelector = ({ classes }: INotificationTypeSelector) => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Fragment>\r\n      <PageHeader\r\n        label={\r\n          <Fragment>\r\n            <BackLink\r\n              to={IAM_PAGES.NOTIFICATIONS_ENDPOINTS}\r\n              label=\"Notification Targets\"\r\n            />\r\n          </Fragment>\r\n        }\r\n        actions={<React.Fragment />}\r\n      />\r\n      <PageLayout>\r\n        <ContentBox>\r\n          <div style={{ fontSize: 16, fontWeight: 600, paddingBottom: 15 }}>\r\n            Select Target Type\r\n          </div>\r\n          <div className={classes.iconContainer}>\r\n            {withLogos.map((item) => {\r\n              return (\r\n                <button\r\n                  key={`icon-${item.targetTitle}`}\r\n                  className={classes.lambdaNotif}\r\n                  onClick={() => {\r\n                    navigate(\r\n                      `${IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD}/${item.actionTrigger}`\r\n                    );\r\n                  }}\r\n                >\r\n                  <div className={classes.lambdaNotifIcon}>\r\n                    <img\r\n                      src={item.logo}\r\n                      className={classes.logoButton}\r\n                      alt={item.targetTitle}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={classes.lambdaNotifTitle}>\r\n                    <b>{item.targetTitle}</b>\r\n                  </div>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </ContentBox>\r\n      </PageLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(NotificationTypeSelector);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { NotificationEndpointItem } from \"./types\";\r\n\r\nimport { IElementValue } from \"../Configurations/types\";\r\n\r\nexport const notifyPostgres = \"notify_postgres\";\r\nexport const notifyMysql = \"notify_mysql\";\r\nexport const notifyKafka = \"notify_kafka\";\r\nexport const notifyAmqp = \"notify_amqp\";\r\nexport const notifyMqtt = \"notify_mqtt\";\r\nexport const notifyRedis = \"notify_redis\";\r\nexport const notifyNats = \"notify_nats\";\r\nexport const notifyElasticsearch = \"notify_elasticsearch\";\r\nexport const notifyWebhooks = \"notify_webhook\";\r\nexport const notifyNsq = \"notify_nsq\";\r\n\r\nexport const notificationTransform = (\r\n  notificationElements: NotificationEndpointItem[]\r\n) => {\r\n  return notificationElements.map((element) => {\r\n    return {\r\n      service_name: `${element.service}:${element.account_id}`,\r\n      name: element.service,\r\n      account_id: element.account_id,\r\n      status: element.status,\r\n    };\r\n  });\r\n};\r\n\r\nexport const servicesList = [\r\n  {\r\n    actionTrigger: notifyPostgres,\r\n    targetTitle: \"PostgreSQL\",\r\n    logo: \"/postgres-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyKafka,\r\n    targetTitle: \"Kafka\",\r\n    logo: \"/kafka-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyAmqp,\r\n    targetTitle: \"AMQP\",\r\n    logo: \"/amqp-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyMqtt,\r\n    targetTitle: \"MQTT\",\r\n    logo: \"/mqtt-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyRedis,\r\n    targetTitle: \"Redis\",\r\n    logo: \"/redis-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyNats,\r\n    targetTitle: \"NATS\",\r\n    logo: \"/nats-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyMysql,\r\n    targetTitle: \"Mysql\",\r\n    logo: \"/mysql-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyElasticsearch,\r\n    targetTitle: \"Elastic Search\",\r\n    logo: \"/elasticsearch-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyWebhooks,\r\n    targetTitle: \"Webhook\",\r\n    logo: \"/webhooks-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyNsq,\r\n    targetTitle: \"NSQ\",\r\n    logo: \"/nsq-logo.svg\",\r\n  },\r\n];\r\n\r\nconst commonFields = [\r\n  {\r\n    name: \"queue-dir\",\r\n    label: \"Queue Directory\",\r\n    required: true,\r\n\r\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\r\n    type: \"string\",\r\n    placeholder: \"Enter Queue Directory\",\r\n  },\r\n  {\r\n    name: \"queue-limit\",\r\n    label: \"Queue Limit\",\r\n    required: false,\r\n\r\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\r\n    type: \"number\",\r\n    placeholder: \"Enter Queue Limit\",\r\n  },\r\n  {\r\n    name: \"comment\",\r\n    label: \"Comment\",\r\n    required: false,\r\n    type: \"comment\",\r\n    placeholder: \"Enter custom notes if any\",\r\n  },\r\n];\r\n\r\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\r\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\r\n\r\n  return nonEmptyFields;\r\n};\r\n\r\nexport const notificationEndpointsFields: any = {\r\n  [notifyKafka]: [\r\n    {\r\n      name: \"brokers\",\r\n      label: \"Brokers\",\r\n      required: true,\r\n\r\n      tooltip: \"Comma separated list of Kafka broker addresses\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Brokers\",\r\n    },\r\n    {\r\n      name: \"topic\",\r\n      label: \"Topic\",\r\n      tooltip: \"Kafka topic used for bucket notifications\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Topic\",\r\n    },\r\n    {\r\n      name: \"sasl_username\",\r\n      label: \"SASL Username\",\r\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\r\n      type: \"string\",\r\n      placeholder: \"Enter SASL Username\",\r\n    },\r\n    {\r\n      name: \"sasl_password\",\r\n      label: \"SASL Password\",\r\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\r\n      type: \"string\",\r\n      placeholder: \"Enter SASL Password\",\r\n    },\r\n    {\r\n      name: \"sasl_mechanism\",\r\n      label: \"SASL Mechanism\",\r\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\r\n      type: \"string\",\r\n    },\r\n    {\r\n      name: \"tls_client_auth\",\r\n      label: \"TLS Client Auth\",\r\n      tooltip:\r\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\r\n      type: \"string\",\r\n      placeholder: \"Enter TLS Client Auth\",\r\n    },\r\n    {\r\n      name: \"sasl\",\r\n      label: \"SASL\",\r\n      tooltip: \"Set to 'on' to enable SASL authentication\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"tls\",\r\n      label: \"TLS\",\r\n      tooltip: \"Set to 'on' to enable TLS\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"tls_skip_verify\",\r\n      label: \"TLS skip verify\",\r\n      tooltip:\r\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"client_tls_cert\",\r\n      label: \"client TLS cert\",\r\n      tooltip: \"Path to client certificate for mTLS auth\",\r\n      type: \"path\",\r\n      placeholder: \"Enter TLS Client Cert\",\r\n    },\r\n    {\r\n      name: \"client_tls_key\",\r\n      label: \"client TLS key\",\r\n      tooltip: \"Path to client key for mTLS auth\",\r\n      type: \"path\",\r\n      placeholder: \"Enter TLS Client Key\",\r\n    },\r\n    {\r\n      name: \"version\",\r\n      label: \"Version\",\r\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Kafka Version\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyAmqp]: [\r\n    {\r\n      name: \"url\",\r\n      required: true,\r\n      label: \"URL\",\r\n      tooltip:\r\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\r\n      type: \"url\",\r\n    },\r\n    {\r\n      name: \"exchange\",\r\n      label: \"Exchange\",\r\n      tooltip: \"Name of the AMQP exchange\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Exchange\",\r\n    },\r\n    {\r\n      name: \"exchange_type\",\r\n      label: \"Exchange Type\",\r\n      tooltip: \"AMQP exchange type\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Exchange Type\",\r\n    },\r\n    {\r\n      name: \"routing_key\",\r\n      label: \"Routing Key\",\r\n      tooltip: \"Routing key for publishing\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Routing Key\",\r\n    },\r\n    {\r\n      name: \"mandatory\",\r\n      label: \"Mandatory\",\r\n      tooltip:\r\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"durable\",\r\n      label: \"Durable\",\r\n      tooltip:\r\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"no_wait\",\r\n      label: \"No Wait\",\r\n      tooltip:\r\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"internal\",\r\n      label: \"Internal\",\r\n      tooltip:\r\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"auto_deleted\",\r\n      label: \"Auto Deleted\",\r\n      tooltip:\r\n        \"Auto delete queue when set to 'on', when there are no consumers\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"delivery_mode\",\r\n      label: \"Delivery Mode\",\r\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\r\n      type: \"number\",\r\n      placeholder: \"Enter Delivery Mode\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyRedis]: [\r\n    {\r\n      name: \"address\",\r\n      required: true,\r\n      label: \"Address\",\r\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\r\n      type: \"address\",\r\n      placeholder: \"Enter Address\",\r\n    },\r\n    {\r\n      name: \"key\",\r\n      required: true,\r\n      label: \"Key\",\r\n      tooltip: \"Redis key to store/update events, key is auto-created\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Key\",\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"Password\",\r\n      tooltip: \"Redis server password\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Password\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyMqtt]: [\r\n    {\r\n      name: \"broker\",\r\n      required: true,\r\n      label: \"Broker\",\r\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\r\n      type: \"uri\",\r\n      placeholder: \"Enter Brokers\",\r\n    },\r\n    {\r\n      name: \"topic\",\r\n      required: true,\r\n      label: \"Topic\",\r\n      tooltip: \"name of the MQTT topic to publish\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Topic\",\r\n    },\r\n    {\r\n      name: \"username\",\r\n      label: \"Username\",\r\n      tooltip: \"MQTT username\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Username\",\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"Password\",\r\n      tooltip: \"MQTT password\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Password\",\r\n    },\r\n    {\r\n      name: \"qos\",\r\n      label: \"QOS\",\r\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\r\n      type: \"number\",\r\n      placeholder: \"Enter QOS\",\r\n    },\r\n    {\r\n      name: \"keep_alive_interval\",\r\n      label: \"Keep Alive Interval\",\r\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\r\n      type: \"duration\",\r\n      placeholder: \"Enter Keep Alive Internal\",\r\n    },\r\n    {\r\n      name: \"reconnect_interval\",\r\n      label: \"Reconnect Interval\",\r\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\r\n      type: \"duration\",\r\n      placeholder: \"Enter Reconnect Interval\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyNats]: [\r\n    {\r\n      name: \"address\",\r\n      required: true,\r\n      label: \"Address\",\r\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\r\n      type: \"address\",\r\n      placeholder: \"Enter Address\",\r\n    },\r\n    {\r\n      name: \"subject\",\r\n      required: true,\r\n      label: \"Subject\",\r\n      tooltip: \"NATS subscription subject\",\r\n      type: \"string\",\r\n      placeholder: \"Enter NATS Subject\",\r\n    },\r\n    {\r\n      name: \"username\",\r\n      label: \"Username\",\r\n      tooltip: \"NATS username\",\r\n      type: \"string\",\r\n      placeholder: \"Enter NATS Username\",\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"Password\",\r\n      tooltip: \"NATS password\",\r\n      type: \"string\",\r\n      placeholder: \"Enter NATS password\",\r\n    },\r\n    {\r\n      name: \"token\",\r\n      label: \"Token\",\r\n      tooltip: \"NATS token\",\r\n      type: \"string\",\r\n      placeholder: \"Enter NATS token\",\r\n    },\r\n    {\r\n      name: \"tls\",\r\n      label: \"TLS\",\r\n      tooltip: \"Set to 'on' to enable TLS\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"tls_skip_verify\",\r\n      label: \"TLS Skip Verify\",\r\n      tooltip:\r\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"ping_interval\",\r\n      label: \"Ping Interval\",\r\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\r\n      type: \"duration\",\r\n      placeholder: \"Enter Ping Interval\",\r\n    },\r\n    {\r\n      name: \"streaming\",\r\n      label: \"Streaming\",\r\n      tooltip: \"Set to 'on', to use streaming NATS server\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"streaming_async\",\r\n      label: \"Streaming async\",\r\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"streaming_max_pub_acks_in_flight\",\r\n      label: \"Streaming max publish ACKS in flight\",\r\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\r\n      type: \"number\",\r\n      placeholder: \"Enter Streaming in flight value\",\r\n    },\r\n    {\r\n      name: \"streaming_cluster_id\",\r\n      label: \"Streaming Cluster ID\",\r\n      tooltip: \"Unique ID for NATS streaming cluster\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Streaming Cluster ID\",\r\n    },\r\n    {\r\n      name: \"cert_authority\",\r\n      label: \"Cert Authority\",\r\n      tooltip: \"Path to certificate chain of the target NATS server\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Cert Authority\",\r\n    },\r\n    {\r\n      name: \"client_cert\",\r\n      label: \"Client Cert\",\r\n      tooltip: \"Client cert for NATS mTLS auth\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Client Cert\",\r\n    },\r\n    {\r\n      name: \"client_key\",\r\n      label: \"Client Key\",\r\n      tooltip: \"Client cert key for NATS mTLS auth\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Client Key\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyElasticsearch]: [\r\n    {\r\n      name: \"url\",\r\n      required: true,\r\n      label: \"URL\",\r\n      tooltip:\r\n        \"Elasticsearch server's address, with optional authentication info\",\r\n      type: \"url\",\r\n      placeholder: \"Enter URL\",\r\n    },\r\n    {\r\n      name: \"index\",\r\n      required: true,\r\n      label: \"Index\",\r\n      tooltip:\r\n        \"Elasticsearch index to store/update events, index is auto-created\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Index\",\r\n    },\r\n    {\r\n      name: \"format\",\r\n      required: true,\r\n      label: \"Format\",\r\n      tooltip:\r\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\r\n      type: \"enum\",\r\n      placeholder: \"Enter Format\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyWebhooks]: [\r\n    {\r\n      name: \"endpoint\",\r\n      required: true,\r\n      label: \"Endpoint\",\r\n      tooltip:\r\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\r\n      type: \"url\",\r\n      placeholder: \"Enter Endpoint\",\r\n    },\r\n    {\r\n      name: \"auth_token\",\r\n      label: \"Auth Token\",\r\n      tooltip: \"opaque string or JWT authorization token\",\r\n      type: \"string\",\r\n      placeholder: \"Enter auth_token\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyNsq]: [\r\n    {\r\n      name: \"nsqd_address\",\r\n      required: true,\r\n      label: \"NSQD Address\",\r\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\r\n      type: \"address\",\r\n      placeholder: \"Enter nsqd_address\",\r\n    },\r\n    {\r\n      name: \"topic\",\r\n      required: true,\r\n      label: \"Topic\",\r\n      tooltip: \"NSQ topic\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Topic\",\r\n    },\r\n    {\r\n      name: \"tls\",\r\n      label: \"TLS\",\r\n      tooltip: \"set to 'on' to enable TLS\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"tls_skip_verify\",\r\n      label: \"TLS Skip Verify\",\r\n      tooltip:\r\n        'trust server TLS without verification, defaults to \"on\" (verify)',\r\n      type: \"on|off\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n};\r\n\r\nconst serviceToConfigMap: Record<string, string> = {\r\n  webhook: \"notify_webhook\",\r\n  amqp: \"notify_amqp\",\r\n  kafka: \"notify_kafka\",\r\n  mqtt: \"notify_mqtt\",\r\n  nats: \"notify_nats\",\r\n  nsq: \"notify_nsq\",\r\n  mysql: \"notify_mysql\",\r\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from restapi/admin_notification_endpoints.go\r\n  elasticsearch: \"notify_elasticsearch\",\r\n  redis: \"notify_redis\",\r\n};\r\n\r\nexport const getNotificationConfigKey = (serviceName: string) => {\r\n  return serviceToConfigMap[serviceName];\r\n};\r\n"],"names":["children","sx","border","padding","lg","xs","withLogos","servicesList","elService","logo","withStyles","theme","createStyles","settingsCommon","typesSelection","classes","navigate","useNavigate","Fragment","label","to","IAM_PAGES","actions","style","fontSize","fontWeight","paddingBottom","className","iconContainer","map","item","lambdaNotif","onClick","actionTrigger","lambdaNotifIcon","src","logoButton","alt","targetTitle","lambdaNotifTitle","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","element","service_name","service","account_id","name","status","commonFields","required","tooltip","type","placeholder","removeEmptyFields","formFields","filter","field","value","notificationEndpointsFields","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","getNotificationConfigKey","serviceName"],"sourceRoot":""}
{"version":3,"file":"static/js/4061.75f561a7.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/Groups/DeleteGroup.tsx","screens/Console/Groups/AddGroupMember.tsx","screens/Console/Groups/GroupDetailsHeader.tsx","screens/Console/Groups/GroupsDetails.tsx","screens/Console/Groups/UsersSelectors.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/Console/Policies/SetPolicy.tsx","utils/sortFunctions.ts"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { predefinedList } from \"../common/styleLibrary\";\r\n\r\ninterface IPredefinedList {\r\n  classes: any;\r\n  label?: string;\r\n  content: any;\r\n  multiLine?: boolean;\r\n  actionButton?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...predefinedList,\r\n  });\r\n\r\nconst PredefinedList = ({\r\n  classes,\r\n  label = \"\",\r\n  content,\r\n  multiLine = false,\r\n  actionButton,\r\n}: IPredefinedList) => {\r\n  return (\r\n    <Fragment>\r\n      <Grid className={classes.prefinedContainer}>\r\n        {label !== \"\" && (\r\n          <Grid item xs={12} className={classes.predefinedTitle}>\r\n            {label}\r\n          </Grid>\r\n        )}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.predefinedList} ${\r\n            actionButton ? classes.includesActionButton : \"\"\r\n          }`}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            className={\r\n              multiLine ? classes.innerContentMultiline : classes.innerContent\r\n            }\r\n          >\r\n            {content}\r\n          </Grid>\r\n          {actionButton && (\r\n            <div className={classes.overlayShareOption}>{actionButton}</div>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(PredefinedList);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { IconButtonProps } from \"@mui/material\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n      margin: 0,\r\n      fontSize: \".9rem\",\r\n    },\r\n  });\r\n\r\ninterface IPanelTitle extends IconButtonProps {\r\n  classes: any;\r\n  children: any;\r\n}\r\n\r\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\r\n  return <h1 className={classes.root}>{children}</h1>;\r\n};\r\n\r\nexport default withStyles(styles)(PanelTitle);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport SearchIcon from \"../../../icons/SearchIcon\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    searchField: {\r\n      ...searchField.searchField,\r\n    },\r\n    adornment: {},\r\n  });\r\n\r\ntype SearchBoxProps = {\r\n  placeholder?: string;\r\n  value: string;\r\n  classes: any;\r\n  onChange: (value: string) => void;\r\n  adornmentPosition?: \"start\" | \"end\";\r\n  overrideClass?: any;\r\n};\r\n\r\nconst SearchBox = ({\r\n  placeholder = \"\",\r\n  classes,\r\n  onChange,\r\n  adornmentPosition = \"end\",\r\n  overrideClass,\r\n  value,\r\n}: SearchBoxProps) => {\r\n  const inputProps = {\r\n    disableUnderline: true,\r\n    [`${adornmentPosition}Adornment`]: (\r\n      <InputAdornment\r\n        position={adornmentPosition}\r\n        className={classes.adornment}\r\n      >\r\n        <SearchIcon />\r\n      </InputAdornment>\r\n    ),\r\n  };\r\n  return (\r\n    <TextField\r\n      placeholder={placeholder}\r\n      className={overrideClass ? overrideClass : classes.searchField}\r\n      id=\"search-resource\"\r\n      label=\"\"\r\n      InputProps={inputProps}\r\n      onChange={(e) => {\r\n        onChange(e.target.value);\r\n      }}\r\n      variant=\"standard\"\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SearchBox);\r\n","import React from \"react\";\r\nimport { Box, Tab, TabProps } from \"@mui/material\";\r\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Theme, useTheme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\n\r\nexport type TabItemProps = {\r\n  tabConfig: TabProps | any;\r\n  content?: JSX.Element | JSX.Element[];\r\n};\r\n\r\ntype VerticalTabsProps = {\r\n  classes: any;\r\n  children: TabItemProps[];\r\n  selectedTab?: string;\r\n  routes?: any;\r\n  isRouteTabs?: boolean;\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    tabsContainer: {\r\n      display: \"flex\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    tabsHeaderContainer: {\r\n      width: \"300px\",\r\n      background: \"#F8F8F8\",\r\n      borderRight: \"1px solid #EAEAEA\",\r\n      \"& .MuiTabs-root\": {\r\n        \"& .MuiTabs-indicator\": {\r\n          display: \"none\",\r\n        },\r\n        \"& .MuiTab-root\": {\r\n          display: \"flex\",\r\n          flexFlow: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\",\r\n          borderBottom: \"1px solid #EAEAEA\",\r\n          \"& .MuiSvgIcon-root\": {\r\n            marginRight: 8,\r\n            marginBottom: 0,\r\n          },\r\n          \"&.Mui-selected\": {\r\n            background: \"#E5E5E5\",\r\n            fontWeight: 600,\r\n          },\r\n        },\r\n\r\n        \"&. MuiTabs-scroller\": {\r\n          display: \"none\",\r\n        },\r\n      },\r\n    },\r\n    tabContentContainer: {\r\n      width: \"100%\",\r\n      \"& .MuiTabPanel-root\": {\r\n        height: \"100%\",\r\n      },\r\n    },\r\n    tabPanel: {\r\n      height: \"100%\",\r\n    },\r\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\r\n    \"@media (max-width: 900px)\": {\r\n      tabsContainer: {\r\n        flexFlow: \"column\",\r\n        flexDirection: \"column\",\r\n      },\r\n      tabsHeaderContainer: {\r\n        width: \"100%\",\r\n        borderBottom: \" 1px solid #EAEAEA\",\r\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\r\n          borderBottom: \" 0px\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\nconst tabStripStyle = {\r\n  minHeight: 60,\r\n};\r\n\r\nconst VerticalTabs = ({\r\n  children,\r\n  classes,\r\n  selectedTab = \"language\",\r\n  routes,\r\n  isRouteTabs,\r\n}: VerticalTabsProps) => {\r\n  const [value, setValue] = React.useState(selectedTab);\r\n\r\n  const theme = useTheme();\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const headerList: TabProps[] = [];\r\n  const contentList: React.ReactNode[] = [];\r\n\r\n  if (!children) return null;\r\n\r\n  children.forEach((child) => {\r\n    headerList.push(child.tabConfig);\r\n    contentList.push(child.content);\r\n  });\r\n  return (\r\n    <TabContext value={`${value}`}>\r\n      <Box className={classes.tabsContainer}>\r\n        <Box className={classes.tabsHeaderContainer}>\r\n          <TabList\r\n            onChange={handleChange}\r\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\r\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\r\n            scrollButtons=\"auto\"\r\n            className={classes.tabList}\r\n          >\r\n            {headerList.map((item, index) => {\r\n              if (item) {\r\n                return (\r\n                  <Tab\r\n                    className={classes.tabHeader}\r\n                    key={`v-tab-${index}`}\r\n                    value={`${index}`}\r\n                    style={tabStripStyle}\r\n                    {...item}\r\n                    disableRipple\r\n                    disableTouchRipple\r\n                    focusRipple={true}\r\n                  />\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </TabList>\r\n        </Box>\r\n\r\n        <Box className={classes.tabContentContainer}>\r\n          {!isRouteTabs\r\n            ? contentList.map((item, index) => {\r\n                return (\r\n                  <TabPanel\r\n                    classes={{ ...classes.tabPanel }}\r\n                    key={`v-tab-p-${index}`}\r\n                    value={`${index}`}\r\n                  >\r\n                    {item ? item : null}\r\n                  </TabPanel>\r\n                );\r\n              })\r\n            : null}\r\n          {isRouteTabs ? (\r\n            <div className={classes.tabPanel}>{routes}</div>\r\n          ) : null}\r\n        </Box>\r\n      </Box>\r\n    </TabContext>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(VerticalTabs);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\n\r\nimport { DialogContentText } from \"@mui/material\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\r\nimport useApi from \"../Common/Hooks/useApi\";\r\nimport { ConfirmDeleteIcon } from \"../../../icons\";\r\nimport { encodeURLString } from \"../../../common/utils\";\r\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../store\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface IDeleteGroup {\r\n  selectedGroups: string[];\r\n  deleteOpen: boolean;\r\n  closeDeleteModalAndRefresh: any;\r\n}\r\n\r\nconst DeleteGroup = ({\r\n  selectedGroups,\r\n  deleteOpen,\r\n  closeDeleteModalAndRefresh,\r\n}: IDeleteGroup) => {\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\r\n  const onDelError = (err: ErrorResponseHandler) => {\r\n    dispatch(setErrorSnackMessage(err));\r\n    closeDeleteModalAndRefresh(false);\r\n  };\r\n  const onClose = () => closeDeleteModalAndRefresh(false);\r\n\r\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\r\n\r\n  if (!selectedGroups) {\r\n    return null;\r\n  }\r\n  const onDeleteGroups = () => {\r\n    for (let group of selectedGroups) {\r\n      invokeDeleteApi(\"DELETE\", `/api/v1/group/${encodeURLString(group)}`);\r\n    }\r\n  };\r\n\r\n  const renderGroups = selectedGroups.map((group) => (\r\n    <div key={group}>\r\n      <b>{group}</b>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <ConfirmDialog\r\n      title={`${t(\"delete_group\")}${selectedGroups.length > 1 ? \"s\" : \"\"}`}\r\n      confirmText={t(\"delete\")}\r\n      isOpen={deleteOpen}\r\n      titleIcon={<ConfirmDeleteIcon />}\r\n      isLoading={deleteLoading}\r\n      onConfirm={onDeleteGroups}\r\n      onClose={onClose}\r\n      confirmationContent={\r\n        <DialogContentText>\r\n          {t(\"are_you_sure_delete\")} {selectedGroups.length}{\" \"}\r\n          {t(\"group\")}{selectedGroups.length > 1 ? \"s?\" : \"?\"}\r\n          {renderGroups}\r\n        </DialogContentText>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeleteGroup;\r\n","import React, { useState } from \"react\";\r\nimport UsersSelectors from \"./UsersSelectors\";\r\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\r\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Button } from \"@mui/material\";\r\nimport api from \"../../../common/api\";\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\n\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  formFieldStyles,\r\n  modalBasic,\r\n  modalStyleUtils,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { AddMembersToGroupIcon } from \"../../../icons\";\r\nimport { encodeURLString } from \"../../../common/utils\";\r\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../store\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype UserPickerModalProps = {\r\n  classes?: any;\r\n  title?: string;\r\n  preSelectedUsers?: string[];\r\n  selectedGroup?: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSaveClick: () => void;\r\n  groupStatus?: string;\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    userSelector: {\r\n      \"& .MuiPaper-root\": {\r\n        padding: 0,\r\n        marginBottom: 15,\r\n      },\r\n    },\r\n    ...modalStyleUtils,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n  });\r\n\r\nconst AddGroupMember = ({\r\n  classes,\r\n  title = \"\",\r\n  groupStatus = \"enabled\",\r\n  preSelectedUsers = [],\r\n  selectedGroup = \"\",\r\n  open,\r\n  onClose,\r\n}: UserPickerModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n  const [selectedUsers, setSelectedUsers] = useState(preSelectedUsers);\r\n\r\n  function addMembersToGroup() {\r\n    return api\r\n      .invoke(\"PUT\", `/api/v1/group/${encodeURLString(selectedGroup)}`, {\r\n        group: selectedGroup,\r\n        members: selectedUsers,\r\n        status: groupStatus,\r\n      })\r\n      .then((res) => {\r\n        onClose();\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        onClose();\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  }\r\n\r\n  return (\r\n    <ModalWrapper\r\n      modalOpen={open}\r\n      onClose={onClose}\r\n      title={title}\r\n      titleIcon={<AddMembersToGroupIcon />}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <div className={classes.formFieldRow}>\r\n            <PredefinedList label={t(\"selected_group\")} content={selectedGroup} />\r\n          </div>\r\n          <div className={classes.userSelector}>\r\n            <UsersSelectors\r\n              selectedUsers={selectedUsers}\r\n              setSelectedUsers={setSelectedUsers}\r\n              editMode={!selectedGroup}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.modalButtonBar}>\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setSelectedUsers(preSelectedUsers);\r\n          }}\r\n        >\r\n          {t(\"reset\")}\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            addMembersToGroup();\r\n          }}\r\n        >\r\n          {t(\"save\")}\r\n        </Button>\r\n      </Grid>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AddGroupMember);\r\n","import React, { Fragment } from \"react\";\r\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\r\nimport BackLink from \"../../../common/BackLink\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ntype DetailsHeaderProps = {\r\n  classes: any;\r\n};\r\n\r\nconst GroupDetailsHeader = ({ classes }: DetailsHeaderProps) => {\r\n  return (\r\n    <PageHeader\r\n      label={\r\n        <Fragment>\r\n          <BackLink to={IAM_PAGES.GROUPS} label={\"Groups\"} />\r\n        </Fragment>\r\n      }\r\n      actions={<React.Fragment />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(GroupDetailsHeader);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  actionsTray,\r\n  containerForHeader,\r\n  searchField,\r\n  spacingUtils,\r\n  tableStyles,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid } from \"@mui/material\";\r\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\r\nimport {\r\n  AddIcon,\r\n  GroupsIcon,\r\n  IAMPoliciesIcon,\r\n  TrashIcon,\r\n} from \"../../../icons\";\r\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\r\nimport api from \"../../../common/api\";\r\nimport SetPolicy from \"../Policies/SetPolicy\";\r\nimport AddGroupMember from \"./AddGroupMember\";\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\nimport DeleteGroup from \"./DeleteGroup\";\r\nimport VerticalTabs from \"../Common/VerticalTabs/VerticalTabs\";\r\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport PageLayout from \"../Common/Layout/PageLayout\";\r\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\r\nimport SearchBox from \"../Common/SearchBox\";\r\nimport {\r\n  CONSOLE_UI_RESOURCE,\r\n  IAM_PAGES,\r\n  IAM_SCOPES,\r\n} from \"../../../common/SecureComponent/permissions\";\r\nimport {\r\n  hasPermission,\r\n  SecureComponent,\r\n} from \"../../../common/SecureComponent\";\r\nimport GroupDetailsHeader from \"./GroupDetailsHeader\";\r\nimport RBIconButton from \"../Buckets/BucketDetails/SummaryItems/RBIconButton\";\r\nimport { decodeURLString, encodeURLString } from \"../../../common/utils\";\r\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../store\";\r\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    pageContainer: {\r\n      border: \"1px solid #EAEAEA\",\r\n      width: \"100%\",\r\n    },\r\n    statusLabel: {\r\n      fontSize: \".8rem\",\r\n      marginRight: \".7rem\",\r\n    },\r\n    statusValue: {\r\n      fontWeight: \"bold\",\r\n      fontSize: \".9rem\",\r\n      marginRight: \".7rem\",\r\n    },\r\n    searchField: {\r\n      ...searchField.searchField,\r\n      maxWidth: 280,\r\n    },\r\n    ...tableStyles,\r\n    ...spacingUtils,\r\n    actionsTray: {\r\n      ...actionsTray.actionsTray,\r\n\r\n      alignItems: \"center\",\r\n      \"& h1\": {\r\n        flex: 1,\r\n      },\r\n      \"& button\": {\r\n        marginLeft: \".8rem\",\r\n      },\r\n      \"@media (max-width: 900px)\": {\r\n        justifyContent: \"flex-end\",\r\n        \"& h1\": {\r\n          display: \"none\",\r\n        },\r\n        \"& button\": {\r\n          whiteSpace: \"nowrap\",\r\n          textOverflow: \"ellipsis\",\r\n        },\r\n      },\r\n    },\r\n    ...containerForHeader(theme.spacing(4)),\r\n  });\r\n\r\ninterface IGroupDetailsProps {\r\n  classes: any;\r\n}\r\n\r\ntype GroupInfo = {\r\n  members?: any[];\r\n  name?: string;\r\n  policy?: string;\r\n  status?: string;\r\n};\r\n\r\nexport const formatPolicy = (policy: string = \"\"): string[] => {\r\n  if (policy.length <= 0) return [];\r\n  return policy.split(\",\");\r\n};\r\n\r\nconst GroupsDetails = ({ classes }: IGroupDetailsProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const [groupDetails, setGroupDetails] = useState<GroupInfo>({});\r\n\r\n  /*Modals*/\r\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\r\n  const [usersOpen, setUsersOpen] = useState<boolean>(false);\r\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\r\n  const [memberFilter, setMemberFilter] = useState<string>(\"\");\r\n\r\n  const groupName = decodeURLString(params.groupName || \"\");\r\n\r\n  const { members = [], policy = \"\", status: groupEnabled } = groupDetails;\r\n\r\n  const filteredMembers = members.filter((elementItem) =>\r\n    elementItem.includes(memberFilter)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (groupName) {\r\n      fetchGroupInfo();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [groupName]);\r\n\r\n  const groupPolicies = formatPolicy(policy);\r\n  const isGroupEnabled = groupEnabled === \"enabled\";\r\n  const memberActionText = members.length > 0 ? \"Edit Members\" : \"Add Members\";\r\n\r\n  const getGroupDetails = hasPermission(CONSOLE_UI_RESOURCE, [\r\n    IAM_SCOPES.ADMIN_GET_GROUP,\r\n  ]);\r\n\r\n  function fetchGroupInfo() {\r\n    if (getGroupDetails) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/group/${encodeURLString(groupName)}`)\r\n        .then((res: any) => {\r\n          setGroupDetails(res);\r\n        })\r\n        .catch((err) => {\r\n          dispatch(setModalErrorSnackMessage(err));\r\n          setGroupDetails({});\r\n        });\r\n    }\r\n  }\r\n\r\n  function toggleGroupStatus(nextStatus: boolean) {\r\n    return api\r\n      .invoke(\"PUT\", `/api/v1/group/${encodeURLString(groupName)}`, {\r\n        group: groupName,\r\n        members: members,\r\n        status: nextStatus ? \"enabled\" : \"disabled\",\r\n      })\r\n      .then((res) => {\r\n        fetchGroupInfo();\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  }\r\n\r\n  const groupsTabContent = (\r\n    <React.Fragment>\r\n      <div className={classes.actionsTray}>\r\n        <PanelTitle>Members</PanelTitle>\r\n        <SearchBox\r\n          placeholder={\"Search members\"}\r\n          onChange={(searchText) => {\r\n            setMemberFilter(searchText);\r\n          }}\r\n          overrideClass={classes.searchField}\r\n          value={memberFilter}\r\n        />\r\n        <SecureComponent\r\n          resource={CONSOLE_UI_RESOURCE}\r\n          scopes={[IAM_SCOPES.ADMIN_ADD_USER_TO_GROUP]}\r\n          errorProps={{ disabled: true }}\r\n        >\r\n          <RBIconButton\r\n            tooltip={memberActionText}\r\n            text={memberActionText}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            icon={<AddIcon />}\r\n            onClick={() => {\r\n              setUsersOpen(true);\r\n            }}\r\n          />\r\n        </SecureComponent>\r\n      </div>\r\n\r\n      <div className={classes.tableBlock}>\r\n        <SecureComponent\r\n          resource={CONSOLE_UI_RESOURCE}\r\n          scopes={[IAM_SCOPES.ADMIN_LIST_USERS]}\r\n          errorProps={{ disabled: true }}\r\n        >\r\n          <TableWrapper\r\n            itemActions={[\r\n              {\r\n                type: \"view\",\r\n                onClick: (userName) => {\r\n                  navigate(`${IAM_PAGES.USERS}/${encodeURLString(userName)}`);\r\n                },\r\n              },\r\n            ]}\r\n            columns={[{ label: \"Access Key\", elementKey: \"\" }]}\r\n            selectedItems={[]}\r\n            isLoading={false}\r\n            records={filteredMembers}\r\n            entityName=\"Users\"\r\n            idField=\"\"\r\n          />\r\n        </SecureComponent>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const policiesTabContent = (\r\n    <React.Fragment>\r\n      <div className={classes.actionsTray}>\r\n        <PanelTitle>Policies</PanelTitle>\r\n\r\n        <RBIconButton\r\n          tooltip={`Set Policies`}\r\n          text={`Set Policies`}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          icon={<IAMPoliciesIcon />}\r\n          onClick={() => {\r\n            setPolicyOpen(true);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.tableBlock}>\r\n        <TableWrapper\r\n          itemActions={[\r\n            {\r\n              type: \"view\",\r\n              onClick: (policy) => {\r\n                navigate(`${IAM_PAGES.POLICIES}/${encodeURLString(policy)}`);\r\n              },\r\n            },\r\n          ]}\r\n          columns={[{ label: \"Policy\", elementKey: \"\" }]}\r\n          isLoading={false}\r\n          records={groupPolicies}\r\n          entityName=\"Policies\"\r\n          idField=\"\"\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <GroupDetailsHeader />\r\n\r\n      <PageLayout className={classes.pageContainer}>\r\n        <Grid item xs={12}>\r\n          <ScreenTitle\r\n            icon={\r\n              <Fragment>\r\n                <GroupsIcon width={40} />\r\n              </Fragment>\r\n            }\r\n            title={groupName}\r\n            subTitle={null}\r\n            actions={\r\n              <Fragment>\r\n                <span className={classes.statusLabel}>Group Status:</span>\r\n                <span id=\"group-status\" className={classes.statusValue}>\r\n                  {isGroupEnabled ? \"Enabled\" : \"Disabled\"}\r\n                </span>\r\n                <SecureComponent\r\n                  resource={CONSOLE_UI_RESOURCE}\r\n                  scopes={[\r\n                    IAM_SCOPES.ADMIN_ENABLE_GROUP,\r\n                    IAM_SCOPES.ADMIN_DISABLE_GROUP,\r\n                  ]}\r\n                  errorProps={{ disabled: true }}\r\n                  matchAll\r\n                >\r\n                  <FormSwitchWrapper\r\n                    indicatorLabels={[\"Enabled\", \"Disabled\"]}\r\n                    checked={isGroupEnabled}\r\n                    value={\"group_enabled\"}\r\n                    id=\"group-status\"\r\n                    name=\"group-status\"\r\n                    onChange={() => {\r\n                      toggleGroupStatus(!isGroupEnabled);\r\n                    }}\r\n                    switchOnly\r\n                  />\r\n                </SecureComponent>\r\n\r\n                <SecureComponent\r\n                  resource={CONSOLE_UI_RESOURCE}\r\n                  scopes={[IAM_SCOPES.ADMIN_REMOVE_USER_FROM_GROUP]}\r\n                  errorProps={{ disabled: true }}\r\n                >\r\n                  <div className={classes.spacerLeft}>\r\n                    <RBIconButton\r\n                      tooltip={`Delete Group`}\r\n                      text={``}\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                      icon={<TrashIcon />}\r\n                      onClick={() => {\r\n                        setDeleteOpen(true);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </SecureComponent>\r\n              </Fragment>\r\n            }\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <VerticalTabs>\r\n            {{\r\n              tabConfig: { label: \"Members\" },\r\n              content: groupsTabContent,\r\n            }}\r\n            {{\r\n              tabConfig: { label: \"Policies\" },\r\n              content: policiesTabContent,\r\n            }}\r\n          </VerticalTabs>\r\n        </Grid>\r\n      </PageLayout>\r\n      {/*Modals*/}\r\n      {policyOpen ? (\r\n        <SetPolicy\r\n          open={policyOpen}\r\n          selectedGroups={[groupName]}\r\n          selectedUser={null}\r\n          closeModalAndRefresh={() => {\r\n            setPolicyOpen(false);\r\n            fetchGroupInfo();\r\n            dispatch(setSelectedPolicies([]));\r\n          }}\r\n        />\r\n      ) : null}\r\n\r\n      {usersOpen ? (\r\n        <AddGroupMember\r\n          selectedGroup={groupName}\r\n          onSaveClick={() => {}}\r\n          title={memberActionText}\r\n          groupStatus={groupEnabled}\r\n          preSelectedUsers={members}\r\n          open={usersOpen}\r\n          onClose={() => {\r\n            setUsersOpen(false);\r\n            fetchGroupInfo();\r\n          }}\r\n        />\r\n      ) : null}\r\n\r\n      {deleteOpen && (\r\n        <DeleteGroup\r\n          deleteOpen={deleteOpen}\r\n          selectedGroups={[groupName]}\r\n          closeDeleteModalAndRefresh={(isDelSuccess: boolean) => {\r\n            setDeleteOpen(false);\r\n            if (isDelSuccess) {\r\n              navigate(IAM_PAGES.GROUPS);\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n      {/*Modals*/}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(GroupsDetails);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { LinearProgress } from \"@mui/material\";\r\nimport get from \"lodash/get\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { UsersList } from \"../Users/types\";\r\nimport { usersSort } from \"../../../utils/sortFunctions\";\r\nimport {\r\n  actionsTray,\r\n  selectorsCommon,\r\n  tableStyles,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\nimport api from \"../../../common/api\";\r\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\r\nimport SearchBox from \"../Common/SearchBox\";\r\n\r\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../store\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface IGroupsProps {\r\n  classes: any;\r\n  selectedUsers: string[];\r\n  setSelectedUsers: any;\r\n  editMode?: boolean;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      display: \"flex\",\r\n      overflow: \"auto\",\r\n      flexDirection: \"column\",\r\n      // paddingTop: 15,\r\n      boxShadow: \"none\",\r\n      border: 0,\r\n    },\r\n\r\n    tableBlock: {\r\n      ...tableStyles.tableBlock,\r\n    },\r\n    searchBox: {\r\n      flex: 1,\r\n    },\r\n    ...actionsTray,\r\n    actionsTitle: {\r\n      fontSize: 14,\r\n      alignSelf: \"center\",\r\n      minWidth: 160,\r\n      marginRight: 10,\r\n    },\r\n    noFound: {\r\n      textAlign: \"center\",\r\n      padding: theme.spacing(3),\r\n      border: \"1px solid #EAEAEA\",\r\n      fontSize: \".9rem\",\r\n    },\r\n    ...selectorsCommon,\r\n  });\r\n\r\nconst UsersSelectors = ({\r\n  classes,\r\n  selectedUsers,\r\n  setSelectedUsers,\r\n  editMode = false,\r\n}: IGroupsProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n  //Local States\r\n  const [records, setRecords] = useState<any[]>([]);\r\n  const [loading, isLoading] = useState<boolean>(false);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n\r\n  const fetchUsers = useCallback(() => {\r\n    api\r\n      .invoke(\"GET\", `/api/v1/users`)\r\n      .then((res: UsersList) => {\r\n        let users = get(res, \"users\", []);\r\n\r\n        if (!users) {\r\n          users = [];\r\n        }\r\n\r\n        setRecords(users.sort(usersSort));\r\n        isLoading(false);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        dispatch(setModalErrorSnackMessage(err));\r\n        isLoading(false);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  //Effects\r\n  useEffect(() => {\r\n    isLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      fetchUsers();\r\n    }\r\n  }, [loading, fetchUsers]);\r\n\r\n  const selUsers = !selectedUsers ? [] : selectedUsers;\r\n\r\n  //Fetch Actions\r\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const targetD = e.target;\r\n    const value = targetD.value;\r\n    const checked = targetD.checked;\r\n\r\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\r\n\r\n    if (checked) {\r\n      // If the user has checked this field we need to push this to selectedGroupsList\r\n      elements.push(value);\r\n    } else {\r\n      // User has unchecked this field, we need to remove it from the list\r\n      elements = elements.filter((element) => element !== value);\r\n    }\r\n    setSelectedUsers(elements);\r\n\r\n    return elements;\r\n  };\r\n\r\n  const filteredRecords = records.filter((elementItem) =>\r\n    elementItem.accessKey.includes(filter)\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.paper}>\r\n          {loading && <LinearProgress />}\r\n          {records !== null && records.length > 0 ? (\r\n            <React.Fragment>\r\n              <Grid item xs={12} className={classes.actionsTray}>\r\n                <label className={classes.actionsTitle}>\r\n                  {editMode ? t(\"edit_members\") : t(\"assign_members\")}\r\n                </label>\r\n                <div className={classes.searchBox}>\r\n                  <SearchBox\r\n                    placeholder={t('filter_users')}\r\n                    adornmentPosition=\"end\"\r\n                    onChange={setFilter}\r\n                    value={filter}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.tableBlock}>\r\n                <TableWrapper\r\n                  columns={[{ label: t(\"access_key\"), elementKey: \"accessKey\" }]}\r\n                  onSelect={selectionChanged}\r\n                  selectedItems={selUsers}\r\n                  isLoading={loading}\r\n                  records={filteredRecords}\r\n                  entityName=\"Users\"\r\n                  idField=\"accessKey\"\r\n                  customPaperHeight={classes.multiSelectTable}\r\n                />\r\n              </Grid>\r\n            </React.Fragment>\r\n          ) : (\r\n            <div className={classes.noFound}>{t(\"no_users_to_display\")}</div>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(UsersSelectors);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { LinearProgress } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { policySort } from \"../../../utils/sortFunctions\";\r\nimport {\r\n  actionsTray,\r\n  searchField,\r\n  selectorsCommon,\r\n  tableStyles,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\nimport { PolicyList } from \"./types\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\nimport api from \"../../../common/api\";\r\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\r\nimport SearchBox from \"../Common/SearchBox\";\r\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { AppState, useAppDispatch } from \"../../../store\";\r\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface ISelectPolicyProps {\r\n  classes: any;\r\n  selectedPolicy?: string[];\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    noFound: {\r\n      textAlign: \"center\",\r\n      padding: \"10px 0\",\r\n    },\r\n    searchBox: {\r\n      flex: 1,\r\n    },\r\n    fieldLabel: {\r\n      fontWeight: 400,\r\n      width: 160,\r\n      marginRight: 10,\r\n    },\r\n    tableBlock: {\r\n      ...tableStyles.tableBlock,\r\n    },\r\n    filterBox: {\r\n      display: \"flex\",\r\n      marginBottom: 15,\r\n      alignItems: \"center\",\r\n      \"& span\": {\r\n        fontSize: 14,\r\n      },\r\n    },\r\n    ...searchField,\r\n    ...tableStyles,\r\n    ...actionsTray,\r\n    ...selectorsCommon,\r\n  });\r\n\r\nconst PolicySelectors = ({\r\n  classes,\r\n  selectedPolicy = [],\r\n}: ISelectPolicyProps) => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useAppDispatch();\r\n  // Local State\r\n  const [records, setRecords] = useState<any[]>([]);\r\n  const [loading, isLoading] = useState<boolean>(false);\r\n  const [filter, setFilter] = useState<string>(\"\");\r\n\r\n  const currentPolicies = useSelector(\r\n    (state: AppState) => state.createUser.selectedPolicies\r\n  );\r\n\r\n  const fetchPolicies = useCallback(() => {\r\n    isLoading(true);\r\n\r\n    api\r\n      .invoke(\"GET\", `/api/v1/policies?limit=1000`)\r\n      .then((res: PolicyList) => {\r\n        const policies = res.policies === null ? [] : res.policies;\r\n        isLoading(false);\r\n        setRecords(policies.sort(policySort));\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        isLoading(false);\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  }, [dispatch]);\r\n\r\n  //Effects\r\n  useEffect(() => {\r\n    isLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      fetchPolicies();\r\n    }\r\n  }, [loading, fetchPolicies]);\r\n\r\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const targetD = e.target;\r\n    const value = targetD.value;\r\n    const checked = targetD.checked;\r\n\r\n    let elements: string[] = [...currentPolicies]; // We clone the checkedUsers array\r\n\r\n    if (checked) {\r\n      // If the user has checked this field we need to push this to checkedUsersList\r\n      elements.push(value);\r\n    } else {\r\n      // User has unchecked this field, we need to remove it from the list\r\n      elements = elements.filter((element) => element !== value);\r\n    }\r\n    // remove empty values\r\n    elements = elements.filter((element) => element !== \"\");\r\n\r\n    dispatch(setSelectedPolicies(elements));\r\n  };\r\n\r\n  const filteredRecords = records.filter((elementItem) =>\r\n    elementItem.name.includes(filter)\r\n  );\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        {loading && <LinearProgress />}\r\n        {records.length > 0 ? (\r\n          <React.Fragment>\r\n            <Grid item xs={12} className={classes.filterBox}>\r\n              <span className={classes.fieldLabel}>{t(\"assign_policies\")}</span>\r\n              <div className={classes.searchBox}>\r\n                <SearchBox\r\n                  placeholder={t(\"policy_search_placeholder\")}\r\n                  onChange={(value) => {\r\n                    setFilter(value);\r\n                  }}\r\n                  value={filter}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              className={classes.tableBlock}\r\n              style={{ paddingBottom: 16 }}\r\n            >\r\n              <TableWrapper\r\n                columns={[{ label: t(\"policy\"), elementKey: \"name\" }]}\r\n                onSelect={selectionChanged}\r\n                selectedItems={currentPolicies}\r\n                isLoading={loading}\r\n                records={filteredRecords}\r\n                entityName=\"Policies\"\r\n                idField=\"name\"\r\n                customPaperHeight={classes.multiSelectTable}\r\n              />\r\n            </Grid>\r\n          </React.Fragment>\r\n        ) : (\r\n          <div className={classes.noFound}>{t(\"no_policies_available\")}</div>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(PolicySelectors);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\n\r\nimport get from \"lodash/get\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Button, LinearProgress } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {\r\n  modalBasic,\r\n  spacingUtils,\r\n  tableStyles,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\nimport { User } from \"../Users/types\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\r\nimport api from \"../../../common/api\";\r\nimport PolicySelectors from \"./PolicySelectors\";\r\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\r\nimport { encodeURLString } from \"../../../common/utils\";\r\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { AppState, useAppDispatch } from \"../../../store\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { setSelectedPolicies } from \"../Users/AddUsersSlice\";\r\n\r\ninterface ISetPolicyProps {\r\n  classes: any;\r\n  closeModalAndRefresh: () => void;\r\n  selectedUser: User | null;\r\n  selectedGroups: string[] | null;\r\n  open: boolean;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...modalBasic,\r\n    ...spacingUtils,\r\n    tableBlock: {\r\n      ...tableStyles.tableBlock,\r\n      marginTop: 15,\r\n    },\r\n    buttonContainer: {\r\n      textAlign: \"right\",\r\n      marginTop: \".9rem\",\r\n    },\r\n  });\r\n\r\nconst SetPolicy = ({\r\n  classes,\r\n  closeModalAndRefresh,\r\n  selectedUser,\r\n  selectedGroups,\r\n  open,\r\n}: ISetPolicyProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n  //Local States\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [actualPolicy, setActualPolicy] = useState<string[]>([]);\r\n  const [selectedPolicy, setSelectedPolicy] = useState<string[]>([]);\r\n  const currentPolicies = useSelector(\r\n    (state: AppState) => state.createUser.selectedPolicies\r\n  );\r\n  const setPolicyAction = () => {\r\n    let users = null;\r\n    let groups = null;\r\n    if (selectedGroups !== null) {\r\n      groups = selectedGroups;\r\n    } else {\r\n      if (selectedUser !== null) {\r\n        users = [selectedUser.accessKey] || [\" \"];\r\n      }\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    api\r\n      .invoke(\"PUT\", `/api/v1/set-policy-multi`, {\r\n        name: currentPolicies,\r\n        groups: groups,\r\n        users: users,\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        closeModalAndRefresh();\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setLoading(false);\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  const fetchGroupInformation = () => {\r\n    if (selectedGroups?.length === 1) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/group/${encodeURLString(selectedGroups[0])}`)\r\n        .then((res: any) => {\r\n          const groupPolicy: String = get(res, \"policy\", \"\");\r\n          setActualPolicy(groupPolicy.split(\",\"));\r\n          setSelectedPolicy(groupPolicy.split(\",\"));\r\n          dispatch(setSelectedPolicies(groupPolicy.split(\",\")));\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setModalErrorSnackMessage(err));\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const resetSelection = () => {\r\n    setSelectedPolicy(actualPolicy);\r\n    dispatch(setSelectedPolicies(actualPolicy));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (selectedGroups?.length === 1) {\r\n        fetchGroupInformation();\r\n        return;\r\n      }\r\n\r\n      const userPolicy: string[] = get(selectedUser, \"policy\", []);\r\n      setActualPolicy(userPolicy);\r\n      setSelectedPolicy(userPolicy);\r\n      dispatch(setSelectedPolicies(userPolicy));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [open, selectedGroups?.length, selectedUser]);\r\n\r\n  const userName = get(selectedUser, \"accessKey\", \"\");\r\n\r\n  return (\r\n    <ModalWrapper\r\n      onClose={() => {\r\n        closeModalAndRefresh();\r\n      }}\r\n      modalOpen={open}\r\n      title=\"Set Policies\"\r\n    >\r\n      <Grid container>\r\n        {(selectedGroups?.length === 1 || selectedUser != null) && (\r\n          <Fragment>\r\n            <Grid item xs={12}>\r\n              <PredefinedList\r\n                label={`${t(\"selected\")} ${selectedGroups !== null ? t(\"group\") : t(\"user\")}`}\r\n                content={selectedGroups !== null ? selectedGroups[0] : userName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <PredefinedList\r\n                label={t(\"current_policy\")}\r\n                content={actualPolicy.join(\", \")}\r\n              />\r\n            </Grid>\r\n          </Fragment>\r\n        )}\r\n        {selectedGroups && selectedGroups?.length > 1 && (\r\n          <PredefinedList\r\n            label={t(\"selected_group\")}\r\n            content={selectedGroups.join(\", \")}\r\n          />\r\n        )}\r\n        <Grid item xs={12}>\r\n          <div className={classes.tableBlock}>\r\n            <PolicySelectors selectedPolicy={selectedPolicy} />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.buttonContainer}>\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.spacerRight}\r\n          onClick={resetSelection}\r\n        >\r\n          Reset\r\n        </Button>\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled={loading}\r\n          onClick={setPolicyAction}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Grid>\r\n      {loading && (\r\n        <Grid item xs={12}>\r\n          <LinearProgress />\r\n        </Grid>\r\n      )}\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SetPolicy);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\ninterface userInterface {\r\n  accessKey: string;\r\n}\r\n\r\ninterface policyInterface {\r\n  name: string;\r\n}\r\n\r\ninterface policyDetailsInterface {\r\n  policy: string;\r\n}\r\n\r\nexport const usersSort = (a: userInterface, b: userInterface) => {\r\n  if (a.accessKey > b.accessKey) {\r\n    return 1;\r\n  }\r\n  if (a.accessKey < b.accessKey) {\r\n    return -1;\r\n  }\r\n  // a must be equal to b\r\n  return 0;\r\n};\r\n\r\nexport const policySort = (a: policyInterface, b: policyInterface) => {\r\n  if (a.name > b.name) {\r\n    return 1;\r\n  }\r\n  if (a.name < b.name) {\r\n    return -1;\r\n  }\r\n  // a must be equal to b\r\n  return 0;\r\n};\r\n\r\nexport const stringSort = (a: string, b: string) => {\r\n  if (a > b) {\r\n    return 1;\r\n  }\r\n  if (a < b) {\r\n    return -1;\r\n  }\r\n  // a must be equal to b\r\n  return 0;\r\n};\r\n\r\nexport const policyDetailsSort = (\r\n  a: policyDetailsInterface,\r\n  b: policyDetailsInterface\r\n) => {\r\n  if (a.policy > b.policy) {\r\n    return 1;\r\n  }\r\n  if (a.policy < b.policy) {\r\n    return -1;\r\n  }\r\n  // a must be equal to b\r\n  return 0;\r\n};\r\n"],"names":["withStyles","theme","createStyles","predefinedList","classes","label","content","multiLine","actionButton","Fragment","className","prefinedContainer","item","xs","predefinedTitle","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","deleteDialogStyles","padding","paddingBottom","customDialogSize","width","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","titleIcon","dispatch","useAppDispatch","useState","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","type","customSize","paper","fullWidth","detailedErrorMsg","length","open","scroll","event","reason","root","titleText","closeContainer","id","closeButton","onClick","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","margin","fontSize","searchField","adornment","placeholder","onChange","adornmentPosition","overrideClass","value","inputProps","disableUnderline","position","InputProps","e","target","variant","tabStripStyle","minHeight","tabsContainer","display","height","tabsHeaderContainer","background","borderRight","flexFlow","alignItems","justifyContent","borderBottom","marginRight","marginBottom","fontWeight","tabContentContainer","tabPanel","flexDirection","selectedTab","routes","isRouteTabs","React","setValue","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","headerList","contentList","forEach","child","push","tabConfig","newValue","orientation","scrollButtons","tabList","map","index","tabHeader","style","disableTouchRipple","focusRipple","selectedGroups","deleteOpen","closeDeleteModalAndRefresh","t","useTranslation","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","renderGroups","group","confirmText","isOpen","isLoading","onConfirm","encodeURLString","confirmationContent","userSelector","modalStyleUtils","formFieldStyles","modalBasic","groupStatus","preSelectedUsers","selectedGroup","selectedUsers","setSelectedUsers","ModalWrapper","Grid","container","formFieldRow","PredefinedList","UsersSelectors","editMode","modalButtonBar","Button","color","api","members","status","then","res","catch","setModalErrorSnackMessage","PageHeader","BackLink","to","IAM_PAGES","actions","formatPolicy","policy","split","pageContainer","border","statusLabel","statusValue","tableStyles","spacingUtils","actionsTray","flex","marginLeft","whiteSpace","textOverflow","containerForHeader","spacing","navigate","useNavigate","params","useParams","groupDetails","setGroupDetails","policyOpen","setPolicyOpen","usersOpen","setUsersOpen","setDeleteOpen","memberFilter","setMemberFilter","groupName","decodeURLString","groupEnabled","filteredMembers","filter","elementItem","includes","fetchGroupInfo","groupPolicies","isGroupEnabled","memberActionText","getGroupDetails","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","groupsTabContent","PanelTitle","SearchBox","searchText","SecureComponent","resource","scopes","errorProps","disabled","RBIconButton","tooltip","text","icon","tableBlock","TableWrapper","itemActions","userName","columns","elementKey","selectedItems","records","entityName","idField","policiesTabContent","PageLayout","ScreenTitle","subTitle","matchAll","FormSwitchWrapper","indicatorLabels","checked","name","nextStatus","switchOnly","spacerLeft","VerticalTabs","SetPolicy","selectedUser","closeModalAndRefresh","setSelectedPolicies","onSaveClick","DeleteGroup","isDelSuccess","overflow","boxShadow","searchBox","actionsTitle","alignSelf","minWidth","noFound","textAlign","selectorsCommon","setRecords","loading","setFilter","fetchUsers","useCallback","users","get","sort","usersSort","selUsers","filteredRecords","accessKey","onSelect","targetD","elements","element","customPaperHeight","multiSelectTable","fieldLabel","filterBox","selectedPolicy","currentPolicies","createUser","selectedPolicies","fetchPolicies","policies","policySort","marginTop","buttonContainer","setLoading","actualPolicy","setActualPolicy","setSelectedPolicy","groupPolicy","userPolicy","join","spacerRight","groups","a","b","stringSort","policyDetailsSort"],"sourceRoot":""}
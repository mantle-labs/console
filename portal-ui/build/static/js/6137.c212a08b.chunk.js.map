{"version":3,"file":"static/js/6137.c212a08b.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/NotificationEndpoints/AddNotificationEndpoint.tsx","screens/Console/NotificationEndpoints/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\r\n\r\nfunction withSuspense<P extends string | number | object>(\r\n  WrappedComponent: ComponentType<P>,\r\n  fallback: SuspenseProps[\"fallback\"] = null\r\n) {\r\n  function ComponentWithSuspense(props: P) {\r\n    return (\r\n      <Suspense fallback={fallback}>\r\n        <WrappedComponent {...(props as any)} />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  return ComponentWithSuspense;\r\n}\r\n\r\nexport default withSuspense;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\n\r\nimport get from \"lodash/get\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nimport api from \"../../../common/api\";\r\nimport {\r\n  notificationEndpointsFields,\r\n  notifyMysql,\r\n  notifyPostgres,\r\n  removeEmptyFields,\r\n  servicesList,\r\n} from \"./utils\";\r\nimport {\r\n  modalBasic,\r\n  settingsCommon,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\n\r\nimport { IElementValue } from \"../Configurations/types\";\r\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\r\n\r\nimport withSuspense from \"../Common/Components/withSuspense\";\r\nimport BackLink from \"../../../common/BackLink\";\r\nimport PageLayout from \"../Common/Layout/PageLayout\";\r\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\r\nimport {\r\n  setErrorSnackMessage,\r\n  setServerNeedsRestart,\r\n} from \"../../../systemSlice\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../../store\";\r\n\r\nconst ConfMySql = withSuspense(\r\n  React.lazy(() => import(\"./CustomForms/ConfMySql\"))\r\n);\r\n\r\nconst ConfTargetGeneric = withSuspense(\r\n  React.lazy(() => import(\"./ConfTargetGeneric\"))\r\n);\r\n\r\nconst ConfPostgres = withSuspense(\r\n  React.lazy(() => import(\"./CustomForms/ConfPostgres\"))\r\n);\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...modalBasic,\r\n    ...settingsCommon,\r\n    lambdaNotif: {\r\n      background:\r\n        \"linear-gradient(90deg, rgba(249,249,250,1) 0%, rgba(250,250,251,1) 68%, rgba(254,254,254,1) 100%)\",\r\n      border: \"#E5E5E5 1px solid\",\r\n      borderRadius: 5,\r\n      height: 80,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"start\",\r\n      marginBottom: 16,\r\n      cursor: \"pointer\",\r\n      padding: 0,\r\n      overflow: \"hidden\",\r\n    },\r\n    lambdaNotifIcon: {\r\n      backgroundColor: \"#FEFEFE\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      width: 80,\r\n      height: 80,\r\n\r\n      \"& img\": {\r\n        maxWidth: 46,\r\n        maxHeight: 46,\r\n      },\r\n    },\r\n    lambdaNotifTitle: {\r\n      color: \"#07193E\",\r\n      fontSize: 16,\r\n      fontFamily: \"Lato,sans-serif\",\r\n      paddingLeft: 18,\r\n    },\r\n    formBox: {\r\n      border: \"1px solid #EAEAEA\",\r\n      padding: 15,\r\n    },\r\n  });\r\n\r\ninterface IAddNotificationEndpointProps {\r\n  saveAndRefresh: any;\r\n  classes: any;\r\n}\r\n\r\nconst AddNotificationEndpoint = ({\r\n  saveAndRefresh,\r\n  classes,\r\n}: IAddNotificationEndpointProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  //Local States\r\n  const [valuesArr, setValueArr] = useState<IElementValue[]>([]);\r\n  const [saving, setSaving] = useState<boolean>(false);\r\n  const service = params.service || \"\";\r\n  //Effects\r\n\r\n  useEffect(() => {\r\n    if (saving) {\r\n      const payload = {\r\n        key_values: removeEmptyFields(valuesArr),\r\n      };\r\n      api\r\n        .invoke(\"PUT\", `/api/v1/configs/${service}`, payload)\r\n        .then(() => {\r\n          setSaving(false);\r\n          dispatch(setServerNeedsRestart(true));\r\n          navigate(IAM_PAGES.NOTIFICATIONS_ENDPOINTS);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setSaving(false);\r\n          dispatch(setErrorSnackMessage(err));\r\n        });\r\n    }\r\n  }, [saving, service, valuesArr, saveAndRefresh, dispatch, navigate]);\r\n\r\n  //Fetch Actions\r\n  const submitForm = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    setSaving(true);\r\n  };\r\n\r\n  const onValueChange = useCallback(\r\n    (newValue: IElementValue[]) => {\r\n      setValueArr(newValue);\r\n    },\r\n    [setValueArr]\r\n  );\r\n\r\n  let srvComponent;\r\n  switch (service) {\r\n    case notifyPostgres: {\r\n      srvComponent = <ConfPostgres onChange={onValueChange} />;\r\n      break;\r\n    }\r\n    case notifyMysql: {\r\n      srvComponent = <ConfMySql onChange={onValueChange} />;\r\n      break;\r\n    }\r\n    default: {\r\n      const fields = get(notificationEndpointsFields, service, []);\r\n\r\n      srvComponent = (\r\n        <ConfTargetGeneric fields={fields} onChange={onValueChange} />\r\n      );\r\n    }\r\n  }\r\n\r\n  const targetElement = servicesList.find(\r\n    (element) => element.actionTrigger === service\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader\r\n        label={\r\n          <Fragment>\r\n            <BackLink\r\n              to={IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD}\r\n              label=\"Notification Endpoint\"\r\n            />\r\n          </Fragment>\r\n        }\r\n        actions={<React.Fragment />}\r\n      />\r\n\r\n      <PageLayout>\r\n        <form noValidate onSubmit={submitForm}>\r\n          {service !== \"\" && (\r\n            <Fragment>\r\n              <Grid item xs={12}>\r\n                {targetElement && (\r\n                  <div\r\n                    key={`icon-${targetElement.targetTitle}`}\r\n                    className={classes.lambdaNotif}\r\n                  >\r\n                    <div className={classes.lambdaNotifIcon}>\r\n                      <img\r\n                        src={targetElement.logo}\r\n                        className={classes.logoButton}\r\n                        alt={targetElement.targetTitle}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className={classes.lambdaNotifTitle}>\r\n                      <b>\r\n                        {targetElement ? targetElement.targetTitle : \"\"}\r\n                        Notification Endpoint\r\n                      </b>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Grid>\r\n              <div className={classes.formBox}>\r\n                <Grid item xs={12} className={classes.configForm}>\r\n                  {srvComponent}\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.settingsButtonContainer}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={saving}\r\n                  >\r\n                    Save Notification Target\r\n                  </Button>\r\n                </Grid>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n        </form>\r\n      </PageLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AddNotificationEndpoint);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { NotificationEndpointItem } from \"./types\";\r\n\r\nimport { IElementValue } from \"../Configurations/types\";\r\n\r\nexport const notifyPostgres = \"notify_postgres\";\r\nexport const notifyMysql = \"notify_mysql\";\r\nexport const notifyKafka = \"notify_kafka\";\r\nexport const notifyAmqp = \"notify_amqp\";\r\nexport const notifyMqtt = \"notify_mqtt\";\r\nexport const notifyRedis = \"notify_redis\";\r\nexport const notifyNats = \"notify_nats\";\r\nexport const notifyElasticsearch = \"notify_elasticsearch\";\r\nexport const notifyWebhooks = \"notify_webhook\";\r\nexport const notifyNsq = \"notify_nsq\";\r\n\r\nexport const notificationTransform = (\r\n  notificationElements: NotificationEndpointItem[]\r\n) => {\r\n  return notificationElements.map((element) => {\r\n    return {\r\n      service_name: `${element.service}:${element.account_id}`,\r\n      name: element.service,\r\n      account_id: element.account_id,\r\n      status: element.status,\r\n    };\r\n  });\r\n};\r\n\r\nexport const servicesList = [\r\n  {\r\n    actionTrigger: notifyPostgres,\r\n    targetTitle: \"PostgreSQL\",\r\n    logo: \"/postgres-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyKafka,\r\n    targetTitle: \"Kafka\",\r\n    logo: \"/kafka-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyAmqp,\r\n    targetTitle: \"AMQP\",\r\n    logo: \"/amqp-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyMqtt,\r\n    targetTitle: \"MQTT\",\r\n    logo: \"/mqtt-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyRedis,\r\n    targetTitle: \"Redis\",\r\n    logo: \"/redis-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyNats,\r\n    targetTitle: \"NATS\",\r\n    logo: \"/nats-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyMysql,\r\n    targetTitle: \"Mysql\",\r\n    logo: \"/mysql-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyElasticsearch,\r\n    targetTitle: \"Elastic Search\",\r\n    logo: \"/elasticsearch-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyWebhooks,\r\n    targetTitle: \"Webhook\",\r\n    logo: \"/webhooks-logo.svg\",\r\n  },\r\n  {\r\n    actionTrigger: notifyNsq,\r\n    targetTitle: \"NSQ\",\r\n    logo: \"/nsq-logo.svg\",\r\n  },\r\n];\r\n\r\nconst commonFields = [\r\n  {\r\n    name: \"queue-dir\",\r\n    label: \"Queue Directory\",\r\n    required: true,\r\n\r\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\r\n    type: \"string\",\r\n    placeholder: \"Enter Queue Directory\",\r\n  },\r\n  {\r\n    name: \"queue-limit\",\r\n    label: \"Queue Limit\",\r\n    required: false,\r\n\r\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\r\n    type: \"number\",\r\n    placeholder: \"Enter Queue Limit\",\r\n  },\r\n  {\r\n    name: \"comment\",\r\n    label: \"Comment\",\r\n    required: false,\r\n    type: \"comment\",\r\n    placeholder: \"Enter custom notes if any\",\r\n  },\r\n];\r\n\r\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\r\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\r\n\r\n  return nonEmptyFields;\r\n};\r\n\r\nexport const notificationEndpointsFields: any = {\r\n  [notifyKafka]: [\r\n    {\r\n      name: \"brokers\",\r\n      label: \"Brokers\",\r\n      required: true,\r\n\r\n      tooltip: \"Comma separated list of Kafka broker addresses\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Brokers\",\r\n    },\r\n    {\r\n      name: \"topic\",\r\n      label: \"Topic\",\r\n      tooltip: \"Kafka topic used for bucket notifications\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Topic\",\r\n    },\r\n    {\r\n      name: \"sasl_username\",\r\n      label: \"SASL Username\",\r\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\r\n      type: \"string\",\r\n      placeholder: \"Enter SASL Username\",\r\n    },\r\n    {\r\n      name: \"sasl_password\",\r\n      label: \"SASL Password\",\r\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\r\n      type: \"string\",\r\n      placeholder: \"Enter SASL Password\",\r\n    },\r\n    {\r\n      name: \"sasl_mechanism\",\r\n      label: \"SASL Mechanism\",\r\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\r\n      type: \"string\",\r\n    },\r\n    {\r\n      name: \"tls_client_auth\",\r\n      label: \"TLS Client Auth\",\r\n      tooltip:\r\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\r\n      type: \"string\",\r\n      placeholder: \"Enter TLS Client Auth\",\r\n    },\r\n    {\r\n      name: \"sasl\",\r\n      label: \"SASL\",\r\n      tooltip: \"Set to 'on' to enable SASL authentication\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"tls\",\r\n      label: \"TLS\",\r\n      tooltip: \"Set to 'on' to enable TLS\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"tls_skip_verify\",\r\n      label: \"TLS skip verify\",\r\n      tooltip:\r\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"client_tls_cert\",\r\n      label: \"client TLS cert\",\r\n      tooltip: \"Path to client certificate for mTLS auth\",\r\n      type: \"path\",\r\n      placeholder: \"Enter TLS Client Cert\",\r\n    },\r\n    {\r\n      name: \"client_tls_key\",\r\n      label: \"client TLS key\",\r\n      tooltip: \"Path to client key for mTLS auth\",\r\n      type: \"path\",\r\n      placeholder: \"Enter TLS Client Key\",\r\n    },\r\n    {\r\n      name: \"version\",\r\n      label: \"Version\",\r\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Kafka Version\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyAmqp]: [\r\n    {\r\n      name: \"url\",\r\n      required: true,\r\n      label: \"URL\",\r\n      tooltip:\r\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\r\n      type: \"url\",\r\n    },\r\n    {\r\n      name: \"exchange\",\r\n      label: \"Exchange\",\r\n      tooltip: \"Name of the AMQP exchange\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Exchange\",\r\n    },\r\n    {\r\n      name: \"exchange_type\",\r\n      label: \"Exchange Type\",\r\n      tooltip: \"AMQP exchange type\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Exchange Type\",\r\n    },\r\n    {\r\n      name: \"routing_key\",\r\n      label: \"Routing Key\",\r\n      tooltip: \"Routing key for publishing\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Routing Key\",\r\n    },\r\n    {\r\n      name: \"mandatory\",\r\n      label: \"Mandatory\",\r\n      tooltip:\r\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"durable\",\r\n      label: \"Durable\",\r\n      tooltip:\r\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"no_wait\",\r\n      label: \"No Wait\",\r\n      tooltip:\r\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"internal\",\r\n      label: \"Internal\",\r\n      tooltip:\r\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"auto_deleted\",\r\n      label: \"Auto Deleted\",\r\n      tooltip:\r\n        \"Auto delete queue when set to 'on', when there are no consumers\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"delivery_mode\",\r\n      label: \"Delivery Mode\",\r\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\r\n      type: \"number\",\r\n      placeholder: \"Enter Delivery Mode\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyRedis]: [\r\n    {\r\n      name: \"address\",\r\n      required: true,\r\n      label: \"Address\",\r\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\r\n      type: \"address\",\r\n      placeholder: \"Enter Address\",\r\n    },\r\n    {\r\n      name: \"key\",\r\n      required: true,\r\n      label: \"Key\",\r\n      tooltip: \"Redis key to store/update events, key is auto-created\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Key\",\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"Password\",\r\n      tooltip: \"Redis server password\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Password\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyMqtt]: [\r\n    {\r\n      name: \"broker\",\r\n      required: true,\r\n      label: \"Broker\",\r\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\r\n      type: \"uri\",\r\n      placeholder: \"Enter Brokers\",\r\n    },\r\n    {\r\n      name: \"topic\",\r\n      required: true,\r\n      label: \"Topic\",\r\n      tooltip: \"name of the MQTT topic to publish\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Topic\",\r\n    },\r\n    {\r\n      name: \"username\",\r\n      label: \"Username\",\r\n      tooltip: \"MQTT username\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Username\",\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"Password\",\r\n      tooltip: \"MQTT password\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Password\",\r\n    },\r\n    {\r\n      name: \"qos\",\r\n      label: \"QOS\",\r\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\r\n      type: \"number\",\r\n      placeholder: \"Enter QOS\",\r\n    },\r\n    {\r\n      name: \"keep_alive_interval\",\r\n      label: \"Keep Alive Interval\",\r\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\r\n      type: \"duration\",\r\n      placeholder: \"Enter Keep Alive Internal\",\r\n    },\r\n    {\r\n      name: \"reconnect_interval\",\r\n      label: \"Reconnect Interval\",\r\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\r\n      type: \"duration\",\r\n      placeholder: \"Enter Reconnect Interval\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyNats]: [\r\n    {\r\n      name: \"address\",\r\n      required: true,\r\n      label: \"Address\",\r\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\r\n      type: \"address\",\r\n      placeholder: \"Enter Address\",\r\n    },\r\n    {\r\n      name: \"subject\",\r\n      required: true,\r\n      label: \"Subject\",\r\n      tooltip: \"NATS subscription subject\",\r\n      type: \"string\",\r\n      placeholder: \"Enter NATS Subject\",\r\n    },\r\n    {\r\n      name: \"username\",\r\n      label: \"Username\",\r\n      tooltip: \"NATS username\",\r\n      type: \"string\",\r\n      placeholder: \"Enter NATS Username\",\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"Password\",\r\n      tooltip: \"NATS password\",\r\n      type: \"string\",\r\n      placeholder: \"Enter NATS password\",\r\n    },\r\n    {\r\n      name: \"token\",\r\n      label: \"Token\",\r\n      tooltip: \"NATS token\",\r\n      type: \"string\",\r\n      placeholder: \"Enter NATS token\",\r\n    },\r\n    {\r\n      name: \"tls\",\r\n      label: \"TLS\",\r\n      tooltip: \"Set to 'on' to enable TLS\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"tls_skip_verify\",\r\n      label: \"TLS Skip Verify\",\r\n      tooltip:\r\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"ping_interval\",\r\n      label: \"Ping Interval\",\r\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\r\n      type: \"duration\",\r\n      placeholder: \"Enter Ping Interval\",\r\n    },\r\n    {\r\n      name: \"streaming\",\r\n      label: \"Streaming\",\r\n      tooltip: \"Set to 'on', to use streaming NATS server\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"streaming_async\",\r\n      label: \"Streaming async\",\r\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"streaming_max_pub_acks_in_flight\",\r\n      label: \"Streaming max publish ACKS in flight\",\r\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\r\n      type: \"number\",\r\n      placeholder: \"Enter Streaming in flight value\",\r\n    },\r\n    {\r\n      name: \"streaming_cluster_id\",\r\n      label: \"Streaming Cluster ID\",\r\n      tooltip: \"Unique ID for NATS streaming cluster\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Streaming Cluster ID\",\r\n    },\r\n    {\r\n      name: \"cert_authority\",\r\n      label: \"Cert Authority\",\r\n      tooltip: \"Path to certificate chain of the target NATS server\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Cert Authority\",\r\n    },\r\n    {\r\n      name: \"client_cert\",\r\n      label: \"Client Cert\",\r\n      tooltip: \"Client cert for NATS mTLS auth\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Client Cert\",\r\n    },\r\n    {\r\n      name: \"client_key\",\r\n      label: \"Client Key\",\r\n      tooltip: \"Client cert key for NATS mTLS auth\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Client Key\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyElasticsearch]: [\r\n    {\r\n      name: \"url\",\r\n      required: true,\r\n      label: \"URL\",\r\n      tooltip:\r\n        \"Elasticsearch server's address, with optional authentication info\",\r\n      type: \"url\",\r\n      placeholder: \"Enter URL\",\r\n    },\r\n    {\r\n      name: \"index\",\r\n      required: true,\r\n      label: \"Index\",\r\n      tooltip:\r\n        \"Elasticsearch index to store/update events, index is auto-created\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Index\",\r\n    },\r\n    {\r\n      name: \"format\",\r\n      required: true,\r\n      label: \"Format\",\r\n      tooltip:\r\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\r\n      type: \"enum\",\r\n      placeholder: \"Enter Format\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyWebhooks]: [\r\n    {\r\n      name: \"endpoint\",\r\n      required: true,\r\n      label: \"Endpoint\",\r\n      tooltip:\r\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\r\n      type: \"url\",\r\n      placeholder: \"Enter Endpoint\",\r\n    },\r\n    {\r\n      name: \"auth_token\",\r\n      label: \"Auth Token\",\r\n      tooltip: \"opaque string or JWT authorization token\",\r\n      type: \"string\",\r\n      placeholder: \"Enter auth_token\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n  [notifyNsq]: [\r\n    {\r\n      name: \"nsqd_address\",\r\n      required: true,\r\n      label: \"NSQD Address\",\r\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\r\n      type: \"address\",\r\n      placeholder: \"Enter nsqd_address\",\r\n    },\r\n    {\r\n      name: \"topic\",\r\n      required: true,\r\n      label: \"Topic\",\r\n      tooltip: \"NSQ topic\",\r\n      type: \"string\",\r\n      placeholder: \"Enter Topic\",\r\n    },\r\n    {\r\n      name: \"tls\",\r\n      label: \"TLS\",\r\n      tooltip: \"set to 'on' to enable TLS\",\r\n      type: \"on|off\",\r\n    },\r\n    {\r\n      name: \"tls_skip_verify\",\r\n      label: \"TLS Skip Verify\",\r\n      tooltip:\r\n        'trust server TLS without verification, defaults to \"on\" (verify)',\r\n      type: \"on|off\",\r\n    },\r\n    ...commonFields,\r\n  ],\r\n};\r\n\r\nconst serviceToConfigMap: Record<string, string> = {\r\n  webhook: \"notify_webhook\",\r\n  amqp: \"notify_amqp\",\r\n  kafka: \"notify_kafka\",\r\n  mqtt: \"notify_mqtt\",\r\n  nats: \"notify_nats\",\r\n  nsq: \"notify_nsq\",\r\n  mysql: \"notify_mysql\",\r\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from restapi/admin_notification_endpoints.go\r\n  elasticsearch: \"notify_elasticsearch\",\r\n  redis: \"notify_redis\",\r\n};\r\n\r\nexport const getNotificationConfigKey = (serviceName: string) => {\r\n  return serviceToConfigMap[serviceName];\r\n};\r\n"],"names":["WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","ConfMySql","withSuspense","React","ConfTargetGeneric","ConfPostgres","withStyles","theme","createStyles","modalBasic","settingsCommon","lambdaNotif","background","border","borderRadius","height","display","alignItems","justifyContent","marginBottom","cursor","padding","overflow","lambdaNotifIcon","backgroundColor","width","maxWidth","maxHeight","lambdaNotifTitle","color","fontSize","fontFamily","paddingLeft","formBox","saveAndRefresh","classes","dispatch","useAppDispatch","navigate","useNavigate","params","useParams","useState","valuesArr","setValueArr","saving","setSaving","service","useEffect","payload","key_values","removeEmptyFields","api","then","setServerNeedsRestart","IAM_PAGES","catch","err","setErrorSnackMessage","srvComponent","onValueChange","useCallback","newValue","notifyPostgres","onChange","notifyMysql","fields","get","notificationEndpointsFields","targetElement","servicesList","element","actionTrigger","Fragment","label","to","actions","noValidate","onSubmit","event","preventDefault","item","xs","className","src","logo","logoButton","alt","targetTitle","configForm","settingsButtonContainer","type","variant","disabled","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","map","service_name","account_id","name","status","commonFields","required","tooltip","placeholder","formFields","filter","field","value","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","getNotificationConfigKey","serviceName"],"sourceRoot":""}
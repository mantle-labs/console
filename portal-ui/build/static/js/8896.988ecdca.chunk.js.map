{"version":3,"file":"static/js/8896.988ecdca.chunk.js","mappings":"8OAoFA,UAlDoB,SAAC,GAIA,IAHnBA,EAGkB,EAHlBA,eACAC,EAEkB,EAFlBA,WACAC,EACkB,EADlBA,2BAEMC,GAAWC,EAAAA,EAAAA,MAQjB,GAAyCC,EAAAA,EAAAA,IAPpB,kBAAMH,GAA2B,EAAjC,IACF,SAACI,GAClBH,GAASI,EAAAA,EAAAA,IAAqBD,IAC9BJ,GAA2B,EAC5B,IAGD,eAAOM,EAAP,KAAsBC,EAAtB,KAEA,IAAKT,EACH,OAAO,KAET,IAMMU,EAAeV,EAAeW,KAAI,SAACC,GAAD,OACtC,0BACE,uBAAIA,KADIA,EAD4B,IAMxC,OACE,SAAC,IAAD,CACEC,MAAK,sBAAiBb,EAAec,OAAS,EAAI,IAAM,IACxDC,YAAa,SACbC,OAAQf,EACRgB,WAAW,SAAC,MAAD,IACXC,UAAWV,EACXW,UAnBmB,WAAO,IAAD,YACTnB,GADS,IAC3B,2BAAkC,CAAC,IAA1BY,EAAyB,QAChCH,EAAgB,SAAD,yBAA4BW,EAAAA,EAAAA,IAAgBR,IAC5D,CAH0B,+BAI5B,EAgBGS,QA3BY,kBAAMnB,GAA2B,EAAjC,EA4BZoB,qBACE,UAAC,IAAD,4DACiDtB,EAAec,OAAQ,IADxE,QAEQd,EAAec,OAAS,EAAI,KAAO,IACxCJ,MAKV,C","sources":["screens/Console/Groups/DeleteGroup.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\n\r\nimport { DialogContentText } from \"@mui/material\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\r\nimport useApi from \"../Common/Hooks/useApi\";\r\nimport { ConfirmDeleteIcon } from \"../../../icons\";\r\nimport { encodeURLString } from \"../../../common/utils\";\r\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../store\";\r\n\r\ninterface IDeleteGroup {\r\n  selectedGroups: string[];\r\n  deleteOpen: boolean;\r\n  closeDeleteModalAndRefresh: any;\r\n}\r\n\r\nconst DeleteGroup = ({\r\n  selectedGroups,\r\n  deleteOpen,\r\n  closeDeleteModalAndRefresh,\r\n}: IDeleteGroup) => {\r\n  const dispatch = useAppDispatch();\r\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\r\n  const onDelError = (err: ErrorResponseHandler) => {\r\n    dispatch(setErrorSnackMessage(err));\r\n    closeDeleteModalAndRefresh(false);\r\n  };\r\n  const onClose = () => closeDeleteModalAndRefresh(false);\r\n\r\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\r\n\r\n  if (!selectedGroups) {\r\n    return null;\r\n  }\r\n  const onDeleteGroups = () => {\r\n    for (let group of selectedGroups) {\r\n      invokeDeleteApi(\"DELETE\", `/api/v1/group/${encodeURLString(group)}`);\r\n    }\r\n  };\r\n\r\n  const renderGroups = selectedGroups.map((group) => (\r\n    <div key={group}>\r\n      <b>{group}</b>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <ConfirmDialog\r\n      title={`Delete Group${selectedGroups.length > 1 ? \"s\" : \"\"}`}\r\n      confirmText={\"Delete\"}\r\n      isOpen={deleteOpen}\r\n      titleIcon={<ConfirmDeleteIcon />}\r\n      isLoading={deleteLoading}\r\n      onConfirm={onDeleteGroups}\r\n      onClose={onClose}\r\n      confirmationContent={\r\n        <DialogContentText>\r\n          Are you sure you want to delete the following {selectedGroups.length}{\" \"}\r\n          group{selectedGroups.length > 1 ? \"s?\" : \"?\"}\r\n          {renderGroups}\r\n        </DialogContentText>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeleteGroup;\r\n"],"names":["selectedGroups","deleteOpen","closeDeleteModalAndRefresh","dispatch","useAppDispatch","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","renderGroups","map","group","title","length","confirmText","isOpen","titleIcon","isLoading","onConfirm","encodeURLString","onClose","confirmationContent"],"sourceRoot":""}
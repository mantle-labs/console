{"version":3,"file":"static/js/5088.75abd5eb.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/HealthInfo/types.ts","screens/Console/Common/TestWrapper/TestWrapper.tsx","screens/Console/HealthInfo/HealthInfo.tsx","utils/wsUtils.ts","../node_modules/@mui/icons-material/ArrowForwardIos.js","../node_modules/es5-ext/global.js","../node_modules/websocket/lib/browser.js","../node_modules/websocket/lib/version.js"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #E2E2E2\",\r\n      borderRadius: 2,\r\n      backgroundColor: \"#FBFAFA\",\r\n      paddingLeft: 25,\r\n      paddingTop: 31,\r\n      paddingBottom: 21,\r\n      paddingRight: 30,\r\n    },\r\n    leftItems: {\r\n      fontSize: 16,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 15,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& .min-icon\": {\r\n        marginRight: 15,\r\n        height: 28,\r\n        width: 38,\r\n      },\r\n    },\r\n    helpText: {\r\n      fontSize: 16,\r\n      paddingLeft: 5,\r\n    },\r\n  });\r\n\r\ninterface IHelpBox {\r\n  classes: any;\r\n  iconComponent: any;\r\n  title: string;\r\n  help: any;\r\n}\r\n\r\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.leftItems}>\r\n          {iconComponent}\r\n          {title}\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.helpText}>\r\n          {help}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(HelpBox);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nexport const DiagStatError = \"error\";\r\nexport const DiagStatSuccess = \"success\";\r\nexport const DiagStatInProgress = \"inProgress\";\r\n\r\nexport interface HealthInfoMessage {\r\n  timestamp: Date;\r\n  error: string;\r\n  perf: perfInfo;\r\n  minio: minioHealthInfo;\r\n  sys: sysHealthInfo;\r\n}\r\n\r\nexport interface ReportMessage {\r\n  encoded: string;\r\n  serverHealthInfo: HealthInfoMessage;\r\n}\r\n\r\nexport interface perfInfo {\r\n  drives: serverDrivesInfo[];\r\n  net: serverNetHealthInfo[];\r\n  net_parallel: serverNetHealthInfo;\r\n  error: string;\r\n}\r\n\r\nexport interface serverDrivesInfo {\r\n  addr: string;\r\n  serial: drivePerfInfo[];\r\n  parallel: drivePerfInfo[];\r\n  error: string;\r\n}\r\n\r\nexport interface drivePerfInfo {\r\n  endpoint: string;\r\n  latency: diskLatency;\r\n  throughput: diskThroughput;\r\n  error: string;\r\n}\r\n\r\nexport interface diskLatency {\r\n  avg_secs: number;\r\n  percentile50_secs: number;\r\n  percentile90_secs: number;\r\n  percentile99_secs: number;\r\n  min_secs: number;\r\n  max_secs: number;\r\n}\r\n\r\nexport interface diskThroughput {\r\n  avg_bytes_per_sec: number;\r\n  percentile50_bytes_per_sec: number;\r\n  percentile90_bytes_per_sec: number;\r\n  percentile99_bytes_per_sec: number;\r\n  min_bytes_per_sec: number;\r\n  max_bytes_per_sec: number;\r\n}\r\n\r\nexport interface serverNetHealthInfo {\r\n  addr: string;\r\n  net: netPerfInfo[];\r\n  error: string;\r\n}\r\n\r\nexport interface netPerfInfo {\r\n  remote: string;\r\n  latency: netLatency;\r\n  throughput: netThroughput;\r\n  error: string;\r\n}\r\n\r\nexport interface netLatency {\r\n  avg_secs: number;\r\n  percentile50_secs: number;\r\n  percentile90_secs: number;\r\n  percentile99_secs: number;\r\n  min_secs: number;\r\n  max_secs: number;\r\n}\r\n\r\nexport interface netThroughput {\r\n  avg_bytes_per_sec: number;\r\n  percentile50_bytes_per_sec: number;\r\n  percentile90_bytes_per_sec: number;\r\n  percentile99_bytes_per_sec: number;\r\n  min_bytes_per_sec: number;\r\n  max_bytes_per_sec: number;\r\n}\r\n\r\nexport interface minioHealthInfo {\r\n  info: infoMessage;\r\n  config: any;\r\n  error: string;\r\n}\r\n\r\nexport interface infoMessage {\r\n  mode: string;\r\n  domain: string[];\r\n  region: string;\r\n  sqsARN: string[];\r\n  deploymentID: string;\r\n  buckets: buckets;\r\n  objects: objects;\r\n  usage: usage;\r\n  services: services;\r\n  backend: any;\r\n  servers: serverProperties[];\r\n}\r\n\r\nexport interface buckets {\r\n  count: number;\r\n}\r\n\r\nexport interface objects {\r\n  count: number;\r\n}\r\n\r\nexport interface usage {\r\n  size: number;\r\n}\r\n\r\nexport interface services {\r\n  vault: vault;\r\n  ldap: ldap;\r\n  logger: Map<string, status[]>[];\r\n  audit: Map<string, status[]>[];\r\n  notifications: Map<string, Map<string, status[]>[]>;\r\n}\r\n\r\nexport interface vault {\r\n  status: string;\r\n  encrypt: string;\r\n  decrypt: string;\r\n}\r\n\r\nexport interface ldap {\r\n  status: string;\r\n}\r\n\r\nexport interface status {\r\n  status: string;\r\n}\r\n\r\nexport interface serverProperties {\r\n  state: string;\r\n  endpoint: string;\r\n  uptime: number;\r\n  version: string;\r\n  commitID: string;\r\n  network: Map<string, string>;\r\n  drives: disk[];\r\n}\r\n\r\nexport interface disk {\r\n  endpoint: string;\r\n  rootDisk: boolean;\r\n  path: string;\r\n  healing: boolean;\r\n  state: string;\r\n  uuid: string;\r\n  model: string;\r\n  totalspace: number;\r\n  usedspace: number;\r\n  availspace: number;\r\n  readthroughput: number;\r\n  writethroughput: number;\r\n  readlatency: number;\r\n  writelatency: number;\r\n  utilization: number;\r\n}\r\n\r\nexport interface sysHealthInfo {\r\n  cpus: serverCpuInfo[];\r\n  drives: serverDiskHwInfo[];\r\n  osinfos: serverOsInfo[];\r\n  meminfos: serverMemInfo[];\r\n  procinfos: serverProcInfo[];\r\n  error: string;\r\n}\r\n\r\nexport interface serverCpuInfo {\r\n  addr: string;\r\n  cpu: cpuInfoStat[];\r\n  time: cpuTimeStat[];\r\n  error: string;\r\n}\r\n\r\nexport interface cpuInfoStat {\r\n  cpu: number;\r\n  vendorId: string;\r\n  family: string;\r\n  model: string;\r\n  stepping: number;\r\n  physicalId: string;\r\n  coreId: string;\r\n  cores: number;\r\n  modelName: string;\r\n  mhz: number;\r\n  cacheSize: number;\r\n  flags: string[];\r\n  microcode: string;\r\n}\r\n\r\nexport interface cpuTimeStat {\r\n  cpu: string;\r\n  user: number;\r\n  system: number;\r\n  idle: number;\r\n  nice: number;\r\n  iowait: number;\r\n  irq: number;\r\n  softirq: number;\r\n  steal: number;\r\n  guest: number;\r\n  guestNice: number;\r\n}\r\n\r\nexport interface serverDiskHwInfo {\r\n  addr: string;\r\n  usages: diskUsageStat[];\r\n  partitions: partitionStat[];\r\n  counters: Map<string, diskIOCountersStat>;\r\n  error: string;\r\n}\r\n\r\nexport interface diskUsageStat {\r\n  path: string;\r\n  fstype: string;\r\n  total: number;\r\n  free: number;\r\n  used: number;\r\n  usedPercent: number;\r\n  inodesTotal: number;\r\n  inodesUsed: number;\r\n  inodesFree: number;\r\n  inodesUsedPercent: number;\r\n}\r\n\r\nexport interface partitionStat {\r\n  device: string;\r\n  mountpoint: string;\r\n  fstype: string;\r\n  opts: string;\r\n  smartInfo: smartInfo;\r\n}\r\n\r\nexport interface smartInfo {\r\n  device: string;\r\n  scsi: scsiInfo;\r\n  nvme: nvmeInfo;\r\n  ata: ataInfo;\r\n  error: string;\r\n}\r\n\r\nexport interface scsiInfo {\r\n  scsiCapacityBytes: number;\r\n  scsiModeSenseBuf: string;\r\n  scsirespLen: number;\r\n  scsiBdLen: number;\r\n  scsiOffset: number;\r\n  sciRpm: number;\r\n}\r\n\r\nexport interface nvmeInfo {\r\n  serialNum: string;\r\n  vendorId: string;\r\n  firmwareVersion: string;\r\n  modelNum: string;\r\n  spareAvailable: string;\r\n  spareThreshold: string;\r\n  temperature: string;\r\n  criticalWarning: string;\r\n  maxDataTransferPages: number;\r\n  controllerBusyTime: number;\r\n  powerOnHours: number;\r\n  powerCycles: number;\r\n  unsafeShutdowns: number;\r\n  mediaAndDataIntgerityErrors: number;\r\n  dataUnitsReadBytes: number;\r\n  dataUnitsWrittenBytes: number;\r\n  hostReadCommands: number;\r\n  hostWriteCommands: number;\r\n}\r\n\r\nexport interface ataInfo {\r\n  scsiLuWWNDeviceID: string;\r\n  serialNum: string;\r\n  modelNum: string;\r\n  firmwareRevision: string;\r\n  RotationRate: string;\r\n  MajorVersion: string;\r\n  MinorVersion: string;\r\n  smartSupportAvailable: boolean;\r\n  smartSupportEnabled: boolean;\r\n  smartErrorLog: string;\r\n  transport: string;\r\n}\r\n\r\nexport interface diskIOCountersStat {\r\n  readCount: number;\r\n  mergedReadCount: number;\r\n  DriteCount: number;\r\n  mergedWriteCount: number;\r\n  readBytes: number;\r\n  writeBytes: number;\r\n  readTime: number;\r\n  writeTime: number;\r\n  iopsInProgress: number;\r\n  ioTime: number;\r\n  weightedIO: number;\r\n  name: string;\r\n  serialNumber: string;\r\n  label: string;\r\n}\r\n\r\nexport interface serverOsInfo {\r\n  addr: string;\r\n  info: infoStat;\r\n  sensors: temperatureStat[];\r\n  users: userStat[];\r\n  error: string;\r\n}\r\n\r\nexport interface infoStat {\r\n  hostname: string;\r\n  uptime: number;\r\n  bootTime: number;\r\n  procs: number;\r\n  os: string;\r\n  platform: string;\r\n  platformFamily: string;\r\n  platformVersion: string;\r\n  kernelVersion: string;\r\n  kernelArch: string;\r\n  virtualizationSystem: string;\r\n  virtualizationRole: string;\r\n  hostid: string;\r\n}\r\n\r\nexport interface temperatureStat {\r\n  sensorKey: string;\r\n  sensorTemperature: number;\r\n}\r\n\r\nexport interface userStat {\r\n  user: string;\r\n  terminal: string;\r\n  host: string;\r\n  started: number;\r\n}\r\n\r\nexport interface serverMemInfo {\r\n  addr: string;\r\n  swap: swapMemoryStat;\r\n  virtualmem: virtualMemoryStat;\r\n  error: string;\r\n}\r\n\r\nexport interface swapMemoryStat {\r\n  total: number;\r\n  used: number;\r\n  free: number;\r\n  usedPercent: number;\r\n  sin: number;\r\n  sout: number;\r\n  pgin: number;\r\n  pgout: number;\r\n  pgfault: number;\r\n  pgmajfault: number;\r\n}\r\n\r\nexport interface virtualMemoryStat {\r\n  total: number;\r\n  available: number;\r\n  used: number;\r\n  usedPercent: number;\r\n  free: number;\r\n  active: number;\r\n  inactive: number;\r\n  wired: number;\r\n  laundry: number;\r\n  buffers: number;\r\n  cached: number;\r\n  writeback: number;\r\n  dirty: number;\r\n  writebacktmp: number;\r\n  shared: number;\r\n  slab: number;\r\n  sreclaimable: number;\r\n  sunreclaim: number;\r\n  pagetables: number;\r\n  swapcached: number;\r\n  commitlimit: number;\r\n  committedas: number;\r\n  hightotal: number;\r\n  highfree: number;\r\n  lowtotal: number;\r\n  lowfree: number;\r\n  swaptotal: number;\r\n  swapfree: number;\r\n  mapped: number;\r\n  vmalloctotal: number;\r\n  vmallocused: number;\r\n  vmallocchunk: number;\r\n  hugepagestotal: number;\r\n  hugepagesfree: number;\r\n  hugepagesize: number;\r\n}\r\n\r\nexport interface serverProcInfo {\r\n  addr: string;\r\n  processes: sysProcess[];\r\n  error: string;\r\n}\r\n\r\nexport interface sysProcess {\r\n  pid: number;\r\n  background: boolean;\r\n  cpupercent: number;\r\n  children: number[];\r\n  cmd: string;\r\n  connections: nethwConnectionStat[];\r\n  createtime: number;\r\n  cwd: string;\r\n  exe: string;\r\n  gids: number[];\r\n  iocounters: processIOCountersStat;\r\n  isrunning: boolean;\r\n  meminfo: memoryInfoStat;\r\n  memmaps: any[];\r\n  mempercent: number;\r\n  name: string;\r\n  netiocounters: nethwIOCounterStat[];\r\n  nice: number;\r\n  numctxswitches: processNmCtxSwitchesStat;\r\n  numfds: number;\r\n  numthreads: number;\r\n  pagefaults: processPageFaultsStat;\r\n  parent: number;\r\n  ppid: number;\r\n  rlimit: processRLimitStat[];\r\n  status: string;\r\n  tgid: number;\r\n  cputimes: cpuTimeStat;\r\n  uids: number[];\r\n  username: string;\r\n}\r\n\r\nexport interface nethwConnectionStat {\r\n  fd: number;\r\n  family: number;\r\n  type: number;\r\n  localaddr: netAddr;\r\n  remoteaddr: netAddr;\r\n  status: string;\r\n  uids: number[];\r\n  pid: number;\r\n}\r\n\r\nexport interface netAddr {\r\n  ip: string;\r\n  port: number;\r\n}\r\n\r\nexport interface processIOCountersStat {\r\n  readCount: number;\r\n  writeCount: number;\r\n  readBytes: number;\r\n  writeBytes: number;\r\n}\r\n\r\nexport interface memoryInfoStat {\r\n  rss: number;\r\n  vms: number;\r\n  hwm: number;\r\n  data: number;\r\n  stack: number;\r\n  locked: number;\r\n  swap: number;\r\n}\r\n\r\nexport interface nethwIOCounterStat {\r\n  name: string;\r\n  bytesSent: number;\r\n  bytesRecv: number;\r\n  packetsSent: number;\r\n  packetsRecv: number;\r\n  errin: number;\r\n  errout: number;\r\n  dropin: number;\r\n  dropout: number;\r\n  fifoin: number;\r\n  fifoout: number;\r\n}\r\n\r\nexport interface processNmCtxSwitchesStat {\r\n  voluntary: number;\r\n  involuntary: number;\r\n}\r\n\r\nexport interface processPageFaultsStat {\r\n  minorFaults: number;\r\n  majorFaults: number;\r\n  childMinorFaults: number;\r\n  childMajorFaults: number;\r\n}\r\n\r\nexport interface processRLimitStat {\r\n  resource: number;\r\n  soft: number;\r\n  hard: number;\r\n  used: number;\r\n}\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid } from \"@mui/material\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { DrivesIcon, VersionIcon } from \"../../../../icons\";\r\nimport { ServerInfo, Usage } from \"../../Dashboard/types\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport api from \"../../../../common/api\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\ninterface ITestWrapper {\r\n  title: any;\r\n  children: any;\r\n  classes: any;\r\n  advancedVisible: boolean;\r\n  advancedContent?: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    titleBar: {\r\n      borderBottom: \"#E5E5E5 1px solid\",\r\n      padding: \"30px 25px\",\r\n      fontSize: 20,\r\n      color: \"#07193E\",\r\n      fontWeight: \"bold\",\r\n      borderRadius: \"10px 10px 0px 0px\",\r\n      paddingTop: 0,\r\n    },\r\n    divisorContainer: {\r\n      padding: 25,\r\n    },\r\n    serversData: {\r\n      color: \"#07193E\",\r\n      fontSize: 18,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& svg\": {\r\n        marginRight: 10,\r\n      },\r\n    },\r\n    minioVersionContainer: {\r\n      fontSize: 12,\r\n      color: \"#07193E\",\r\n      justifyContent: \"center\",\r\n      alignSelf: \"center\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n    },\r\n    versionIcon: {\r\n      color: \"#07193E\",\r\n      marginRight: 20,\r\n    },\r\n    loaderAlign: {\r\n      textAlign: \"center\",\r\n    },\r\n    advancedContainer: {\r\n      justifyContent: \"flex-end\",\r\n      display: \"flex\",\r\n    },\r\n    optionsContainer: {\r\n      padding: 0,\r\n      marginBottom: 25,\r\n    },\r\n    advancedConfiguration: {\r\n      color: \"#2781B0\",\r\n      fontSize: 10,\r\n      textDecoration: \"underline\",\r\n      border: \"none\",\r\n      backgroundColor: \"transparent\",\r\n      cursor: \"pointer\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n\r\n      \"&:hover\": {\r\n        color: \"#07193E\",\r\n      },\r\n\r\n      \"& svg\": {\r\n        width: 10,\r\n        alignSelf: \"center\",\r\n        marginLeft: 5,\r\n      },\r\n    },\r\n    advancedOpen: {\r\n      transform: \"rotateZ(-90deg) translateX(-4px) translateY(2px)\",\r\n    },\r\n    advancedClosed: {\r\n      transform: \"rotateZ(90deg)\",\r\n    },\r\n    advancedContent: {\r\n      backgroundColor: \"#F5F7F9\",\r\n      maxHeight: 0,\r\n      transitionDuration: \"0.3s\",\r\n      overflow: \"hidden\",\r\n      padding: \"0 15px\",\r\n      \"&.open\": {\r\n        maxHeight: 400,\r\n        padding: 15,\r\n      },\r\n    },\r\n  });\r\n\r\nconst TestWrapper = ({\r\n  title,\r\n  children,\r\n  classes,\r\n  advancedVisible,\r\n  advancedContent,\r\n}: ITestWrapper) => {\r\n  const [version, setVersion] = useState<string>(\"N/A\");\r\n  const [totalNodes, setTotalNodes] = useState<number>(0);\r\n  const [totalDrives, setTotalDrives] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [advancedOpen, setAdvancedOpen] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/admin/info?defaultOnly=true`)\r\n        .then((res: Usage) => {\r\n          const totalServers = res.servers?.length;\r\n          setTotalNodes(totalServers);\r\n\r\n          if (res.servers.length > 0) {\r\n            setVersion(res.servers[0].version);\r\n\r\n            const totalServers = res.servers.reduce(\r\n              (prevTotal: number, currentElement: ServerInfo) => {\r\n                return prevTotal + currentElement.drives.length;\r\n              },\r\n              0\r\n            );\r\n            setTotalDrives(totalServers);\r\n          }\r\n\r\n          setLoading(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [loading]);\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Grid item xs={12} className={classes.titleBar}>\r\n        {title}\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid item xs={12} className={classes.optionsContainer}>\r\n          <Grid container className={classes.divisorContainer}>\r\n            {!loading ? (\r\n              <Fragment>\r\n                <Grid item xs={12} md={4} className={classes.serversData}>\r\n                  <DrivesIcon /> <strong>{totalNodes}</strong>\r\n                  &nbsp;nodes,&nbsp;\r\n                  <strong>{totalDrives}</strong>&nbsp; drives\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={4}\r\n                  className={classes.minioVersionContainer}\r\n                >\r\n                  <span className={classes.versionIcon}>\r\n                    <VersionIcon />\r\n                  </span>{\" \"}\r\n                  MinIO VERSION&nbsp;<strong>{version}</strong>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} className={classes.advancedContainer}>\r\n                  {advancedVisible && (\r\n                    <button\r\n                      onClick={() => {\r\n                        setAdvancedOpen(!advancedOpen);\r\n                      }}\r\n                      className={classes.advancedConfiguration}\r\n                    >\r\n                      Advanced configurations{\" \"}\r\n                      <span\r\n                        className={\r\n                          advancedOpen\r\n                            ? classes.advancedOpen\r\n                            : classes.advancedClosed\r\n                        }\r\n                      >\r\n                        <ArrowForwardIosIcon />\r\n                      </span>\r\n                    </button>\r\n                  )}\r\n                </Grid>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <Grid item xs={12} className={classes.loaderAlign}>\r\n                  <Loader style={{ width: 25, height: 25 }} />\r\n                </Grid>\r\n              </Fragment>\r\n            )}\r\n          </Grid>\r\n          {advancedContent && (\r\n            <Grid\r\n              xs={12}\r\n              className={`${classes.advancedContent} ${\r\n                advancedOpen ? \"open\" : \"\"\r\n              }`}\r\n            >\r\n              {advancedContent}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        {children}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(TestWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  ICloseEvent,\r\n  IMessageEvent,\r\n  w3cwebsocket as W3CWebSocket,\r\n} from \"websocket\";\r\nimport { AppState, useAppDispatch } from \"../../../store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  DiagStatError,\r\n  DiagStatInProgress,\r\n  DiagStatSuccess,\r\n  HealthInfoMessage,\r\n  ReportMessage,\r\n} from \"./types\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  WSCloseAbnormalClosure,\r\n  WSCloseInternalServerErr,\r\n  WSClosePolicyViolation,\r\n  wsProtocol,\r\n} from \"../../../utils/wsUtils\";\r\nimport {\r\n  actionsTray,\r\n  containerForHeader,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\r\n\r\nimport TestWrapper from \"../Common/TestWrapper/TestWrapper\";\r\nimport PageLayout from \"../Common/Layout/PageLayout\";\r\nimport HelpBox from \"../../../common/HelpBox\";\r\nimport WarnIcon from \"../../../icons/WarnIcon\";\r\nimport Loader from \"../Common/Loader/Loader\";\r\nimport { setServerDiagStat } from \"../../../systemSlice\";\r\nimport {\r\n  healthInfoMessageReceived,\r\n  healthInfoResetMessage,\r\n} from \"./healthInfoSlice\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    loading: {\r\n      paddingTop: 8,\r\n      paddingLeft: 40,\r\n    },\r\n    buttons: {\r\n      justifyContent: \"flex-start\",\r\n      gap: 20,\r\n    },\r\n    localMessage: {\r\n      fontSize: 24,\r\n      color: \"#07193E\",\r\n      fontWeight: \"bold\",\r\n      textAlign: \"center\",\r\n      marginBottom: 10,\r\n    },\r\n    progressResult: {\r\n      textAlign: \"center\",\r\n      marginBottom: 25,\r\n    },\r\n    startDiagnostic: {\r\n      textAlign: \"right\",\r\n      margin: 25,\r\n      marginBottom: 0,\r\n    },\r\n    startDiagnosticCenter: {\r\n      textAlign: \"center\",\r\n      marginTop: 0,\r\n    },\r\n    ...actionsTray,\r\n    ...containerForHeader(theme.spacing(4)),\r\n  });\r\n\r\ninterface IHealthInfo {\r\n  classes: any;\r\n  namespace: string;\r\n  tenant: string;\r\n}\r\n\r\nconst HealthInfo = ({ classes }: IHealthInfo) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const message = useSelector((state: AppState) => state.healthInfo.message);\r\n\r\n  const serverDiagnosticStatus = useSelector(\r\n    (state: AppState) => state.system.serverDiagnosticStatus\r\n  );\r\n  const [startDiagnostic, setStartDiagnostic] = useState(false);\r\n  const [downloadDisabled, setDownloadDisabled] = useState(true);\r\n  const [localMessage, setMessage] = useState<string>(\"\");\r\n  const [buttonStartText, setButtonStartText] =\r\n    useState<string>(\"Start Diagnostic\");\r\n  const [title, setTitle] = useState<string>(\"New Diagnostic\");\r\n  const [diagFileContent, setDiagFileContent] = useState<string>(\"\");\r\n\r\n  const isDiagnosticComplete =\r\n    serverDiagnosticStatus === DiagStatSuccess ||\r\n    serverDiagnosticStatus === DiagStatError;\r\n\r\n  const download = () => {\r\n    let element = document.createElement(\"a\");\r\n    element.setAttribute(\r\n      \"href\",\r\n      `data:application/gzip;base64,${diagFileContent}`\r\n    );\r\n    element.setAttribute(\"download\", \"diagnostic.json.gz\");\r\n\r\n    element.style.display = \"none\";\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (serverDiagnosticStatus === DiagStatInProgress) {\r\n      setTitle(\"Diagnostic in progress...\");\r\n      setMessage(\r\n        \"Diagnostic started. Please do not refresh page during diagnosis.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (serverDiagnosticStatus === DiagStatSuccess) {\r\n      setTitle(\"Diagnostic complete\");\r\n      setMessage(\"Diagnostic file is ready to be downloaded.\");\r\n      setButtonStartText(\"Start New Diagnostic\");\r\n      return;\r\n    }\r\n\r\n    if (serverDiagnosticStatus === DiagStatError) {\r\n      setTitle(\"Error\");\r\n      setMessage(\"An error occurred while getting the Diagnostic file.\");\r\n      setButtonStartText(\"Retry Diagnostic\");\r\n      return;\r\n    }\r\n  }, [serverDiagnosticStatus, startDiagnostic]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      serverDiagnosticStatus === DiagStatSuccess &&\r\n      message !== ({} as HealthInfoMessage)\r\n    ) {\r\n      // Allow download of diagnostics file only when\r\n      // it succeded fetching all the results and info is not empty.\r\n      setDownloadDisabled(false);\r\n    }\r\n    if (serverDiagnosticStatus === DiagStatInProgress) {\r\n      // Disable Start Diagnotic and Disable Download buttons\r\n      // if a Diagnosis is in progress.\r\n      setDownloadDisabled(true);\r\n    }\r\n    setStartDiagnostic(false);\r\n  }, [serverDiagnosticStatus, message]);\r\n\r\n  useEffect(() => {\r\n    if (startDiagnostic) {\r\n      dispatch(healthInfoResetMessage());\r\n      setDiagFileContent(\"\");\r\n      const url = new URL(window.location.toString());\r\n      const isDev = process.env.NODE_ENV === \"development\";\r\n      const port = isDev ? \"9090\" : url.port;\r\n\r\n      const wsProt = wsProtocol(url.protocol);\r\n\r\n      // check if we are using base path, if not this always is `/`\r\n      const baseLocation = new URL(document.baseURI);\r\n      const baseUrl = baseLocation.pathname;\r\n\r\n      const c = new W3CWebSocket(\r\n        `${wsProt}://${url.hostname}:${port}${baseUrl}ws/health-info?deadline=1h`\r\n      );\r\n\r\n      let interval: any | null = null;\r\n      if (c !== null) {\r\n        c.onopen = () => {\r\n          console.log(\"WebSocket Client Connected\");\r\n          c.send(\"ok\");\r\n          interval = setInterval(() => {\r\n            c.send(\"ok\");\r\n          }, 10 * 1000);\r\n          setMessage(\r\n            \"Diagnostic started. Please do not refresh page during diagnosis.\"\r\n          );\r\n          dispatch(setServerDiagStat(DiagStatInProgress));\r\n        };\r\n        c.onmessage = (message: IMessageEvent) => {\r\n          let m: ReportMessage = JSON.parse(message.data.toString());\r\n          if (m.serverHealthInfo) {\r\n            m.serverHealthInfo.timestamp = new Date(\r\n              m.serverHealthInfo.timestamp.toString()\r\n            );\r\n            dispatch(healthInfoMessageReceived(m.serverHealthInfo));\r\n          }\r\n          if (m.encoded !== \"\") {\r\n            setDiagFileContent(m.encoded);\r\n          }\r\n        };\r\n        c.onerror = (error: Error) => {\r\n          console.log(\"error closing websocket:\", error.message);\r\n          c.close(1000);\r\n          clearInterval(interval);\r\n          dispatch(setServerDiagStat(DiagStatError));\r\n        };\r\n        c.onclose = (event: ICloseEvent) => {\r\n          clearInterval(interval);\r\n          if (\r\n            event.code === WSCloseInternalServerErr ||\r\n            event.code === WSClosePolicyViolation ||\r\n            event.code === WSCloseAbnormalClosure\r\n          ) {\r\n            // handle close with error\r\n            console.log(\"connection closed by server with code:\", event.code);\r\n            setMessage(\"An error occurred while getting the Diagnostic file.\");\r\n            dispatch(setServerDiagStat(DiagStatError));\r\n          } else {\r\n            console.log(\"connection closed by server\");\r\n\r\n            setMessage(\"Diagnostic file is ready to be downloaded.\");\r\n            dispatch(setServerDiagStat(DiagStatSuccess));\r\n          }\r\n        };\r\n      }\r\n    } else {\r\n      // reset start status\r\n      setStartDiagnostic(false);\r\n    }\r\n  }, [startDiagnostic, dispatch]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader label=\"Health\" />\r\n      <PageLayout>\r\n        <Grid item xs={12} className={classes.boxy}>\r\n          <TestWrapper title={title} advancedVisible={false}>\r\n            <Grid container className={classes.buttons}>\r\n              <Grid\r\n                key=\"start-download\"\r\n                item\r\n                xs={12}\r\n                className={classes.progressResult}\r\n              >\r\n                <div className={classes.localMessage}>{localMessage}</div>\r\n                {serverDiagnosticStatus === DiagStatInProgress ? (\r\n                  <div className={classes.loading}>\r\n                    <Loader style={{ width: 25, height: 25 }} />\r\n                  </div>\r\n                ) : (\r\n                  <Fragment>\r\n                    {serverDiagnosticStatus !== DiagStatError &&\r\n                      !downloadDisabled && (\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => download()}\r\n                          disabled={downloadDisabled}\r\n                        >\r\n                          Download\r\n                        </Button>\r\n                      )}\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      className={clsx(classes.startDiagnostic, {\r\n                        [classes.startDiagnosticCenter]: !isDiagnosticComplete,\r\n                      })}\r\n                    >\r\n                      <Button\r\n                        id=\"start-new-diagnostic\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={startDiagnostic}\r\n                        onClick={() => setStartDiagnostic(true)}\r\n                      >\r\n                        {buttonStartText}\r\n                      </Button>\r\n                    </Grid>\r\n                  </Fragment>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </TestWrapper>\r\n        </Grid>\r\n        {!startDiagnostic && (\r\n          <Fragment>\r\n            <br />\r\n            <HelpBox\r\n              title={\r\n                \"During the health diagnostics run, all production traffic will be suspended.\"\r\n              }\r\n              iconComponent={<WarnIcon />}\r\n              help={<Fragment />}\r\n            />\r\n          </Fragment>\r\n        )}\r\n      </PageLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(HealthInfo);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n// Close codes for websockets defined in RFC 6455\r\nexport const WSCloseNormalClosure = 1000;\r\nexport const WSCloseCloseGoingAway = 1001;\r\nexport const WSCloseAbnormalClosure = 1006;\r\nexport const WSClosePolicyViolation = 1008;\r\nexport const WSCloseInternalServerErr = 1011;\r\n\r\nexport const wsProtocol = (protocol: string): string => {\r\n  let wsProtocol = \"ws\";\r\n  if (protocol === \"https:\") {\r\n    wsProtocol = \"wss\";\r\n  }\r\n  return wsProtocol;\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","DiagStatError","DiagStatSuccess","DiagStatInProgress","titleBar","borderBottom","padding","color","divisorContainer","serversData","minioVersionContainer","justifyContent","alignSelf","versionIcon","loaderAlign","textAlign","advancedContainer","optionsContainer","advancedConfiguration","textDecoration","cursor","marginLeft","advancedOpen","transform","advancedClosed","advancedContent","maxHeight","transitionDuration","overflow","children","advancedVisible","useState","version","setVersion","totalNodes","setTotalNodes","totalDrives","setTotalDrives","loading","setLoading","setAdvancedOpen","useEffect","api","then","res","totalServers","servers","length","reduce","prevTotal","currentElement","drives","catch","err","Grid","Fragment","Loader","style","md","onClick","ArrowForwardIos","buttons","gap","localMessage","progressResult","startDiagnostic","margin","startDiagnosticCenter","marginTop","actionsTray","containerForHeader","spacing","dispatch","useAppDispatch","message","useSelector","state","healthInfo","serverDiagnosticStatus","system","setStartDiagnostic","downloadDisabled","setDownloadDisabled","setMessage","buttonStartText","setButtonStartText","setTitle","diagFileContent","setDiagFileContent","isDiagnosticComplete","healthInfoResetMessage","url","URL","window","location","toString","port","wsProt","wsProtocol","protocol","baseUrl","document","baseURI","pathname","c","W3CWebSocket","hostname","interval","onopen","console","log","send","setInterval","setServerDiagStat","onmessage","m","JSON","parse","data","serverHealthInfo","timestamp","Date","healthInfoMessageReceived","encoded","onerror","error","close","clearInterval","onclose","event","code","WSCloseInternalServerErr","WSClosePolicyViolation","WSCloseAbnormalClosure","PageHeader","label","PageLayout","boxy","Button","type","variant","element","createElement","setAttribute","body","appendChild","click","removeChild","download","disabled","clsx","id","HelpBox","WarnIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","naiveFallback","self","Error","module","this","globalThis","Object","defineProperty","prototype","get","configurable","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","uri","protocols","forEach","prop"],"sourceRoot":""}
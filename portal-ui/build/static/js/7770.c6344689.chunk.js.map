{"version":3,"file":"static/js/7770.c6344689.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/KeyPairEdit.tsx","screens/Console/Tenants/TenantDetails/LoggingDetails.tsx","screens/Console/Tenants/TenantDetails/LoggingDBDetails.tsx","screens/Console/Tenants/TenantDetails/TenantAuditLogsScreen.tsx","screens/Console/Tenants/securityContextSelector.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { IKeyValue } from \"../ListTenants/types\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../utils/validationFunctions\";\r\nimport { clearValidationError } from \"../utils\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\ninterface IKeyPairEditProps {\r\n  classes: any;\r\n  paramName: string;\r\n  error: any;\r\n  setError: (e: any) => void;\r\n  newValues: IKeyValue[];\r\n  setNewValues: (vals: IKeyValue[]) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    bottomContainer: {\r\n      display: \"flex\",\r\n      flexGrow: 1,\r\n      alignItems: \"center\",\r\n      \"& div\": {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    shortened: {\r\n      gridTemplateColumns: \"auto auto 20px 20px\",\r\n      display: \"grid\",\r\n      gridGap: 20,\r\n      paddingRight: 20,\r\n    },\r\n    ...modalBasic,\r\n  });\r\n\r\nconst KeyPairEdit = ({\r\n  classes,\r\n  paramName,\r\n  newValues,\r\n  setNewValues,\r\n  error,\r\n  setError,\r\n}: IKeyPairEditProps) => {\r\n  const cleanValidation = (fieldName: string) => {\r\n    setError(clearValidationError(error, fieldName));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let keyPairValidation: IValidation[] = [];\r\n\r\n    for (var i = 0; i < newValues.length; i++) {\r\n      keyPairValidation.push({\r\n        fieldKey: `key-${i.toString()}`,\r\n        required: false,\r\n        value: newValues[i].key,\r\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\r\n        customPatternMessage: \"Invalid key\",\r\n      });\r\n      keyPairValidation.push({\r\n        fieldKey: `val-${i.toString()}`,\r\n        required: false,\r\n        value: newValues[i].value,\r\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\r\n        customPatternMessage: \"Invalid value\",\r\n      });\r\n    }\r\n\r\n    const commonVal = commonFormValidation(keyPairValidation);\r\n    setError(commonVal);\r\n  }, [newValues, setError]);\r\n\r\n  let keyValueInputs = newValues.map((_, index) => {\r\n    return (\r\n      <Fragment key={`keyvalue-${index.toString()}`}>\r\n        <Grid paddingBottom={1}>\r\n          <div className={classes.shortened}>\r\n            <InputBoxWrapper\r\n              id={`key-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\r\n              label={\"\"}\r\n              placeholder={\"Key\"}\r\n              name={`key-${index.toString()}`}\r\n              value={newValues[index].key}\r\n              onChange={(e) => {\r\n                let tempLabels = [...newValues];\r\n                tempLabels[index].key = e.target.value;\r\n                setNewValues(tempLabels);\r\n                cleanValidation(`key-${index.toString()}`);\r\n              }}\r\n              index={index}\r\n              key={`csv-key-${index.toString()}`}\r\n              error={error[`key-${index.toString()}`] || \"\"}\r\n            />\r\n            <InputBoxWrapper\r\n              id={`val-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\r\n              label={\"\"}\r\n              placeholder={\"Value\"}\r\n              name={`val-${index.toString()}`}\r\n              value={newValues[index].value}\r\n              onChange={(e) => {\r\n                let tempLabels = [...newValues];\r\n                tempLabels[index].value = e.target.value;\r\n                setNewValues(tempLabels);\r\n                cleanValidation(`val-${index.toString()}`);\r\n              }}\r\n              index={index}\r\n              key={`csv-val-${index.toString()}`}\r\n              error={error[`val-${index.toString()}`] || \"\"}\r\n            />\r\n            <Tooltip title={`Add ${paramName}`} aria-label=\"addlabel\">\r\n              <IconButton\r\n                id={`add-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\r\n                size={\"small\"}\r\n                onClick={() => {\r\n                  let tempLabels = [...newValues];\r\n                  tempLabels.push({ key: \"\", value: \"\" });\r\n                  setNewValues(tempLabels);\r\n                }}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Remove\" aria-label=\"removeLabel\">\r\n              <IconButton\r\n                id={`remove-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\r\n                size={\"small\"}\r\n                style={{ marginLeft: 16 }}\r\n                onClick={() => {\r\n                  if (newValues.length === 1) {\r\n                    setNewValues([{ key: \"\", value: \"\" }]);\r\n                  }\r\n                  if (newValues.length > 1) {\r\n                    let tempLabels = [...newValues];\r\n                    tempLabels.splice(index, 1);\r\n                    setNewValues(tempLabels);\r\n                  }\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  });\r\n\r\n  return <Fragment>{keyValueInputs}</Fragment>;\r\n};\r\n\r\nexport default withStyles(styles)(KeyPairEdit);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n//import {  ISecurityContext} from \"../types\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  containerForHeader,\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  spacingUtils,\r\n  tenantDetailsStyles,\r\n  wizardCommon,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport api from \"../../../../common/api\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { Button } from \"@mui/material\";\r\nimport {\r\n  setErrorSnackMessage,\r\n  setSnackBarMessage,\r\n} from \"../../../../systemSlice\";\r\nimport { IKeyValue, ITenantAuditLogs } from \"../ListTenants/types\";\r\nimport KeyPairEdit from \"./KeyPairEdit\";\r\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\r\nimport SecurityContextSelector from \"../securityContextSelector\";\r\nimport { clearValidationError, imagePattern, numericPattern } from \"../utils\";\r\nimport {\r\n  setImage,\r\n  setDiskCapacityGB,\r\n  setServiceAccountName,\r\n  setCPURequest,\r\n  setMemRequest,\r\n  setRunAsUser,\r\n  setFSGroup,\r\n  setRunAsGroup,\r\n  setRunAsNonRoot,\r\n  setRefreshLoggingInfo,\r\n} from \"../TenantDetails/tenantAuditLogSlice\";\r\nimport { setFSGroupChangePolicy } from \"../tenantSecurityContextSlice\";\r\nimport { fsGroupChangePolicyType } from \"../types\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...tenantDetailsStyles,\r\n    ...spacingUtils,\r\n    bold: { fontWeight: \"bold\" },\r\n    italic: { fontStyle: \"italic\" },\r\n    fileItem: {\r\n      marginRight: 10,\r\n      display: \"flex\",\r\n      \"& div label\": {\r\n        minWidth: 50,\r\n      },\r\n\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n      },\r\n    },\r\n    ...containerForHeader(theme.spacing(4)),\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst TenantAuditLogging = ({\r\n  classes,\r\n  labels,\r\n  annotations,\r\n  nodeSelector,\r\n}: ITenantAuditLogs) => {\r\n  const dispatch = useAppDispatch();\r\n  const { tenantName, tenantNamespace } = useParams();\r\n  const auditLoggingEnabled = useSelector(\r\n    (state: AppState) => state.editTenantLogging.auditLoggingEnabled\r\n  );\r\n  const image = useSelector((state: AppState) => state.editTenantLogging.image);\r\n  const diskCapacityGB = useSelector(\r\n    (state: AppState) => state.editTenantLogging.diskCapacityGB\r\n  );\r\n  const cpuRequest = useSelector(\r\n    (state: AppState) => state.editTenantLogging.cpuRequest\r\n  );\r\n  const memRequest = useSelector(\r\n    (state: AppState) => state.editTenantLogging.memRequest\r\n  );\r\n  const serviceAccountName = useSelector(\r\n    (state: AppState) => state.editTenantLogging.serviceAccountName\r\n  );\r\n  const runAsGroup = useSelector(\r\n    (state: AppState) => state.editTenantLogging.securityContext.runAsGroup\r\n  );\r\n  const runAsUser = useSelector(\r\n    (state: AppState) => state.editTenantLogging.securityContext.runAsUser\r\n  );\r\n  const fsGroup = useSelector(\r\n    (state: AppState) => state.editTenantLogging.securityContext.fsGroup\r\n  );\r\n  const runAsNonRoot = useSelector(\r\n    (state: AppState) => state.editTenantLogging.securityContext.runAsNonRoot\r\n  );\r\n  const fsGroupChangePolicy = useSelector(\r\n    (state: AppState) => state.editTenantSecurityContext.fsGroupChangePolicy\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const [logLabels, setLabels] = useState<IKeyValue[]>(\r\n    labels != null && labels.length > 0 ? labels : [{ key: \"\", value: \"\" }]\r\n  );\r\n  const [logAnnotations, setAnnotations] = useState<IKeyValue[]>(\r\n    annotations != null && annotations.length > 0\r\n      ? annotations\r\n      : [{ key: \"\", value: \"\" }]\r\n  );\r\n  const [logNodeSelector, setNodeSelector] = useState<IKeyValue[]>(\r\n    nodeSelector != null && nodeSelector.length > 0\r\n      ? nodeSelector\r\n      : [{ key: \"\", value: \"\" }]\r\n  );\r\n\r\n  const [labelsError, setLabelsError] = useState<any>({});\r\n  const [annotationsError, setAnnotationsError] = useState<any>({});\r\n  const [nodeSelectorError, setNodeSelectorError] = useState<any>({});\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  const trim = (x: IKeyValue[]): IKeyValue[] => {\r\n    let retval: IKeyValue[] = [];\r\n    for (let i = 0; i < x.length; i++) {\r\n      if (x[i].key !== \"\") {\r\n        retval.push(x[i]);\r\n      }\r\n    }\r\n    return retval;\r\n  };\r\n\r\n  const checkValid = (): boolean => {\r\n    if (\r\n      Object.keys(validationErrors).length !== 0 ||\r\n      Object.keys(labelsError).length !== 0 ||\r\n      Object.keys(annotationsError).length !== 0 ||\r\n      Object.keys(nodeSelectorError).length !== 0\r\n    ) {\r\n      let err: ErrorResponseHandler = {\r\n        errorMessage: \"Invalid entry\",\r\n        detailedError: \"\",\r\n      };\r\n      dispatch(setErrorSnackMessage(err));\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const submitLoggingInfo = () => {\r\n    if (checkValid()) {\r\n      setLoading(true);\r\n      const securityContext = {\r\n        runAsGroup: runAsGroup != null ? runAsGroup : \"\",\r\n        runAsUser: runAsUser != null ? runAsUser : \"\",\r\n        fsGroup: fsGroup != null ? fsGroup : \"\",\r\n        runAsNonRoot: runAsNonRoot != null ? runAsNonRoot : true,\r\n      };\r\n\r\n      api\r\n        .invoke(\r\n          \"PUT\",\r\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/log`,\r\n          {\r\n            labels: trim(logLabels),\r\n            annotations: trim(logAnnotations),\r\n            nodeSelector: trim(logNodeSelector),\r\n            image: image,\r\n            diskCapacityGB: diskCapacityGB.toString(),\r\n            serviceAccountName: serviceAccountName,\r\n            logCPURequest: cpuRequest,\r\n            logMemRequest: memRequest,\r\n            securityContext: securityContext,\r\n          }\r\n        )\r\n        .then(() => {\r\n          setRefreshLoggingInfo(true);\r\n          dispatch(setSnackBarMessage(`Audit Log configuration updated.`));\r\n          setLoading(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setErrorSnackMessage(err);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {auditLoggingEnabled && (\r\n        <Fragment>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`image`}\r\n              label={\"Image\"}\r\n              placeholder={\"minio/operator:v4.4.22\"}\r\n              name={`image`}\r\n              value={image}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setImage(event.target.value));\r\n                }\r\n                cleanValidation(`image`);\r\n              }}\r\n              key={`image`}\r\n              pattern={imagePattern}\r\n              error={validationErrors[`image`] || \"\"}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`diskCapacityGB`}\r\n              label={\"Disk Capacity\"}\r\n              placeholder={\"Disk Capacity\"}\r\n              name={`diskCapacityGB`}\r\n              value={!isNaN(diskCapacityGB) ? diskCapacityGB.toString() : \"0\"}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setDiskCapacityGB(parseInt(event.target.value)));\r\n                }\r\n                cleanValidation(`diskCapacityGB`);\r\n              }}\r\n              key={`diskCapacityGB`}\r\n              pattern={numericPattern}\r\n              error={validationErrors[`diskCapacityGB`] || \"\"}\r\n              overlayObject={\r\n                <InputUnitMenu\r\n                  id={\"size-unit\"}\r\n                  onUnitChange={() => {}}\r\n                  unitSelected={\"Gi\"}\r\n                  unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\r\n                  disabled={true}\r\n                />\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`cpuRequest`}\r\n              label={\"CPU Request\"}\r\n              placeholder={\"CPU Request\"}\r\n              name={`cpuRequest`}\r\n              value={cpuRequest}\r\n              pattern={numericPattern}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setCPURequest(event.target.value));\r\n                }\r\n                cleanValidation(`cpuRequest`);\r\n              }}\r\n              key={`cpuRequest`}\r\n              error={validationErrors[`cpuRequest`] || \"\"}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`memRequest`}\r\n              label={\"Memory Request\"}\r\n              placeholder={\"Memory request\"}\r\n              name={`memRequest`}\r\n              value={memRequest}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setMemRequest(event.target.value));\r\n                }\r\n                cleanValidation(`memRequest`);\r\n              }}\r\n              pattern={numericPattern}\r\n              key={`memRequest`}\r\n              error={validationErrors[`memRequest`] || \"\"}\r\n              overlayObject={\r\n                <InputUnitMenu\r\n                  id={\"size-unit\"}\r\n                  onUnitChange={() => {}}\r\n                  unitSelected={\"Gi\"}\r\n                  unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\r\n                  disabled={true}\r\n                />\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`serviceAccountName`}\r\n              label={\"Service Account\"}\r\n              placeholder={\"Service Account Name\"}\r\n              name={`serviceAccountName`}\r\n              value={serviceAccountName}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setServiceAccountName(event.target.value));\r\n                }\r\n                cleanValidation(`serviceAccountName`);\r\n              }}\r\n              key={`serviceAccountName`}\r\n              pattern={\"^[a-zA-Z0-9-.]{1,253}$\"}\r\n              error={validationErrors[`serviceAccountName`] || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <SecurityContextSelector\r\n              classes={classes}\r\n              runAsGroup={runAsGroup}\r\n              runAsUser={runAsUser}\r\n              fsGroup={fsGroup}\r\n              runAsNonRoot={runAsNonRoot}\r\n              fsGroupChangePolicy={fsGroupChangePolicy}\r\n              setFSGroup={(value: string) => dispatch(setFSGroup(value))}\r\n              setRunAsUser={(value: string) => dispatch(setRunAsUser(value))}\r\n              setRunAsGroup={(value: string) => dispatch(setRunAsGroup(value))}\r\n              setRunAsNonRoot={(value: boolean) =>\r\n                dispatch(setRunAsNonRoot(value))\r\n              }\r\n              setFSGroupChangePolicy={(value: fsGroupChangePolicyType) =>\r\n                dispatch(setFSGroupChangePolicy(value))\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <span className={classes.inputLabel}>Labels</span>\r\n            <KeyPairEdit\r\n              newValues={logLabels}\r\n              setNewValues={setLabels}\r\n              paramName={\"Labels\"}\r\n              error={labelsError}\r\n              setError={setLabelsError}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <span className={classes.inputLabel}>Annotations</span>\r\n            <KeyPairEdit\r\n              newValues={logAnnotations}\r\n              setNewValues={setAnnotations}\r\n              paramName={\"Annotations\"}\r\n              error={annotationsError}\r\n              setError={setAnnotationsError}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <span className={classes.inputLabel}>Node Selector</span>\r\n            <KeyPairEdit\r\n              newValues={logNodeSelector}\r\n              setNewValues={setNodeSelector}\r\n              paramName={\"Node Selector\"}\r\n              error={nodeSelectorError}\r\n              setError={setNodeSelectorError}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} textAlign={\"right\"}>\r\n            <Button\r\n              type=\"submit\"\r\n              id={\"submit_button\"}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loading || !checkValid()}\r\n              onClick={() => submitLoggingInfo()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(TenantAuditLogging);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  containerForHeader,\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  spacingUtils,\r\n  tenantDetailsStyles,\r\n  wizardCommon,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport api from \"../../../../common/api\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { Button } from \"@mui/material\";\r\nimport {\r\n  setErrorSnackMessage,\r\n  setSnackBarMessage,\r\n} from \"../../../../systemSlice\";\r\nimport { IKeyValue, ITenantAuditLogs } from \"../ListTenants/types\";\r\nimport KeyPairEdit from \"./KeyPairEdit\";\r\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\r\nimport {\r\n  setDBImage,\r\n  setDBInitImage,\r\n  setDBCPURequest,\r\n  setDBMemRequest,\r\n  setDBRunAsUser,\r\n  setDBFSGroup,\r\n  setDBFSGroupChangePolicy,\r\n  setDBRunAsGroup,\r\n  setDBRunAsNonRoot,\r\n  setRefreshLoggingInfo,\r\n} from \"./tenantAuditLogSlice\";\r\n\r\nimport SecurityContextSelector from \"../securityContextSelector\";\r\n\r\nimport { clearValidationError, imagePattern, numericPattern } from \"../utils\";\r\nimport { fsGroupChangePolicyType } from \"../types\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...tenantDetailsStyles,\r\n    ...spacingUtils,\r\n    bold: { fontWeight: \"bold\" },\r\n    italic: { fontStyle: \"italic\" },\r\n    fileItem: {\r\n      marginRight: 10,\r\n      display: \"flex\",\r\n      \"& div label\": {\r\n        minWidth: 50,\r\n      },\r\n\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n      },\r\n    },\r\n    ...containerForHeader(theme.spacing(4)),\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst LoggingDBDetails = ({\r\n  classes,\r\n  labels,\r\n  annotations,\r\n  nodeSelector,\r\n}: ITenantAuditLogs) => {\r\n  const dispatch = useAppDispatch();\r\n  const { tenantName, tenantNamespace } = useParams();\r\n  const dbImage = useSelector(\r\n    (state: AppState) => state.editTenantLogging.dbImage\r\n  );\r\n  const dbInitImage = useSelector(\r\n    (state: AppState) => state.editTenantLogging.dbInitImage\r\n  );\r\n  const dbCpuRequest = useSelector(\r\n    (state: AppState) => state.editTenantLogging.dbCPURequest\r\n  );\r\n  const dbMemRequest = useSelector(\r\n    (state: AppState) => state.editTenantLogging.dbMemRequest\r\n  );\r\n  const dbServiceAccountName = useSelector(\r\n    (state: AppState) => state.editTenantLogging.dbServiceAccountName\r\n  );\r\n\r\n  const dbRunAsGroup = useSelector(\r\n    (state: AppState) => state.editTenantLogging.dbSecurityContext.runAsGroup\r\n  );\r\n  const dbRunAsUser = useSelector(\r\n    (state: AppState) => state.editTenantLogging.dbSecurityContext.runAsUser\r\n  );\r\n  const dbFSGroup = useSelector(\r\n    (state: AppState) => state.editTenantLogging.dbSecurityContext.fsGroup\r\n  );\r\n  const dbFSGroupChangePolicy = useSelector(\r\n    (state: AppState) =>\r\n      state.editTenantLogging.dbSecurityContext.fsGroupChangePolicy\r\n  );\r\n  const dbRunAsNonRoot = useSelector(\r\n    (state: AppState) => state.editTenantLogging.dbSecurityContext.runAsNonRoot\r\n  );\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  const [dbLabels, setDBLabels] = useState<IKeyValue[]>(\r\n    labels != null && labels.length > 0 ? labels : [{ key: \"\", value: \"\" }]\r\n  );\r\n  const [dbAnnotations, setDBAnnotations] = useState<IKeyValue[]>(\r\n    annotations != null && annotations.length > 0\r\n      ? annotations\r\n      : [{ key: \"\", value: \"\" }]\r\n  );\r\n  const [dbNodeSelector, setDBNodeSelector] = useState<IKeyValue[]>(\r\n    nodeSelector != null && nodeSelector.length > 0\r\n      ? nodeSelector\r\n      : [{ key: \"\", value: \"\" }]\r\n  );\r\n\r\n  const [dbLabelsError, setDBLabelsError] = useState<any>({});\r\n  const [dbAnnotationsError, setDBAnnotationsError] = useState<any>({});\r\n  const [dbNodeSelectorError, setDBNodeSelectorError] = useState<any>({});\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  const trim = (x: IKeyValue[]): IKeyValue[] => {\r\n    let retval: IKeyValue[] = [];\r\n    for (let i = 0; i < x.length; i++) {\r\n      if (x[i].key !== \"\") {\r\n        retval.push(x[i]);\r\n      }\r\n    }\r\n    return retval;\r\n  };\r\n\r\n  const checkValid = (): boolean => {\r\n    if (\r\n      Object.keys(validationErrors).length !== 0 ||\r\n      Object.keys(dbNodeSelectorError).length !== 0 ||\r\n      Object.keys(dbAnnotationsError).length !== 0 ||\r\n      Object.keys(dbLabelsError).length !== 0\r\n    ) {\r\n      let err: ErrorResponseHandler = {\r\n        errorMessage: \"Invalid entry\",\r\n        detailedError: \"\",\r\n      };\r\n      dispatch(setErrorSnackMessage(err));\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const submitLoggingInfo = () => {\r\n    if (checkValid()) {\r\n      const dbSecurityContext = {\r\n        runAsGroup: dbRunAsGroup != null ? dbRunAsGroup : \"\",\r\n        runAsUser: dbRunAsUser != null ? dbRunAsUser : \"\",\r\n        fsGroup: dbFSGroup != null ? dbFSGroup : \"\",\r\n        runAsNonRoot: dbRunAsNonRoot != null ? dbRunAsNonRoot : true,\r\n        fsGroupChangePolicy:\r\n          dbFSGroupChangePolicy != null ? dbFSGroupChangePolicy : \"Always\",\r\n      };\r\n      api\r\n        .invoke(\r\n          \"PUT\",\r\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/log`,\r\n          {\r\n            dbLabels: trim(dbLabels),\r\n            dbAnnotations: trim(dbAnnotations),\r\n            dbNodeSelector: trim(dbNodeSelector),\r\n            dbImage: dbImage,\r\n            dbInitImage: dbInitImage,\r\n            dbServiceAccountName: dbServiceAccountName,\r\n            logDBCPURequest: dbCpuRequest,\r\n            logDBMemRequest: dbMemRequest,\r\n            dbSecurityContext: dbSecurityContext,\r\n          }\r\n        )\r\n        .then(() => {\r\n          setRefreshLoggingInfo(true);\r\n          dispatch(setSnackBarMessage(`Audit Log DB configuration updated.`));\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setErrorSnackMessage(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Fragment>\r\n        <Grid item xs={12} paddingBottom={2}>\r\n          <InputBoxWrapper\r\n            id={`dbImage`}\r\n            label={\"DB Postgres Image\"}\r\n            placeholder={\"library/postgres:13\"}\r\n            name={`dbImage`}\r\n            value={dbImage}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n              if (event.target.validity.valid) {\r\n                dispatch(setDBImage(event.target.value));\r\n              }\r\n              cleanValidation(`dbImage`);\r\n            }}\r\n            key={`dbImage`}\r\n            pattern={imagePattern}\r\n            error={validationErrors[`dbImage`] || \"\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} paddingBottom={2}>\r\n          <InputBoxWrapper\r\n            id={`dbInitImage`}\r\n            label={\"DB Init Image\"}\r\n            placeholder={\"library/busybox:1.33.1\"}\r\n            name={`dbInitImage`}\r\n            value={dbInitImage}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n              if (event.target.validity.valid) {\r\n                dispatch(setDBInitImage(event.target.value));\r\n              }\r\n              cleanValidation(`dbInitImage`);\r\n            }}\r\n            key={`dbInitImage`}\r\n            pattern={imagePattern}\r\n            error={validationErrors[`dbInitImage`] || \"\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} paddingBottom={2}>\r\n          <InputBoxWrapper\r\n            id={`dbCPURequest`}\r\n            label={\"DB CPU Request\"}\r\n            placeholder={\"DB CPU Request\"}\r\n            name={`dbCPURequest`}\r\n            value={dbCpuRequest}\r\n            pattern={numericPattern}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n              if (event.target.validity.valid) {\r\n                dispatch(setDBCPURequest(event.target.value));\r\n              }\r\n              cleanValidation(`dbCPURequest`);\r\n            }}\r\n            key={`dbCPURequest`}\r\n            error={validationErrors[`dbCPURequest`] || \"\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} paddingBottom={2}>\r\n          <InputBoxWrapper\r\n            id={`dbMemRequest`}\r\n            label={\"DB Memory Request\"}\r\n            placeholder={\"DB Memory request\"}\r\n            name={`dbMemRequest`}\r\n            value={dbMemRequest}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n              if (event.target.validity.valid) {\r\n                dispatch(setDBMemRequest(event.target.value));\r\n              }\r\n              cleanValidation(`dbMemRequest`);\r\n            }}\r\n            pattern={numericPattern}\r\n            key={`dbMemRequest`}\r\n            error={validationErrors[`dbMemRequest`] || \"\"}\r\n            overlayObject={\r\n              <InputUnitMenu\r\n                id={\"size-unit\"}\r\n                onUnitChange={() => {}}\r\n                unitSelected={\"Gi\"}\r\n                unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\r\n                disabled={true}\r\n              />\r\n            }\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <span className={classes.inputLabel}>DB Labels</span>\r\n          <KeyPairEdit\r\n            newValues={dbLabels}\r\n            setNewValues={setDBLabels}\r\n            paramName={\"dbLabels\"}\r\n            error={dbLabelsError}\r\n            setError={setDBLabelsError}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <span className={classes.inputLabel}>DB Annotations</span>\r\n          <KeyPairEdit\r\n            newValues={dbAnnotations}\r\n            setNewValues={setDBAnnotations}\r\n            paramName={\"dbAnnotations\"}\r\n            error={dbAnnotationsError}\r\n            setError={setDBAnnotationsError}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <span className={classes.inputLabel}>DB Node Selector</span>\r\n          <KeyPairEdit\r\n            newValues={dbNodeSelector}\r\n            setNewValues={setDBNodeSelector}\r\n            paramName={\"DB Node Selector\"}\r\n            error={dbNodeSelectorError}\r\n            setError={setDBNodeSelectorError}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <SecurityContextSelector\r\n            classes={classes}\r\n            runAsGroup={dbRunAsGroup}\r\n            runAsUser={dbRunAsUser}\r\n            fsGroup={dbFSGroup}\r\n            fsGroupChangePolicy={dbFSGroupChangePolicy}\r\n            runAsNonRoot={dbRunAsNonRoot}\r\n            setFSGroup={(value: string) => dispatch(setDBFSGroup(value))}\r\n            setRunAsUser={(value: string) => dispatch(setDBRunAsUser(value))}\r\n            setRunAsGroup={(value: string) => dispatch(setDBRunAsGroup(value))}\r\n            setRunAsNonRoot={(value: boolean) =>\r\n              dispatch(setDBRunAsNonRoot(value))\r\n            }\r\n            setFSGroupChangePolicy={(value: fsGroupChangePolicyType) =>\r\n              dispatch(setDBFSGroupChangePolicy(value))\r\n            }\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} textAlign={\"right\"}>\r\n          <Button\r\n            type=\"submit\"\r\n            id={\"submit_button\"}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={!checkValid()}\r\n            onClick={() => submitLoggingInfo()}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n      </Fragment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(LoggingDBDetails);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { containerForHeader } from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport { DialogContentText } from \"@mui/material\";\r\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\r\nimport api from \"../../../../common/api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport { ITenantLogsStruct } from \"../ListTenants/types\";\r\nimport { IKeyValue } from \"../ListTenants/types\";\r\n\r\nimport LoggingDetails from \"./LoggingDetails\";\r\nimport LoggingDBDetails from \"./LoggingDBDetails\";\r\nimport {\r\n  setAuditLoggingEnabled,\r\n  setDBImage,\r\n  setDBInitImage,\r\n  setDBServiceAccountName,\r\n  setDBCPURequest,\r\n  setDBMemRequest,\r\n  setDBRunAsUser,\r\n  setDBFSGroup,\r\n  setDBRunAsGroup,\r\n  setDBRunAsNonRoot,\r\n  setImage,\r\n  setDiskCapacityGB,\r\n  setServiceAccountName,\r\n  setCPURequest,\r\n  setMemRequest,\r\n  setRunAsUser,\r\n  setFSGroup,\r\n  setRunAsGroup,\r\n  setRunAsNonRoot,\r\n  resetAuditLogForm,\r\n} from \"../TenantDetails/tenantAuditLogSlice\";\r\n\r\ninterface ILoggingScreenProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    breadcrumLink: {\r\n      textDecoration: \"none\",\r\n      color: \"black\",\r\n    },\r\n    ...containerForHeader(theme.spacing(4)),\r\n  });\r\n\r\nconst LoggingScreen = ({ classes }: ILoggingScreenProps) => {\r\n  const { tenantNamespace, tenantName } = useParams();\r\n  const [curTab, setCurTab] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [toggleConfirmOpen, setToggleConfirmOpen] = useState<boolean>(false);\r\n  const [refreshLoggingInfo, setRefreshLoggingInfo] = useState<boolean>(true);\r\n  const [dbLabels, setDBLabels] = useState<IKeyValue[]>([\r\n    { key: \"\", value: \"\" },\r\n  ]);\r\n  const [dbAnnotations, setDBAnnotations] = useState<IKeyValue[]>([\r\n    { key: \"\", value: \"\" },\r\n  ]);\r\n  const [dbNodeSelector, setDBNodeSelector] = useState<IKeyValue[]>([\r\n    { key: \"\", value: \"\" },\r\n  ]);\r\n  const [labels, setLabels] = useState<IKeyValue[]>([{ key: \"\", value: \"\" }]);\r\n  const [annotations, setAnnotations] = useState<IKeyValue[]>([\r\n    { key: \"\", value: \"\" },\r\n  ]);\r\n  const [nodeSelector, setNodeSelector] = useState<IKeyValue[]>([\r\n    { key: \"\", value: \"\" },\r\n  ]);\r\n  const dispatch = useAppDispatch();\r\n  const auditLoggingEnabled = useSelector(\r\n    (state: AppState) => state.editTenantLogging.auditLoggingEnabled\r\n  );\r\n  function a11yProps(index: any) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  const setLoggingInfo = (res: ITenantLogsStruct) => {\r\n    if (res !== null) {\r\n      dispatch(setAuditLoggingEnabled(res !== null && !res.disabled));\r\n      res.dbServiceAccountName != null &&\r\n        dispatch(setDBServiceAccountName(res.dbServiceAccountName));\r\n      res.dbImage != null && dispatch(setDBImage(res.dbImage));\r\n      res.dbInitImage != null && dispatch(setDBInitImage(res.dbInitImage));\r\n      res.logDBCPURequest != null &&\r\n        dispatch(setDBCPURequest(res.logDBCPURequest));\r\n      if (res.logDBMemRequest) {\r\n        dispatch(\r\n          setDBMemRequest(\r\n            Math.floor(parseInt(res.logDBMemRequest, 10)).toString()\r\n          )\r\n        );\r\n      } else {\r\n        dispatch(setDBMemRequest(\"0\"));\r\n      }\r\n      if (res.dbSecurityContext) {\r\n        dispatch(setDBRunAsGroup(res.dbSecurityContext.runAsGroup));\r\n        dispatch(setDBRunAsUser(res.dbSecurityContext.runAsUser));\r\n        dispatch(setDBFSGroup(res.dbSecurityContext.fsGroup));\r\n        dispatch(setDBRunAsNonRoot(res.dbSecurityContext.runAsNonRoot));\r\n      }\r\n      res.image != null && dispatch(setImage(res.image));\r\n      res.serviceAccountName != null &&\r\n        dispatch(setServiceAccountName(res.serviceAccountName));\r\n      res.logCPURequest != null && dispatch(setCPURequest(res.logCPURequest));\r\n      if (res.logMemRequest) {\r\n        dispatch(\r\n          setMemRequest(Math.floor(parseInt(res.logMemRequest, 10)).toString())\r\n        );\r\n      } else {\r\n        dispatch(setMemRequest(\"0\"));\r\n      }\r\n      if (res.securityContext) {\r\n        dispatch(setRunAsGroup(res.securityContext.runAsGroup));\r\n        dispatch(setRunAsUser(res.securityContext.runAsUser));\r\n        dispatch(setFSGroup(res.securityContext.fsGroup));\r\n        dispatch(setRunAsNonRoot(res.securityContext.runAsNonRoot));\r\n      }\r\n\r\n      res.diskCapacityGB != null &&\r\n        dispatch(setDiskCapacityGB(res.diskCapacityGB));\r\n      res.labels != null\r\n        ? setLabels(res.labels)\r\n        : setLabels([{ key: \"\", value: \"\" }]);\r\n      res.annotations != null\r\n        ? setAnnotations(res.annotations)\r\n        : setAnnotations([{ key: \"\", value: \"\" }]);\r\n      res.nodeSelector != null\r\n        ? setNodeSelector(res.nodeSelector)\r\n        : setNodeSelector([{ key: \"\", value: \"\" }]);\r\n      res.dbLabels != null\r\n        ? setDBLabels(res.dbLabels)\r\n        : setDBLabels([{ key: \"\", value: \"\" }]);\r\n      res.dbAnnotations != null\r\n        ? setDBAnnotations(res.dbAnnotations)\r\n        : setDBAnnotations([{ key: \"\", value: \"\" }]);\r\n      res.dbNodeSelector != null\r\n        ? setDBNodeSelector(res.dbNodeSelector)\r\n        : setDBNodeSelector([{ key: \"\", value: \"\" }]);\r\n      setRefreshLoggingInfo(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refreshLoggingInfo) {\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/log`\r\n        )\r\n        .then((res: ITenantLogsStruct) => {\r\n          if (res !== null) {\r\n            dispatch(setAuditLoggingEnabled(res.auditLoggingEnabled));\r\n            setLoggingInfo(res);\r\n            setRefreshLoggingInfo(false);\r\n          }\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setRefreshLoggingInfo(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refreshLoggingInfo]);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      setLoading(false);\r\n    }\r\n  }, [loading, refreshLoggingInfo]);\r\n\r\n  const toggleLogging = () => {\r\n    dispatch(resetAuditLogForm());\r\n    if (!auditLoggingEnabled) {\r\n      api\r\n        .invoke(\r\n          \"POST\",\r\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/enable-logging`\r\n        )\r\n        .then(() => {\r\n          setRefreshLoggingInfo(true);\r\n          setToggleConfirmOpen(false);\r\n          setAuditLoggingEnabled(true);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(\r\n            setErrorSnackMessage({\r\n              errorMessage: \"Error enabling logging\",\r\n              detailedError: err.detailedError,\r\n            })\r\n          );\r\n        });\r\n    } else {\r\n      api\r\n        .invoke(\r\n          \"POST\",\r\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/disable-logging`\r\n        )\r\n        .then(() => {\r\n          setAuditLoggingEnabled(false);\r\n          setRefreshLoggingInfo(true);\r\n          setToggleConfirmOpen(false);\r\n          dispatch(resetAuditLogForm());\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(\r\n            setErrorSnackMessage({\r\n              errorMessage: \"Error disabling logging\",\r\n              detailedError: err.detailedError,\r\n            })\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs>\r\n        {toggleConfirmOpen && (\r\n          <ConfirmDialog\r\n            isOpen={toggleConfirmOpen}\r\n            title={\r\n              !auditLoggingEnabled\r\n                ? \"Enable Audit Logging for this tenant?\"\r\n                : \"Disable Audit Logging for this tenant?\"\r\n            }\r\n            confirmText={!auditLoggingEnabled ? \"Enable\" : \"Disable\"}\r\n            cancelText=\"Cancel\"\r\n            onClose={() => setToggleConfirmOpen(false)}\r\n            onConfirm={toggleLogging}\r\n            confirmationContent={\r\n              <DialogContentText>\r\n                {!auditLoggingEnabled\r\n                  ? \"A small Postgres server will be started per the configuration provided, which will collect the audit logs for your tenant.\"\r\n                  : \" Current configuration will be lost, and defaults reset if reenabled.\"}\r\n              </DialogContentText>\r\n            }\r\n          />\r\n        )}\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs>\r\n          <h1 className={classes.sectionTitle}>Audit Logs</h1>\r\n        </Grid>\r\n        <Grid>\r\n          <FormSwitchWrapper\r\n            label={\"\"}\r\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\r\n            checked={auditLoggingEnabled}\r\n            value={\"tenant_logging\"}\r\n            id=\"tenant_logging\"\r\n            name=\"tenant_logging\"\r\n            onChange={() => {\r\n              setToggleConfirmOpen(true);\r\n            }}\r\n            description=\"\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        {auditLoggingEnabled && (\r\n          <Fragment>\r\n            <Grid item xs={9}>\r\n              <Tabs\r\n                value={curTab}\r\n                onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\r\n                  setCurTab(newValue);\r\n                }}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                aria-label=\"cluster-tabs\"\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n              >\r\n                <Tab label=\"Configuration\" {...a11yProps(0)} />\r\n                <Tab label=\"DB Configuration\" {...a11yProps(1)} />\r\n              </Tabs>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <hr className={classes.hrClass} />\r\n            </Grid>\r\n            {curTab === 0 && (\r\n              <LoggingDetails\r\n                classes={classes}\r\n                labels={labels}\r\n                annotations={annotations}\r\n                nodeSelector={nodeSelector}\r\n              />\r\n            )}\r\n            {curTab === 1 && (\r\n              <LoggingDBDetails\r\n                classes={classes}\r\n                labels={dbLabels}\r\n                annotations={dbAnnotations}\r\n                nodeSelector={dbNodeSelector}\r\n              />\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(LoggingScreen);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport SelectWrapper from \"../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport { Grid, SelectChangeEvent } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { fsGroupChangePolicyType } from \"./types\";\r\n\r\ninterface IEditSecurityContextProps {\r\n  classes: any;\r\n  runAsUser: string;\r\n  runAsGroup: string;\r\n  fsGroup: string;\r\n  fsGroupChangePolicy: fsGroupChangePolicyType;\r\n  runAsNonRoot: boolean;\r\n  setRunAsUser: any;\r\n  setRunAsGroup: any;\r\n  setFSGroup: any;\r\n  setRunAsNonRoot: any;\r\n  setFSGroupChangePolicy: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    configSectionItem: {\r\n      marginRight: 15,\r\n      marginBottom: 15,\r\n      \"& .multiContainer\": {\r\n        border: \"1px solid red\",\r\n      },\r\n    },\r\n  });\r\n\r\nconst SecurityContextSelector = ({\r\n  classes,\r\n  runAsGroup,\r\n  runAsUser,\r\n  fsGroup,\r\n  fsGroupChangePolicy,\r\n  runAsNonRoot,\r\n  setRunAsUser,\r\n  setRunAsGroup,\r\n  setFSGroup,\r\n  setRunAsNonRoot,\r\n  setFSGroupChangePolicy,\r\n}: IEditSecurityContextProps) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Fragment>\r\n      <fieldset className={`${classes.fieldGroup} ${classes.fieldSpaceTop} `}>\r\n        <legend className={classes.descriptionText}>Security Context</legend>\r\n\r\n        <Grid item xs={12}>\r\n          <div className={`${classes.multiContainerStackNarrow} `}>\r\n            <div className={classes.configSectionItem}>\r\n              <InputBoxWrapper\r\n                type=\"number\"\r\n                id=\"securityContext_runAsUser\"\r\n                name=\"securityContext_runAsUser\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  dispatch(setRunAsUser(e.target.value));\r\n                }}\r\n                label=\"Run As User\"\r\n                value={runAsUser}\r\n                required\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n            <div className={classes.configSectionItem}>\r\n              <InputBoxWrapper\r\n                type=\"number\"\r\n                id=\"securityContext_runAsGroup\"\r\n                name=\"securityContext_runAsGroup\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  dispatch(setRunAsGroup(e.target.value));\r\n                }}\r\n                label=\"Run As Group\"\r\n                value={runAsGroup}\r\n                required\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={`${classes.multiContainerStackNarrow} `}>\r\n            <div className={classes.configSectionItem}>\r\n              <InputBoxWrapper\r\n                type=\"number\"\r\n                id=\"securityContext_fsGroup\"\r\n                name=\"securityContext_fsGroup\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  dispatch(setFSGroup(e.target.value));\r\n                }}\r\n                label=\"FsGroup\"\r\n                value={fsGroup}\r\n                required\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.configSectionItem}>\r\n              <SelectWrapper\r\n                label=\"FsGroupChangePolicy\"\r\n                id=\"securityContext_fsGroupChangePolicy\"\r\n                name=\"securityContext_fsGroupChangePolicy\"\r\n                onChange={(e: SelectChangeEvent<string>) => {\r\n                  dispatch(setFSGroupChangePolicy(e.target.value));\r\n                }}\r\n                value={fsGroupChangePolicy}\r\n                options={[\r\n                  {\r\n                    label: \"Always\",\r\n                    value: \"Always\",\r\n                  },\r\n                  {\r\n                    label: \"OnRootMismatch\",\r\n                    value: \"OnRootMismatch\",\r\n                  },\r\n                ]}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={classes.multiContainer}>\r\n            <FormSwitchWrapper\r\n              value=\"SecurityContextRunAsNonRoot\"\r\n              id=\"securityContext_runAsNonRoot\"\r\n              name=\"securityContext_runAsNonRoot\"\r\n              checked={runAsNonRoot}\r\n              onChange={() => {\r\n                dispatch(setRunAsNonRoot(!runAsNonRoot));\r\n              }}\r\n              label={\"Do not run as Root\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </fieldset>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SecurityContextSelector);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["withStyles","theme","createStyles","bottomContainer","display","flexGrow","alignItems","width","shortened","gridTemplateColumns","gridGap","paddingRight","modalBasic","classes","paramName","newValues","setNewValues","error","setError","cleanValidation","fieldName","clearValidationError","useEffect","keyPairValidation","i","length","push","fieldKey","toString","required","value","key","pattern","customPatternMessage","commonVal","commonFormValidation","keyValueInputs","map","_","index","Fragment","paddingBottom","className","id","replace","label","placeholder","name","onChange","e","tempLabels","target","title","size","onClick","style","marginLeft","splice","tenantDetailsStyles","spacingUtils","bold","fontWeight","italic","fontStyle","fileItem","marginRight","minWidth","flexFlow","containerForHeader","spacing","createTenantCommon","formFieldStyles","wizardCommon","labels","annotations","nodeSelector","dispatch","useAppDispatch","useParams","tenantName","tenantNamespace","auditLoggingEnabled","useSelector","state","editTenantLogging","image","diskCapacityGB","cpuRequest","memRequest","serviceAccountName","runAsGroup","securityContext","runAsUser","fsGroup","runAsNonRoot","fsGroupChangePolicy","editTenantSecurityContext","useState","validationErrors","setValidationErrors","loading","setLoading","logLabels","setLabels","logAnnotations","setAnnotations","logNodeSelector","setNodeSelector","labelsError","setLabelsError","annotationsError","setAnnotationsError","nodeSelectorError","setNodeSelectorError","trim","x","retval","checkValid","Object","keys","setErrorSnackMessage","errorMessage","detailedError","Grid","item","xs","InputBoxWrapper","event","validity","valid","setImage","imagePattern","isNaN","setDiskCapacityGB","parseInt","numericPattern","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","disabled","setCPURequest","setMemRequest","setServiceAccountName","formFieldRow","setFSGroup","setRunAsUser","setRunAsGroup","setRunAsNonRoot","setFSGroupChangePolicy","inputLabel","KeyPairEdit","textAlign","Button","type","variant","color","api","logCPURequest","logMemRequest","then","setRefreshLoggingInfo","setSnackBarMessage","catch","err","submitLoggingInfo","dbImage","dbInitImage","dbCpuRequest","dbCPURequest","dbMemRequest","dbServiceAccountName","dbRunAsGroup","dbSecurityContext","dbRunAsUser","dbFSGroup","dbFSGroupChangePolicy","dbRunAsNonRoot","dbLabels","setDBLabels","dbAnnotations","setDBAnnotations","dbNodeSelector","setDBNodeSelector","dbLabelsError","setDBLabelsError","dbAnnotationsError","setDBAnnotationsError","dbNodeSelectorError","setDBNodeSelectorError","setDBImage","setDBInitImage","setDBCPURequest","setDBMemRequest","setDBFSGroup","setDBRunAsUser","setDBRunAsGroup","setDBRunAsNonRoot","setDBFSGroupChangePolicy","logDBCPURequest","logDBMemRequest","breadcrumLink","textDecoration","curTab","setCurTab","toggleConfirmOpen","setToggleConfirmOpen","refreshLoggingInfo","a11yProps","res","setAuditLoggingEnabled","setDBServiceAccountName","Math","floor","setLoggingInfo","ConfirmDialog","isOpen","confirmText","cancelText","onClose","onConfirm","resetAuditLogForm","confirmationContent","DialogContentText","container","sectionTitle","FormSwitchWrapper","indicatorLabels","checked","description","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","hrClass","LoggingDetails","configSectionItem","marginBottom","border","useDispatch","fieldGroup","fieldSpaceTop","descriptionText","multiContainerStackNarrow","min","options","multiContainer","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
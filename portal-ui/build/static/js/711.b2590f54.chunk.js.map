{"version":3,"file":"static/js/711.b2590f54.chunk.js","mappings":"8OAwHA,UAlFqB,SAAC,GAOK,IANzBA,EAMwB,EANxBA,2BACAC,EAKwB,EALxBA,WACAC,EAIwB,EAJxBA,eACAC,EAGwB,EAHxBA,gBAEAC,EACwB,EADxBA,WAEMC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,KAAND,EAMR,GAA4CE,EAAAA,EAAAA,WAAkB,GAA9D,eAAOC,EAAP,KAAuBC,EAAvB,KAEA,GAAyCC,EAAAA,EAAAA,IANpB,kBAAMZ,GAA2B,EAAjC,IACF,SAACa,GAAD,OACjBR,GAASS,EAAAA,EAAAA,IAAqBD,GADb,IAKnB,eAAOE,EAAP,KAAsBC,EAAtB,KAEA,IAAKb,EACH,OAAO,KA6BT,OACE,SAAC,IAAD,CACEc,MAAOV,EAAE,kBACTW,YAAaX,EAAE,UACfY,OAAQlB,EACRmB,WAAW,SAAC,MAAD,IACXC,UAAWN,EACXO,UAlCoB,WAEtB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIrB,EAAgBsB,OAAQD,IACtCrB,EAAgBqB,GAAGE,SAAS,KAC9BH,EAAOI,KAAK,CACVC,KAAMzB,EAAgBqB,GACtBK,UAAW,GACXC,WAAW,IAGbP,EAAOI,KAAK,CACVC,KAAMzB,EAAgBqB,GACtBK,UAAW,GACXC,WAAW,IAKbP,GACFP,EACE,OADa,0BAEMd,EAFN,wCAEoDQ,GACjEa,EAGL,EAUGQ,QA3CY,kBAAM/B,GAA2B,EAAjC,EA4CZgC,qBACE,UAAC,IAAD,WACGzB,EAAE,gCADL,IACuCJ,EAAgBsB,OAAQ,IAC5DlB,EAAE,WAFL,IAEkB,IACfH,IACC,SAAC,IAAD,CACE6B,MAAO,sBACPC,gBAAiB,CAAC,MAAO,MACzBC,QAASzB,EACT0B,MAAO,kBACPC,GAAG,kBACHC,KAAK,kBACLC,SAAU,SAACC,GACT7B,GAAmBD,EACpB,EACD+B,YAAY,SAOzB,C","sources":["screens/Console/Buckets/ListBuckets/Objects/ListObjects/DeleteMultipleObjects.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState } from \"react\";\r\nimport { DialogContentText } from \"@mui/material\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\r\nimport useApi from \"../../../../Common/Hooks/useApi\";\r\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\r\nimport { ConfirmDeleteIcon } from \"../../../../../../icons\";\r\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\n\r\nimport { setErrorSnackMessage } from \"../../../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../../../store\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface IDeleteObjectProps {\r\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\r\n  deleteOpen: boolean;\r\n  selectedObjects: string[];\r\n  selectedBucket: string;\r\n\r\n  versioning: boolean;\r\n}\r\n\r\nconst DeleteObject = ({\r\n  closeDeleteModalAndRefresh,\r\n  deleteOpen,\r\n  selectedBucket,\r\n  selectedObjects,\r\n\r\n  versioning,\r\n}: IDeleteObjectProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const { t } = useTranslation();\r\n\r\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\r\n  const onDelError = (err: ErrorResponseHandler) =>\r\n    dispatch(setErrorSnackMessage(err));\r\n  const onClose = () => closeDeleteModalAndRefresh(false);\r\n  const [deleteVersions, setDeleteVersions] = useState<boolean>(false);\r\n\r\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\r\n\r\n  if (!selectedObjects) {\r\n    return null;\r\n  }\r\n  const onConfirmDelete = () => {\r\n    let toSend = [];\r\n    for (let i = 0; i < selectedObjects.length; i++) {\r\n      if (selectedObjects[i].endsWith(\"/\")) {\r\n        toSend.push({\r\n          path: selectedObjects[i],\r\n          versionID: \"\",\r\n          recursive: true,\r\n        });\r\n      } else {\r\n        toSend.push({\r\n          path: selectedObjects[i],\r\n          versionID: \"\",\r\n          recursive: false,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (toSend) {\r\n      invokeDeleteApi(\r\n        \"POST\",\r\n        `/api/v1/buckets/${selectedBucket}/delete-objects?all_versions=${deleteVersions}`,\r\n        toSend\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ConfirmDialog\r\n      title={t(\"delete_objects\")}\r\n      confirmText={t(\"delete\")}\r\n      isOpen={deleteOpen}\r\n      titleIcon={<ConfirmDeleteIcon />}\r\n      isLoading={deleteLoading}\r\n      onConfirm={onConfirmDelete}\r\n      onClose={onClose}\r\n      confirmationContent={\r\n        <DialogContentText>\r\n          {t(\"are_you_sure_delete_selected\")} {selectedObjects.length}{\" \"}\r\n          {t(\"objects\")}?{\" \"}\r\n          {versioning && (\r\n            <FormSwitchWrapper\r\n              label={\"Delete All Versions\"}\r\n              indicatorLabels={[\"Yes\", \"No\"]}\r\n              checked={deleteVersions}\r\n              value={\"delete_versions\"}\r\n              id=\"delete-versions\"\r\n              name=\"delete-versions\"\r\n              onChange={(e) => {\r\n                setDeleteVersions(!deleteVersions);\r\n              }}\r\n              description=\"\"\r\n            />\r\n          )}\r\n        </DialogContentText>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeleteObject;\r\n"],"names":["closeDeleteModalAndRefresh","deleteOpen","selectedBucket","selectedObjects","versioning","dispatch","useAppDispatch","t","useTranslation","useState","deleteVersions","setDeleteVersions","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","toSend","i","length","endsWith","push","path","versionID","recursive","onClose","confirmationContent","label","indicatorLabels","checked","value","id","name","onChange","e","description"],"sourceRoot":""}
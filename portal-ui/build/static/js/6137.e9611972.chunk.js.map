{"version":3,"file":"static/js/6137.e9611972.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/NotificationEndpoints/AddNotificationEndpoint.tsx","screens/Console/NotificationEndpoints/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\n\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button } from \"@mui/material\";\n\nimport api from \"../../../common/api\";\nimport {\n  notificationEndpointsFields,\n  notifyMysql,\n  notifyPostgres,\n  removeEmptyFields,\n  servicesList,\n} from \"./utils\";\nimport {\n  modalBasic,\n  settingsCommon,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\n\nimport { IElementValue } from \"../Configurations/types\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\nimport BackLink from \"../../../common/BackLink\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../../store\";\nimport { useTranslation } from 'react-i18next';\n\nconst ConfMySql = withSuspense(\n  React.lazy(() => import(\"./CustomForms/ConfMySql\"))\n);\n\nconst ConfTargetGeneric = withSuspense(\n  React.lazy(() => import(\"./ConfTargetGeneric\"))\n);\n\nconst ConfPostgres = withSuspense(\n  React.lazy(() => import(\"./CustomForms/ConfPostgres\"))\n);\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...settingsCommon,\n    lambdaNotif: {\n      background:\n        \"linear-gradient(90deg, rgba(249,249,250,1) 0%, rgba(250,250,251,1) 68%, rgba(254,254,254,1) 100%)\",\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 5,\n      height: 80,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"start\",\n      marginBottom: 16,\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: \"hidden\",\n    },\n    lambdaNotifIcon: {\n      backgroundColor: \"#FEFEFE\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: 80,\n      height: 80,\n\n      \"& img\": {\n        maxWidth: 46,\n        maxHeight: 46,\n      },\n    },\n    lambdaNotifTitle: {\n      color: \"#07193E\",\n      fontSize: 16,\n      fontFamily: \"Lato,sans-serif\",\n      paddingLeft: 18,\n    },\n    formBox: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  saveAndRefresh: any;\n  classes: any;\n}\n\nconst AddNotificationEndpoint = ({\n  saveAndRefresh,\n  classes,\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const params = useParams();\n\n  //Local States\n  const [valuesArr, setValueArr] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const service = params.service || \"\";\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesArr),\n      };\n      api\n        .invoke(\"PUT\", `/api/v1/configs/${service}`, payload)\n        .then(() => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(true));\n          navigate(IAM_PAGES.NOTIFICATIONS_ENDPOINTS);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [saving, service, valuesArr, saveAndRefresh, dispatch, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueArr(newValue);\n    },\n    [setValueArr]\n  );\n\n  let srvComponent;\n  switch (service) {\n    case notifyPostgres: {\n      srvComponent = <ConfPostgres onChange={onValueChange} />;\n      break;\n    }\n    case notifyMysql: {\n      srvComponent = <ConfMySql onChange={onValueChange} />;\n      break;\n    }\n    default: {\n      const fields = get(notificationEndpointsFields, service, []);\n\n      srvComponent = (\n        <ConfTargetGeneric fields={fields} onChange={onValueChange} />\n      );\n    }\n  }\n\n  const targetElement = servicesList.find(\n    (element) => element.actionTrigger === service\n  );\n\n  return (\n    <Fragment>\n      <PageHeader\n        label={\n          <Fragment>\n            <BackLink\n              to={IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD}\n              label=\"Notification Endpoint\"\n            />\n          </Fragment>\n        }\n        actions={<React.Fragment />}\n      />\n\n      <PageLayout>\n        <form noValidate onSubmit={submitForm}>\n          {service !== \"\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                {targetElement && (\n                  <div\n                    key={`icon-${targetElement.targetTitle}`}\n                    className={classes.lambdaNotif}\n                  >\n                    <div className={classes.lambdaNotifIcon}>\n                      <img\n                        src={targetElement.logo}\n                        className={classes.logoButton}\n                        alt={targetElement.targetTitle}\n                      />\n                    </div>\n\n                    <div className={classes.lambdaNotifTitle}>\n                      <b>\n                        {targetElement ? targetElement.targetTitle : \"\"}\n                        {t(\"notification_endpoint\")}\n                      </b>\n                    </div>\n                  </div>\n                )}\n              </Grid>\n              <div className={classes.formBox}>\n                <Grid item xs={12} className={classes.configForm}>\n                  {srvComponent}\n                </Grid>\n                <Grid item xs={12} className={classes.settingsButtonContainer}>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={saving}\n                  >\n                    {t(\"save\")}\n                  </Button>\n                </Grid>\n              </div>\n            </Fragment>\n          )}\n        </form>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(AddNotificationEndpoint);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\nimport i18next from \"i18next\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      name: element.service,\n      account_id: element.account_id,\n      status: element.status,\n    };\n  });\n};\n\nexport const servicesList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue-dir\",\n    label: i18next.t(\"queue_dir\"),\n    required: true,\n\n    tooltip: i18next.t(\"staging_dir_for_undelivered_message\"),\n    type: \"string\",\n    placeholder: i18next.t(\"enter_queue_dir\"),\n  },\n  {\n    name: \"queue-limit\",\n    label: i18next.t(\"queue_limit\"),\n    required: false,\n\n    tooltip: i18next.t(\"maximum_limit_for_undelivered_message\"),\n    type: \"number\",\n    placeholder:i18next.t(\"enter_queue_limit\"),\n  },\n  {\n    name: \"comment\",\n    label: i18next.t(\"comment\"),\n    required: false,\n    type: \"comment\",\n    placeholder: i18next.t(\"enter_custom_notes\"),\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: i18next.t(\"brokers\"),\n      required: true,\n\n      tooltip: i18next.t(\"comma_separated_list_kafka_broker_adds\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_brokers\"),\n    },\n    {\n      name: \"topic\",\n      label: i18next.t(\"topic\"),\n      tooltip: i18next.t(\"kafka_topic_notif\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_topic\"),\n    },\n    {\n      name: \"sasl_username\",\n      label: i18next.t(\"SALS_username\"),\n      tooltip: i18next.t(\"SALS_username_for_authentication\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_SALS_username\"),\n    },\n    {\n      name: \"sasl_password\",\n      label: i18next.t(\"SALS_password\"),\n      tooltip: i18next.t(\"SALS_password_for_authentication\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_SALS_password\"),\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: i18next.t(\"SALS_mechanism\"),\n      tooltip: i18next.t(\"SALS_mechanism_for_authentication\"),\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: i18next.t(\"TLS_client_auth\"),\n      tooltip: i18next.t(\"client_auth_determines_kafka_policy\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_TLS_client_auth\"),\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: i18next.t(\"set_on_enable_SASL\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: i18next.t(\"set_on_to_enalbe_TLS\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: i18next.t(\"TLS_slip_verify\"),\n      tooltip: i18next.t(\"TLS_slip_verify_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: i18next.t(\"client_TLS_cert\"),\n      tooltip: i18next.t(\"path_to_client_cret\"),\n      type: \"path\",\n      placeholder: i18next.t(\"enter_client_TLS_cert\"),\n    },\n    {\n      name: \"client_tls_key\",\n      label: i18next.t(\"client_TLS_key\"),\n      tooltip: i18next.t(\"path_to_client_key\"),\n      type: \"path\",\n      placeholder: i18next.t(\"enter_client_TLS_key\"),\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: i18next.t(\"specify_version_for_kafka_cluster\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_kafka_version\"),\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip: i18next.t(\"URL_tooltip\"),\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: i18next.t(\"exchange\"),\n      tooltip: i18next.t(\"name_of_AMQP_exchange\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_exchange\"),\n    },\n    {\n      name: \"exchange_type\",\n      label: i18next.t(\"exchange_type\"),\n      tooltip: i18next.t(\"AMQP_exchange_type\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_exchange_type\"),\n    },\n    {\n      name: \"routing_key\",\n      label: i18next.t(\"routing_key\"),\n      tooltip: i18next.t(\"routing_key_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_routing_key\"),\n    },\n    {\n      name: \"mandatory\",\n      label: i18next.t(\"mandatory\"),\n      tooltip: i18next.t(\"mandatory_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: i18next.t(\"durable\"),\n      tooltip: i18next.t(\"durable_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: i18next.t(\"no_wait\"),\n      tooltip:i18next.t(\"no_wait_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: i18next.t(\"internal\"),\n      tooltip:i18next.t(\"internal_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: i18next.t(\"auto_deleted\"),\n      tooltip:i18next.t(\"auto_deleted_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: i18next.t(\"delivery_mode\"),\n      tooltip: i18next.t(\"delivery_mode_tooltip\"),\n      type: \"number\",\n      placeholder: i18next.t(\"enter_delivery_mode\"),\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: i18next.t(\"address\"),\n      tooltip: i18next.t(\"address_tooltip\"),\n      type: \"address\",\n      placeholder: i18next.t(\"enter_address\"),\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: i18next.t(\"key\"),\n      tooltip: i18next.t(\"key_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"queue_denter_keyir\"),\n    },\n    {\n      name: \"password\",\n      label: i18next.t(\"password\"),\n      tooltip: i18next.t(\"redis_server_password\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_password\"),\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: i18next.t(\"broker\"),\n      tooltip: i18next.t(\"broker_tooltip\"),\n      type: \"uri\",\n      placeholder: i18next.t(\"enter_brokers\"),\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: i18next.t(\"topic\"),\n      tooltip: i18next.t(\"topic_notif_MQTT\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_topic\"),\n    },\n    {\n      name: \"username\",\n      label: i18next.t(\"username\"),\n      tooltip: i18next.t(\"MQTT_username\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_username\"),\n    },\n    {\n      name: \"password\",\n      label: i18next.t(\"password\"),\n      tooltip: i18next.t(\"MQTT_password_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_password\"),\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: i18next.t(\"set_quality_service_priority\"),\n      type: \"number\",\n      placeholder: i18next.t(\"enter_QOS\"),\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: i18next.t(\"keep_alive_interval\"),\n      tooltip: i18next.t(\"keep_alive_interval_tooltip\"),\n      type: \"duration\",\n      placeholder: i18next.t(\"enter_keep_alive_interval\"),\n    },\n    {\n      name: \"reconnect_interval\",\n      label: i18next.t(\"reconnect_interval\"),\n      tooltip: i18next.t(\"reconnect_interval_tooltip\"),\n      type: \"duration\",\n      placeholder: i18next.t(\"enter_reconnect_interval\"),\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: i18next.t(\"address\"),\n      tooltip: i18next.t(\"address_tooltip_NATS\"),\n      type: \"address\",\n      placeholder: i18next.t(\"enter_address\"),\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: i18next.t(\"subject\"),\n      tooltip: i18next.t(\"subject_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_subject\"),\n    },\n    {\n      name: \"username\",\n      label: i18next.t(\"username\"),\n      tooltip: i18next.t(\"username_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_ANTS_username\"),\n    },\n    {\n      name: \"password\",\n      label: i18next.t(\"password\"),\n      tooltip: i18next.t(\"password_NATS_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_NATS_password\"),\n    },\n    {\n      name: \"token\",\n      label: i18next.t(\"token\"),\n      tooltip: i18next.t(\"token_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_token\"),\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: i18next.t(\"tls_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: i18next.t(\"tls_skip_verify\"),\n      tooltip:i18next.t(\"subject_TLS_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: i18next.t(\"ping_interval\"),\n      tooltip: i18next.t(\"ping_interval_tooltip\"),\n      type: \"duration\",\n      placeholder: i18next.t(\"enter_ping_interval\"),\n    },\n    {\n      name: \"streaming\",\n      label: i18next.t(\"streaming\"),\n      tooltip: i18next.t(\"streaming_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: i18next.t(\"streaming_async\"),\n      tooltip: i18next.t(\"streaming_async_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: i18next.t(\"streaming_max_pub_acks_in_flight\"),\n      tooltip: i18next.t(\"streaming_max_pub_acks_in_flight_tooltip\"),\n      type: \"number\",\n      placeholder: i18next.t(\"enter_streaming_max_pub_acks_in_flight\"),\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: i18next.t(\"streaming_cluster_id\"),\n      tooltip: i18next.t(\"streaming_cluster_id_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_streaming_cluster_id\"),\n    },\n    {\n      name: \"cert_authority\",\n      label: i18next.t(\"cert_authority\"),\n      tooltip: i18next.t(\"cert_authority_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_cert_authority\"),\n    },\n    {\n      name: \"client_cert\",\n      label: i18next.t(\"client_cert\"),\n      tooltip:i18next.t(\"client_cert_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_client_cert\"),\n    },\n    {\n      name: \"client_key\",\n      label: i18next.t(\"client_key\"),\n      tooltip: i18next.t(\"client_key-tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_client_key\"),\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:i18next.t(\"url_tooltip\"),\n      type: \"url\",\n      placeholder: i18next.t(\"enter_url\"),\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: i18next.t(\"index\"),\n      tooltip:i18next.t(\"index_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_index\"),\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: i18next.t(\"format\"),\n      tooltip:i18next.t(\"format_tooltip\"),\n      type: \"enum\",\n      placeholder: i18next.t(\"enter_format\"),\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: i18next.t(\"endpoint\"),\n      tooltip:i18next.t(\"endpoint_tooltip\"),\n      type: \"url\",\n      placeholder: i18next.t(\"enter_endpoit\"),\n    },\n    {\n      name: \"auth_token\",\n      label: i18next.t(\"auth_token\"),\n      tooltip: i18next.t(\"auth_token_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_auth_token\"),\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: i18next.t(\"nsqd_address\"),\n      tooltip: i18next.t(\"nsqd_address_tooltip\"),\n      type: \"address\",\n      placeholder: i18next.t(\"enter_nsqd_address\"),\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: i18next.t(\"topic\"),\n      tooltip: i18next.t(\"topic_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_topic\"),\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: i18next.t(\"tls_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: i18next.t(\"tls_skip_verify\"),\n      tooltip:i18next.t(\"tls_skip_verify_tooltip\"),\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n\nconst serviceToConfigMap: Record<string, string> = {\n  webhook: \"notify_webhook\",\n  amqp: \"notify_amqp\",\n  kafka: \"notify_kafka\",\n  mqtt: \"notify_mqtt\",\n  nats: \"notify_nats\",\n  nsq: \"notify_nsq\",\n  mysql: \"notify_mysql\",\n  postgresql: \"notify_postgres\", //looks different in server response(postgresql as opposed to postgres) from restapi/admin_notification_endpoints.go\n  elasticsearch: \"notify_elasticsearch\",\n  redis: \"notify_redis\",\n};\n\nexport const getNotificationConfigKey = (serviceName: string) => {\n  return serviceToConfigMap[serviceName];\n};\n"],"names":["WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","ConfMySql","withSuspense","React","ConfTargetGeneric","ConfPostgres","withStyles","theme","createStyles","modalBasic","settingsCommon","lambdaNotif","background","border","borderRadius","height","display","alignItems","justifyContent","marginBottom","cursor","padding","overflow","lambdaNotifIcon","backgroundColor","width","maxWidth","maxHeight","lambdaNotifTitle","color","fontSize","fontFamily","paddingLeft","formBox","saveAndRefresh","classes","dispatch","useAppDispatch","navigate","useNavigate","t","useTranslation","params","useParams","useState","valuesArr","setValueArr","saving","setSaving","service","useEffect","payload","key_values","removeEmptyFields","api","then","setServerNeedsRestart","IAM_PAGES","catch","err","setErrorSnackMessage","srvComponent","onValueChange","useCallback","newValue","notifyPostgres","onChange","notifyMysql","fields","get","notificationEndpointsFields","targetElement","servicesList","element","actionTrigger","Fragment","label","to","actions","noValidate","onSubmit","event","preventDefault","item","xs","className","src","logo","logoButton","alt","targetTitle","configForm","settingsButtonContainer","type","variant","disabled","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","map","service_name","account_id","name","status","commonFields","i18next","required","tooltip","placeholder","formFields","filter","field","value","serviceToConfigMap","webhook","amqp","kafka","mqtt","nats","nsq","mysql","postgresql","elasticsearch","redis","getNotificationConfigKey","serviceName"],"sourceRoot":""}
{"version":3,"file":"static/js/9031.972c6592.chunk.js","mappings":"+OAsFA,UAnDoB,SAAC,GAIA,IAHnBA,EAGkB,EAHlBA,eACAC,EAEkB,EAFlBA,WACAC,EACkB,EADlBA,2BAEMC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,KAAND,EAQR,GAAyCE,EAAAA,EAAAA,IAPpB,kBAAML,GAA2B,EAAjC,IACF,SAACM,GAClBL,GAASM,EAAAA,EAAAA,IAAqBD,IAC9BN,GAA2B,EAC5B,IAGD,eAAOQ,EAAP,KAAsBC,EAAtB,KAEA,IAAKX,EACH,OAAO,KAET,IAMMY,EAAeZ,EAAea,KAAI,SAACC,GAAD,OACtC,0BACE,uBAAIA,KADIA,EAD4B,IAMxC,OACE,SAAC,IAAD,CACEC,MAAK,UAAKV,EAAE,iBAAP,OAAyBL,EAAegB,OAAS,EAAI,IAAM,IAChEC,YAAaZ,EAAE,UACfa,OAAQjB,EACRkB,WAAW,SAAC,MAAD,IACXC,UAAWV,EACXW,UAnBmB,WAAO,IAAD,YACTrB,GADS,IAC3B,2BAAkC,CAAC,IAA1Bc,EAAyB,QAChCH,EAAgB,SAAD,6BAAiCG,GACjD,CAH0B,+BAI5B,EAgBGQ,QA3BY,kBAAMpB,GAA2B,EAAjC,EA4BZqB,qBACE,UAAC,IAAD,WACGlB,EAAE,uBADL,IAC8BL,EAAegB,OAAQ,IAClDX,EAAE,SAAUL,EAAegB,OAAS,EAAI,KAAO,IAC/CJ,MAKV,C","sources":["screens/Console/Groups/DeleteGroup.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { useTranslation } from 'react-i18next';\n\ninterface IDeleteGroup {\n  selectedGroups: string[];\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n}\n\nconst DeleteGroup = ({\n  selectedGroups,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n}: IDeleteGroup) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n    closeDeleteModalAndRefresh(false);\n  };\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroups) {\n    return null;\n  }\n  const onDeleteGroups = () => {\n    for (let group of selectedGroups) {\n      invokeDeleteApi(\"DELETE\", `/api/v1/group?name=${group}`);\n    }\n  };\n\n  const renderGroups = selectedGroups.map((group) => (\n    <div key={group}>\n      <b>{group}</b>\n    </div>\n  ));\n\n  return (\n    <ConfirmDialog\n      title={`${t(\"delete_group\")}${selectedGroups.length > 1 ? \"s\" : \"\"}`}\n      confirmText={t(\"delete\")}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroups}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          {t(\"are_you_sure_delete\")} {selectedGroups.length}{\" \"}\n          {t(\"group\")}{selectedGroups.length > 1 ? \"s?\" : \"?\"}\n          {renderGroups}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteGroup;\n"],"names":["selectedGroups","deleteOpen","closeDeleteModalAndRefresh","dispatch","useAppDispatch","t","useTranslation","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","renderGroups","map","group","title","length","confirmText","isOpen","titleIcon","isLoading","onConfirm","onClose","confirmationContent"],"sourceRoot":""}
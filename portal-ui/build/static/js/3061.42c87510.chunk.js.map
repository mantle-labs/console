{"version":3,"file":"static/js/3061.42c87510.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/Components/withSuspense.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Common/VirtualizedList/VirtualizedList.tsx","screens/Console/Tenants/ListTenants/InformationItem.tsx","screens/Console/Tenants/ListTenants/TenantListItem.tsx","screens/Console/Tenants/ListTenants/ListTenants.tsx","screens/Console/Common/UsageBar/UsageBar.tsx","screens/Console/Tenants/ListTenants/TenantCapacity.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #E2E2E2\",\r\n      borderRadius: 2,\r\n      backgroundColor: \"#FBFAFA\",\r\n      paddingLeft: 25,\r\n      paddingTop: 31,\r\n      paddingBottom: 21,\r\n      paddingRight: 30,\r\n    },\r\n    leftItems: {\r\n      fontSize: 16,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 15,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& .min-icon\": {\r\n        marginRight: 15,\r\n        height: 28,\r\n        width: 38,\r\n      },\r\n    },\r\n    helpText: {\r\n      fontSize: 16,\r\n      paddingLeft: 5,\r\n    },\r\n  });\r\n\r\ninterface IHelpBox {\r\n  classes: any;\r\n  iconComponent: any;\r\n  title: string;\r\n  help: any;\r\n}\r\n\r\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.leftItems}>\r\n          {iconComponent}\r\n          {title}\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.helpText}>\r\n          {help}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(HelpBox);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { IconButtonProps } from \"@mui/material\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n      margin: 0,\r\n      border: 0,\r\n      backgroundColor: \"transparent\",\r\n      textDecoration: \"underline\",\r\n      cursor: \"pointer\",\r\n      fontSize: \"inherit\",\r\n      color: theme.palette.info.main,\r\n      fontFamily: \"Lato, sans-serif\",\r\n    },\r\n  });\r\n\r\ninterface IAButton extends IconButtonProps {\r\n  classes: any;\r\n  children: any;\r\n}\r\n\r\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\r\n  return (\r\n    <button {...rest} className={classes.root}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AButton);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\r\n\r\nfunction withSuspense<P extends string | number | object>(\r\n  WrappedComponent: ComponentType<P>,\r\n  fallback: SuspenseProps[\"fallback\"] = null\r\n) {\r\n  function ComponentWithSuspense(props: P) {\r\n    return (\r\n      <Suspense fallback={fallback}>\r\n        <WrappedComponent {...(props as any)} />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  return ComponentWithSuspense;\r\n}\r\n\r\nexport default withSuspense;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport SearchIcon from \"../../../icons/SearchIcon\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    searchField: {\r\n      ...searchField.searchField,\r\n    },\r\n    adornment: {},\r\n  });\r\n\r\ntype SearchBoxProps = {\r\n  placeholder?: string;\r\n  value: string;\r\n  classes: any;\r\n  onChange: (value: string) => void;\r\n  adornmentPosition?: \"start\" | \"end\";\r\n  overrideClass?: any;\r\n};\r\n\r\nconst SearchBox = ({\r\n  placeholder = \"\",\r\n  classes,\r\n  onChange,\r\n  adornmentPosition = \"end\",\r\n  overrideClass,\r\n  value,\r\n}: SearchBoxProps) => {\r\n  const inputProps = {\r\n    disableUnderline: true,\r\n    [`${adornmentPosition}Adornment`]: (\r\n      <InputAdornment\r\n        position={adornmentPosition}\r\n        className={classes.adornment}\r\n      >\r\n        <SearchIcon />\r\n      </InputAdornment>\r\n    ),\r\n  };\r\n  return (\r\n    <TextField\r\n      placeholder={placeholder}\r\n      className={overrideClass ? overrideClass : classes.searchField}\r\n      id=\"search-resource\"\r\n      label=\"\"\r\n      InputProps={inputProps}\r\n      onChange={(e) => {\r\n        onChange(e.target.value);\r\n      }}\r\n      variant=\"standard\"\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SearchBox);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, ReactElement } from \"react\";\r\nimport { FixedSizeList as List } from \"react-window\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\nimport { AutoSizer } from \"react-virtualized\";\r\n\r\ninterface IVirtualizedList {\r\n  rowRenderFunction: (index: number) => ReactElement | null;\r\n  totalItems: number;\r\n  defaultHeight?: number;\r\n}\r\n\r\nlet itemStatusMap: any = {};\r\nconst LOADING = 1;\r\nconst LOADED = 2;\r\n\r\nconst VirtualizedList = ({\r\n  rowRenderFunction,\r\n  totalItems,\r\n  defaultHeight,\r\n}: IVirtualizedList) => {\r\n  const isItemLoaded = (index: any) => !!itemStatusMap[index];\r\n\r\n  const loadMoreItems = (startIndex: number, stopIndex: number) => {\r\n    for (let index = startIndex; index <= stopIndex; index++) {\r\n      itemStatusMap[index] = LOADING;\r\n    }\r\n\r\n    for (let index = startIndex; index <= stopIndex; index++) {\r\n      itemStatusMap[index] = LOADED;\r\n    }\r\n  };\r\n\r\n  const RenderItemLine = ({ index, style }: any) => {\r\n    return <div style={style}>{rowRenderFunction(index)}</div>;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <InfiniteLoader\r\n        isItemLoaded={isItemLoaded}\r\n        loadMoreItems={loadMoreItems}\r\n        itemCount={totalItems}\r\n      >\r\n        {({ onItemsRendered, ref }) => (\r\n          // @ts-ignore\r\n          <AutoSizer>\r\n            {({ width, height }) => {\r\n              return (\r\n                <List\r\n                  itemSize={defaultHeight || 220}\r\n                  height={height}\r\n                  itemCount={totalItems}\r\n                  width={width}\r\n                  ref={ref}\r\n                  onItemsRendered={onItemsRendered}\r\n                >\r\n                  {RenderItemLine}\r\n                </List>\r\n              );\r\n            }}\r\n          </AutoSizer>\r\n        )}\r\n      </InfiniteLoader>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default VirtualizedList;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\n\r\ninterface IInformationItemProps {\r\n  label: string;\r\n  value: string;\r\n  unit?: string;\r\n  variant?: \"normal\" | \"faded\";\r\n}\r\n\r\nconst InformationItem = ({\r\n  label,\r\n  value,\r\n  unit,\r\n  variant = \"normal\",\r\n}: IInformationItemProps) => {\r\n  return (\r\n    <div style={{ margin: \"0px 20px\" }}>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <span\r\n          style={{\r\n            fontSize: 18,\r\n            color: variant === \"normal\" ? \"#000\" : \"#999\",\r\n            fontWeight: 400,\r\n          }}\r\n        >\r\n          {value}\r\n        </span>\r\n        {unit && (\r\n          <Fragment>\r\n            {\" \"}\r\n            <span\r\n              style={{ fontSize: 12, color: \"#8F9090\", fontWeight: \"bold\" }}\r\n            >\r\n              {unit}\r\n            </span>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          color: variant === \"normal\" ? \"#767676\" : \"#bababa\",\r\n          fontSize: 12,\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        {label}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InformationItem;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport { CapacityValues, ITenant, ValueUnit } from \"./types\";\r\nimport { setTenantName } from \"../tenantsSlice\";\r\nimport { getTenantAsync } from \"../thunks/tenantDetailsAsync\";\r\nimport { DrivesIcon } from \"../../../../icons\";\r\nimport { niceBytes, niceBytesInt } from \"../../../../common/utils\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport InformationItem from \"./InformationItem\";\r\nimport TenantCapacity from \"./TenantCapacity\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    redState: {\r\n      color: theme.palette.error.main,\r\n      \"& .min-icon\": {\r\n        width: 16,\r\n        height: 16,\r\n        float: \"left\",\r\n        marginRight: 4,\r\n      },\r\n    },\r\n    yellowState: {\r\n      color: theme.palette.warning.main,\r\n      \"& .min-icon\": {\r\n        width: 16,\r\n        height: 16,\r\n        float: \"left\",\r\n        marginRight: 4,\r\n      },\r\n    },\r\n    greenState: {\r\n      color: theme.palette.success.main,\r\n      \"& .min-icon\": {\r\n        width: 16,\r\n        height: 16,\r\n        float: \"left\",\r\n        marginRight: 4,\r\n      },\r\n    },\r\n    greyState: {\r\n      color: \"grey\",\r\n      \"& .min-icon\": {\r\n        width: 16,\r\n        height: 16,\r\n        float: \"left\",\r\n        marginRight: 4,\r\n      },\r\n    },\r\n    tenantIcon: { width: 40, height: 40, position: \"relative\" },\r\n    tenantItem: {\r\n      border: \"1px solid #EAEAEA\",\r\n      marginBottom: 16,\r\n      padding: \"15px 30px\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#FAFAFA\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    titleContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"100%\",\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: \"bold\",\r\n    },\r\n    namespaceLabel: {\r\n      display: \"inline-flex\",\r\n      backgroundColor: \"#EAEDEF\",\r\n      borderRadius: 2,\r\n      padding: \"4px 8px\",\r\n      fontSize: 10,\r\n      marginRight: 20,\r\n    },\r\n    status: {\r\n      fontSize: 12,\r\n      color: \"#8F9090\",\r\n    },\r\n  });\r\n\r\ninterface ITenantListItem {\r\n  tenant: ITenant;\r\n  classes: any;\r\n}\r\n\r\nconst TenantListItem = ({ tenant, classes }: ITenantListItem) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const healthStatusToClass = (health_status: string) => {\r\n    switch (health_status) {\r\n      case \"red\":\r\n        return classes.redState;\r\n      case \"yellow\":\r\n        return classes.yellowState;\r\n      case \"green\":\r\n        return classes.greenState;\r\n      default:\r\n        return classes.greyState;\r\n    }\r\n  };\r\n\r\n  let raw: ValueUnit = { value: \"n/a\", unit: \"\" };\r\n  let capacity: ValueUnit = { value: \"n/a\", unit: \"\" };\r\n  let used: ValueUnit = { value: \"n/a\", unit: \"\" };\r\n  let localUse: ValueUnit = { value: \"n/a\", unit: \"\" };\r\n  let tieredUse: ValueUnit = { value: \"n/a\", unit: \"\" };\r\n\r\n  if (tenant.capacity_raw) {\r\n    const b = niceBytes(`${tenant.capacity_raw}`, true);\r\n    const parts = b.split(\" \");\r\n    raw.value = parts[0];\r\n    raw.unit = parts[1];\r\n  }\r\n  if (tenant.capacity) {\r\n    const b = niceBytes(`${tenant.capacity}`, true);\r\n    const parts = b.split(\" \");\r\n    capacity.value = parts[0];\r\n    capacity.unit = parts[1];\r\n  }\r\n  if (tenant.capacity_usage) {\r\n    const b = niceBytesInt(tenant.capacity_usage, true);\r\n    const parts = b.split(\" \");\r\n    used.value = parts[0];\r\n    used.unit = parts[1];\r\n  }\r\n\r\n  let spaceVariants: CapacityValues[] = [];\r\n  if (!tenant.tiers || tenant.tiers.length === 0) {\r\n    spaceVariants = [\r\n      { value: tenant.capacity_usage || 0, variant: \"STANDARD\" },\r\n    ];\r\n  } else {\r\n    spaceVariants = tenant.tiers.map((itemTenant) => {\r\n      return { value: itemTenant.size, variant: itemTenant.name };\r\n    });\r\n    let internalUsage = tenant.tiers\r\n      .filter((itemTenant) => {\r\n        return itemTenant.type === \"internal\";\r\n      })\r\n      .reduce((sum, itemTenant) => sum + itemTenant.size, 0);\r\n    let tieredUsage = tenant.tiers\r\n      .filter((itemTenant) => {\r\n        return itemTenant.type !== \"internal\";\r\n      })\r\n      .reduce((sum, itemTenant) => sum + itemTenant.size, 0);\r\n\r\n    const t = niceBytesInt(tieredUsage, true);\r\n    const parts = t.split(\" \");\r\n    tieredUse.value = parts[0];\r\n    tieredUse.unit = parts[1];\r\n\r\n    const is = niceBytesInt(internalUsage, true);\r\n    const partsInternal = is.split(\" \");\r\n    localUse.value = partsInternal[0];\r\n    localUse.unit = partsInternal[1];\r\n  }\r\n\r\n  const openTenantDetails = () => {\r\n    dispatch(\r\n      setTenantName({\r\n        name: tenant.name,\r\n        namespace: tenant.namespace,\r\n      })\r\n    );\r\n    dispatch(getTenantAsync());\r\n    navigate(`/namespaces/${tenant.namespace}/tenants/${tenant.name}`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classes.tenantItem}\r\n        id={`list-tenant-${tenant.name}`}\r\n        onClick={openTenantDetails}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12} className={classes.titleContainer}>\r\n            <div className={classes.title}>\r\n              <span>{tenant.name}</span>\r\n            </div>\r\n            <div>\r\n              <span className={classes.namespaceLabel}>\r\n                Namespace:&nbsp;{tenant.namespace}\r\n              </span>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sx={{ marginTop: 2 }}>\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                <TenantCapacity\r\n                  totalCapacity={tenant.capacity || 0}\r\n                  usedSpaceVariants={spaceVariants}\r\n                  statusClass={healthStatusToClass(tenant.health_status)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <InformationItem\r\n                    label={\"Raw Capacity\"}\r\n                    value={raw.value}\r\n                    unit={raw.unit}\r\n                  />\r\n                  <InformationItem\r\n                    label={\"Usable Capacity\"}\r\n                    value={capacity.value}\r\n                    unit={capacity.unit}\r\n                  />\r\n                  <InformationItem\r\n                    label={\"Pools\"}\r\n                    value={tenant.pool_count.toString()}\r\n                    variant={\"faded\"}\r\n                  />\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sx={{ paddingLeft: \"20px\", marginTop: \"15px\" }}\r\n                >\r\n                  <span className={classes.status}>\r\n                    <strong>State:</strong> {tenant.currentState}\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Fragment>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      xs={2}\r\n                      textAlign={\"center\"}\r\n                      justifyContent={\"center\"}\r\n                      justifyItems={\"center\"}\r\n                    >\r\n                      <DrivesIcon\r\n                        style={{ width: 25, color: \"rgb(91,91,91)\" }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          color: \"rgb(118, 118, 118)\",\r\n                          fontSize: 12,\r\n                          fontWeight: \"400\",\r\n                        }}\r\n                      >\r\n                        Usage\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid item xs={1} />\r\n                    <Grid item style={{ paddingTop: 8 }}>\r\n                      {(!tenant.tiers || tenant.tiers.length === 0) && (\r\n                        <div\r\n                          style={{\r\n                            fontSize: 14,\r\n                            fontWeight: 400,\r\n                          }}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              color: \"rgb(62,62,62)\",\r\n                            }}\r\n                          >\r\n                            Internal:{\" \"}\r\n                          </span>{\" \"}\r\n                          {`${used.value} ${used.unit}`}\r\n                        </div>\r\n                      )}\r\n\r\n                      {tenant.tiers && tenant.tiers.length > 0 && (\r\n                        <Fragment>\r\n                          <div\r\n                            style={{\r\n                              fontSize: 14,\r\n                              fontWeight: 400,\r\n                            }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                color: \"rgb(62,62,62)\",\r\n                              }}\r\n                            >\r\n                              Internal:{\" \"}\r\n                            </span>{\" \"}\r\n                            {`${localUse.value} ${localUse.unit}`}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              fontSize: 14,\r\n                              fontWeight: 400,\r\n                            }}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                color: \"rgb(62,62,62)\",\r\n                              }}\r\n                            >\r\n                              Tiered:{\" \"}\r\n                            </span>{\" \"}\r\n                            {`${tieredUse.value} ${tieredUse.unit}`}\r\n                          </div>\r\n                        </Fragment>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Fragment>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(TenantListItem);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { LinearProgress, SelectChangeEvent } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { ITenant, ITenantsResponse } from \"./types\";\r\nimport { niceBytes } from \"../../../../common/utils\";\r\nimport { NewServiceAccount } from \"../../Common/CredentialsPrompt/types\";\r\nimport {\r\n  actionsTray,\r\n  containerForHeader,\r\n  searchField,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { AddIcon, TenantsIcon } from \"../../../../icons\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport api from \"../../../../common/api\";\r\nimport RefreshIcon from \"../../../../icons/RefreshIcon\";\r\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\r\nimport TenantListItem from \"./TenantListItem\";\r\nimport HelpBox from \"../../../../common/HelpBox\";\r\nimport AButton from \"../../Common/AButton/AButton\";\r\n\r\nimport withSuspense from \"../../Common/Components/withSuspense\";\r\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\r\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\r\nimport SearchBox from \"../../Common/SearchBox\";\r\nimport PageLayout from \"../../Common/Layout/PageLayout\";\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\nconst CredentialsPrompt = withSuspense(\r\n  React.lazy(() => import(\"../../Common/CredentialsPrompt/CredentialsPrompt\"))\r\n);\r\n\r\ninterface ITenantsList {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...actionsTray,\r\n    ...searchField,\r\n    ...containerForHeader(theme.spacing(4)),\r\n    theaderSearch: {\r\n      borderColor: theme.palette.grey[\"200\"],\r\n      \"& .MuiInputBase-input\": {\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n      },\r\n      \"& .MuiInputBase-root\": {\r\n        \"& .MuiInputAdornment-root\": {\r\n          \"& .min-icon\": {\r\n            color: theme.palette.grey[\"400\"],\r\n            height: 14,\r\n          },\r\n        },\r\n      },\r\n      actionHeaderItems: {\r\n        \"@media (min-width: 320px)\": {\r\n          marginTop: 8,\r\n        },\r\n      },\r\n      marginRight: 10,\r\n      marginLeft: 10,\r\n    },\r\n    tenantsList: {\r\n      height: \"calc(100vh - 195px)\",\r\n    },\r\n    sortByContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      marginBottom: 10,\r\n    },\r\n    innerSort: {\r\n      maxWidth: 200,\r\n      width: \"95%\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n    },\r\n    sortByLabel: {\r\n      whiteSpace: \"nowrap\",\r\n      fontSize: 14,\r\n      color: \"#838383\",\r\n      fontWeight: \"bold\",\r\n      marginRight: 10,\r\n    },\r\n  });\r\n\r\nconst ListTenants = ({ classes }: ITenantsList) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [filterTenants, setFilterTenants] = useState<string>(\"\");\r\n  const [records, setRecords] = useState<ITenant[]>([]);\r\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\r\n  const [createdAccount, setCreatedAccount] =\r\n    useState<NewServiceAccount | null>(null);\r\n  const [sortValue, setSortValue] = useState<string>(\"name\");\r\n\r\n  const closeCredentialsModal = () => {\r\n    setShowNewCredentials(false);\r\n    setCreatedAccount(null);\r\n  };\r\n\r\n  const filteredRecords = records.filter((b: any) => {\r\n    if (filterTenants === \"\") {\r\n      return true;\r\n    } else {\r\n      if (b.name.indexOf(filterTenants) >= 0) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  });\r\n\r\n  filteredRecords.sort((a, b) => {\r\n    switch (sortValue) {\r\n      case \"capacity\":\r\n        if (!a.capacity || !b.capacity) {\r\n          return 0;\r\n        }\r\n\r\n        if (a.capacity > b.capacity) {\r\n          return 1;\r\n        }\r\n\r\n        if (a.capacity < b.capacity) {\r\n          return -1;\r\n        }\r\n\r\n        return 0;\r\n      case \"usage\":\r\n        if (!a.capacity_usage || !b.capacity_usage) {\r\n          return 0;\r\n        }\r\n\r\n        if (a.capacity_usage > b.capacity_usage) {\r\n          return 1;\r\n        }\r\n\r\n        if (a.capacity_usage < b.capacity_usage) {\r\n          return -1;\r\n        }\r\n\r\n        return 0;\r\n      case \"active_status\":\r\n        if (a.health_status === \"red\" && b.health_status !== \"red\") {\r\n          return 1;\r\n        }\r\n\r\n        if (a.health_status !== \"red\" && b.health_status === \"red\") {\r\n          return -1;\r\n        }\r\n\r\n        return 0;\r\n      case \"failing_status\":\r\n        if (a.health_status === \"green\" && b.health_status !== \"green\") {\r\n          return 1;\r\n        }\r\n\r\n        if (a.health_status !== \"green\" && b.health_status === \"green\") {\r\n          return -1;\r\n        }\r\n\r\n        return 0;\r\n      default:\r\n        if (a.name > b.name) {\r\n          return 1;\r\n        }\r\n        if (a.name < b.name) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchRecords = () => {\r\n        api\r\n          .invoke(\"GET\", `/api/v1/tenants`)\r\n          .then((res: ITenantsResponse) => {\r\n            if (res === null) {\r\n              setIsLoading(false);\r\n              return;\r\n            }\r\n            let resTenants: ITenant[] = [];\r\n            if (res.tenants !== null) {\r\n              resTenants = res.tenants;\r\n            }\r\n\r\n            for (let i = 0; i < resTenants.length; i++) {\r\n              resTenants[i].total_capacity = niceBytes(\r\n                resTenants[i].total_size + \"\"\r\n              );\r\n            }\r\n\r\n            setRecords(resTenants);\r\n            setIsLoading(false);\r\n          })\r\n          .catch((err: ErrorResponseHandler) => {\r\n            dispatch(setErrorSnackMessage(err));\r\n            setIsLoading(false);\r\n          });\r\n      };\r\n      fetchRecords();\r\n    }\r\n  }, [isLoading, dispatch]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  const renderItemLine = (index: number) => {\r\n    const tenant = filteredRecords[index] || null;\r\n\r\n    if (tenant) {\r\n      return <TenantListItem tenant={tenant} />;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {showNewCredentials && (\r\n        <CredentialsPrompt\r\n          newServiceAccount={createdAccount}\r\n          open={showNewCredentials}\r\n          closeModal={() => {\r\n            closeCredentialsModal();\r\n          }}\r\n          entity=\"Tenant\"\r\n        />\r\n      )}\r\n      <PageHeader\r\n        label=\"Tenants\"\r\n        middleComponent={\r\n          <SearchBox\r\n            placeholder={\"Filter Tenants\"}\r\n            onChange={(val) => {\r\n              setFilterTenants(val);\r\n            }}\r\n            value={filterTenants}\r\n          />\r\n        }\r\n        actions={\r\n          <Grid item xs={12} marginRight={\"30px\"}>\r\n            <RBIconButton\r\n              id={\"refresh-tenant-list\"}\r\n              tooltip={\"Refresh Tenant List\"}\r\n              text={\"\"}\r\n              onClick={() => {\r\n                setIsLoading(true);\r\n              }}\r\n              icon={<RefreshIcon />}\r\n              color=\"primary\"\r\n              variant={\"outlined\"}\r\n            />\r\n            <RBIconButton\r\n              id={\"create-tenant\"}\r\n              tooltip={\"Create Tenant\"}\r\n              text={\"Create Tenant\"}\r\n              onClick={() => {\r\n                navigate(\"/tenants/add\");\r\n              }}\r\n              icon={<AddIcon />}\r\n              color=\"primary\"\r\n              variant={\"contained\"}\r\n            />\r\n          </Grid>\r\n        }\r\n      />\r\n      <PageLayout>\r\n        <Grid item xs={12} className={classes.tenantsList}>\r\n          {isLoading && <LinearProgress />}\r\n          {!isLoading && (\r\n            <Fragment>\r\n              {filteredRecords.length !== 0 && (\r\n                <Fragment>\r\n                  <Grid item xs={12} className={classes.sortByContainer}>\r\n                    <div className={classes.innerSort}>\r\n                      <span className={classes.sortByLabel}>Sort by</span>\r\n                      <SelectWrapper\r\n                        id={\"sort-by\"}\r\n                        label={\"\"}\r\n                        value={sortValue}\r\n                        onChange={(e: SelectChangeEvent<string>) => {\r\n                          setSortValue(e.target.value as string);\r\n                        }}\r\n                        name={\"sort-by\"}\r\n                        options={[\r\n                          { label: \"Name\", value: \"name\" },\r\n                          {\r\n                            label: \"Capacity\",\r\n                            value: \"capacity\",\r\n                          },\r\n                          {\r\n                            label: \"Usage\",\r\n                            value: \"usage\",\r\n                          },\r\n                          {\r\n                            label: \"Active Status\",\r\n                            value: \"active_status\",\r\n                          },\r\n                          {\r\n                            label: \"Failing Status\",\r\n                            value: \"failing_status\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                  <VirtualizedList\r\n                    rowRenderFunction={renderItemLine}\r\n                    totalItems={filteredRecords.length}\r\n                  />\r\n                </Fragment>\r\n              )}\r\n              {filteredRecords.length === 0 && (\r\n                <Grid\r\n                  container\r\n                  justifyContent={\"center\"}\r\n                  alignContent={\"center\"}\r\n                  alignItems={\"center\"}\r\n                >\r\n                  <Grid item xs={8}>\r\n                    <HelpBox\r\n                      iconComponent={<TenantsIcon />}\r\n                      title={\"Tenants\"}\r\n                      help={\r\n                        <Fragment>\r\n                          Tenant is the logical structure to represent a MinIO\r\n                          deployment. A tenant can have different size and\r\n                          configurations from other tenants, even a different\r\n                          storage class.\r\n                          <br />\r\n                          <br />\r\n                          To get started,&nbsp;\r\n                          <AButton\r\n                            onClick={() => {\r\n                              navigate(\"/tenants/add\");\r\n                            }}\r\n                          >\r\n                            Create a Tenant.\r\n                          </AButton>\r\n                        </Fragment>\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Fragment>\r\n          )}\r\n        </Grid>\r\n      </PageLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ListTenants);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\n\r\nexport interface ISizeBarItem {\r\n  value: number;\r\n  itemName: string;\r\n  color: string;\r\n}\r\n\r\nexport interface IUsageBar {\r\n  totalValue: number;\r\n  sizeItems: ISizeBarItem[];\r\n  bgColor?: string;\r\n}\r\n\r\nconst UsageBar = ({\r\n  totalValue,\r\n  sizeItems,\r\n  bgColor = \"#ededed\",\r\n}: IUsageBar) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: 12,\r\n        backgroundColor: bgColor,\r\n        borderRadius: 30,\r\n        display: \"flex\",\r\n        transitionDuration: \"0.3s\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {sizeItems.map((sizeElement, index) => {\r\n        const itemPercentage = (sizeElement.value * 100) / totalValue;\r\n        return (\r\n          <div\r\n            key={`itemSize-${index.toString()}`}\r\n            style={{\r\n              width: `${itemPercentage}%`,\r\n              height: \"100%\",\r\n              backgroundColor: sizeElement.color,\r\n              transitionDuration: \"0.3s\",\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsageBar;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Cell, Pie, PieChart } from \"recharts\";\r\nimport { CapacityValue, CapacityValues } from \"./types\";\r\nimport { niceBytesInt } from \"../../../../common/utils\";\r\nimport { CircleIcon } from \"../../../../icons\";\r\nimport UsageBar, { ISizeBarItem } from \"../../Common/UsageBar/UsageBar\";\r\n\r\ninterface ITenantCapacity {\r\n  totalCapacity: number;\r\n  usedSpaceVariants: CapacityValues[];\r\n  statusClass: string;\r\n  render?: \"pie\" | \"bar\";\r\n}\r\n\r\nconst TenantCapacity = ({\r\n  totalCapacity,\r\n  usedSpaceVariants,\r\n  statusClass,\r\n  render = \"pie\",\r\n}: ITenantCapacity) => {\r\n  const colors = [\r\n    \"#8dacd3\",\r\n    \"#bca1ea\",\r\n    \"#92e8d2\",\r\n    \"#efc9ac\",\r\n    \"#97f274\",\r\n    \"#f7d291\",\r\n    \"#71ACCB\",\r\n    \"#f28282\",\r\n    \"#e28cc1\",\r\n    \"#2781B0\",\r\n  ];\r\n\r\n  const BGColor = \"#ededed\";\r\n\r\n  const totalUsedSpace = usedSpaceVariants.reduce((acc, currValue) => {\r\n    return acc + currValue.value;\r\n  }, 0);\r\n\r\n  const emptySpace = totalCapacity - totalUsedSpace;\r\n\r\n  let tiersList: CapacityValue[] = [];\r\n\r\n  const standardTier = usedSpaceVariants.find(\r\n    (tier) => tier.variant === \"STANDARD\"\r\n  ) || {\r\n    value: 0,\r\n    variant: \"empty\",\r\n  };\r\n\r\n  if (usedSpaceVariants.length > 10) {\r\n    const totalUsedByTiers = totalUsedSpace - standardTier.value;\r\n\r\n    tiersList = [\r\n      { value: totalUsedByTiers, color: \"#2781B0\", label: \"Total Tiers Space\" },\r\n    ];\r\n  } else {\r\n    tiersList = usedSpaceVariants\r\n      .filter((variant) => variant.variant !== \"STANDARD\")\r\n      .map((variant, index) => {\r\n        return {\r\n          value: variant.value,\r\n          color: colors[index],\r\n          label: `Tier - ${variant.variant}`,\r\n        };\r\n      });\r\n  }\r\n\r\n  let standardTierColor = \"#07193E\";\r\n\r\n  const usedPercentage = (standardTier.value * 100) / totalCapacity;\r\n\r\n  if (usedPercentage >= 90) {\r\n    standardTierColor = \"#C83B51\";\r\n  } else if (usedPercentage >= 75) {\r\n    standardTierColor = \"#FFAB0F\";\r\n  }\r\n\r\n  const plotValues: CapacityValue[] = [\r\n    {\r\n      value: standardTier.value,\r\n      color: standardTierColor,\r\n      label: \"Used Space by Tenant\",\r\n    },\r\n    ...tiersList,\r\n    {\r\n      value: emptySpace,\r\n      color: render === \"bar\" ? BGColor : \"transparent\",\r\n      label: \"Empty Space\",\r\n    },\r\n  ];\r\n\r\n  if (render === \"bar\") {\r\n    const plotValuesForUsageBar: ISizeBarItem[] = plotValues.map((plotVal) => {\r\n      return {\r\n        value: plotVal.value,\r\n        color: plotVal.color,\r\n        itemName: plotVal.label,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div style={{ width: \"100%\", marginBottom: 15 }}>\r\n        <UsageBar\r\n          totalValue={totalCapacity}\r\n          sizeItems={plotValuesForUsageBar}\r\n          bgColor={BGColor}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", width: 110, height: 110 }}>\r\n      <div\r\n        style={{ position: \"absolute\", right: -5, top: 15, zIndex: 400 }}\r\n        className={statusClass}\r\n      >\r\n        <CircleIcon\r\n          style={{\r\n            border: \"#fff 2px solid\",\r\n            borderRadius: \"100%\",\r\n            width: 20,\r\n            height: 20,\r\n          }}\r\n        />\r\n      </div>\r\n      <span\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          fontWeight: \"bold\",\r\n          color: \"#000\",\r\n          fontSize: 12,\r\n        }}\r\n      >\r\n        {!isNaN(totalUsedSpace) ? niceBytesInt(totalUsedSpace) : \"N/A\"}\r\n      </span>\r\n      <div>\r\n        <PieChart width={110} height={110}>\r\n          <Pie\r\n            data={[{ value: 100 }]}\r\n            cx={\"50%\"}\r\n            cy={\"50%\"}\r\n            dataKey=\"value\"\r\n            outerRadius={50}\r\n            innerRadius={40}\r\n            fill={BGColor}\r\n            isAnimationActive={false}\r\n            stroke={\"none\"}\r\n          />\r\n          <Pie\r\n            data={plotValues}\r\n            cx={\"50%\"}\r\n            cy={\"50%\"}\r\n            dataKey=\"value\"\r\n            outerRadius={50}\r\n            innerRadius={40}\r\n          >\r\n            {plotValues.map((entry, index) => (\r\n              <Cell\r\n                key={`cellCapacity-${index}`}\r\n                fill={entry.color}\r\n                stroke={\"none\"}\r\n              />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TenantCapacity;\r\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","padding","margin","textDecoration","cursor","color","palette","info","main","fontFamily","children","rest","WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","searchField","adornment","placeholder","onChange","adornmentPosition","overrideClass","value","inputProps","disableUnderline","position","id","label","InputProps","e","target","variant","itemStatusMap","rowRenderFunction","totalItems","defaultHeight","RenderItemLine","index","style","Fragment","isItemLoaded","loadMoreItems","startIndex","stopIndex","itemCount","onItemsRendered","ref","itemSize","unit","textAlign","whiteSpace","redState","error","float","yellowState","warning","greenState","success","greyState","tenantIcon","tenantItem","titleContainer","justifyContent","namespaceLabel","status","tenant","dispatch","useAppDispatch","navigate","useNavigate","raw","capacity","used","localUse","tieredUse","capacity_raw","parts","niceBytes","split","capacity_usage","niceBytesInt","spaceVariants","tiers","length","map","itemTenant","size","name","internalUsage","filter","type","reduce","sum","tieredUsage","partsInternal","onClick","setTenantName","namespace","getTenantAsync","Grid","sx","marginTop","TenantCapacity","totalCapacity","usedSpaceVariants","statusClass","health_status","healthStatusToClass","pool_count","toString","currentState","justifyItems","CredentialsPrompt","withSuspense","React","actionsTray","containerForHeader","spacing","theaderSearch","borderColor","grey","actionHeaderItems","marginLeft","tenantsList","sortByContainer","innerSort","maxWidth","flexDirection","sortByLabel","useState","isLoading","setIsLoading","filterTenants","setFilterTenants","records","setRecords","showNewCredentials","setShowNewCredentials","createdAccount","setCreatedAccount","sortValue","setSortValue","filteredRecords","b","indexOf","sort","a","useEffect","api","then","res","resTenants","tenants","i","total_capacity","total_size","catch","err","setErrorSnackMessage","newServiceAccount","open","closeModal","entity","PageHeader","middleComponent","SearchBox","val","actions","RBIconButton","tooltip","text","icon","RefreshIcon","PageLayout","LinearProgress","SelectWrapper","options","VirtualizedList","alignContent","HelpBox","AButton","totalValue","sizeItems","bgColor","transitionDuration","overflow","sizeElement","itemPercentage","render","colors","BGColor","totalUsedSpace","acc","currValue","emptySpace","tiersList","standardTier","find","tier","standardTierColor","usedPercentage","plotValues","plotValuesForUsageBar","plotVal","itemName","right","top","zIndex","left","transform","isNaN","PieChart","Pie","data","cx","cy","dataKey","outerRadius","innerRadius","fill","isAnimationActive","stroke","entry","Cell"],"sourceRoot":""}
{"version":3,"file":"static/js/9145.2e7a2761.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/SubnetLicenseTenant.tsx","screens/Console/Tenants/TenantDetails/TenantLicense.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { containerForHeader } from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { niceBytes } from \"../../../../common/utils\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { ITenant } from \"../ListTenants/types\";\r\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\r\nimport { SubnetInfo } from \"../../License/types\";\r\n\r\ninterface ISubnetLicenseTenant {\r\n  classes: any;\r\n  tenant: ITenant | null;\r\n  loadingActivateProduct: any;\r\n  loadingLicenseInfo: boolean;\r\n  licenseInfo: SubnetInfo | undefined;\r\n  activateProduct: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    paperContainer: {\r\n      padding: \"15px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    licenseInfoValue: {\r\n      textTransform: \"none\",\r\n      fontSize: 14,\r\n      fontWeight: \"bold\",\r\n    },\r\n    licenseContainer: {\r\n      position: \"relative\",\r\n      padding: \"20px 52px 0px 28px\",\r\n      background: \"#032F51\",\r\n      boxShadow: \"0px 3px 7px #00000014\",\r\n      \"& h2\": {\r\n        color: \"#FFF\",\r\n        marginBottom: 67,\r\n      },\r\n      \"& a\": {\r\n        textDecoration: \"none\",\r\n      },\r\n      \"& h3\": {\r\n        color: \"#FFFFFF\",\r\n        marginBottom: \"30px\",\r\n        fontWeight: \"bold\",\r\n      },\r\n      \"& h6\": {\r\n        color: \"#FFFFFF !important\",\r\n      },\r\n    },\r\n    licenseInfo: { color: \"#FFFFFF\", position: \"relative\" },\r\n    licenseInfoTitle: {\r\n      textTransform: \"none\",\r\n      color: \"#BFBFBF\",\r\n      fontSize: 11,\r\n    },\r\n    verifiedIcon: {\r\n      width: 96,\r\n      position: \"absolute\",\r\n      right: 0,\r\n      bottom: 29,\r\n    },\r\n    noUnderLine: {\r\n      textDecoration: \"none\",\r\n    },\r\n    ...containerForHeader(theme.spacing(4)),\r\n  });\r\n\r\nconst SubnetLicenseTenant = ({\r\n  classes,\r\n  tenant,\r\n  loadingActivateProduct,\r\n  loadingLicenseInfo,\r\n  licenseInfo,\r\n  activateProduct,\r\n}: ISubnetLicenseTenant) => {\r\n  return (\r\n    <Paper\r\n      className={\r\n        tenant && tenant.subnet_license ? classes.licenseContainer : \"\"\r\n      }\r\n    >\r\n      {tenant && tenant.subnet_license ? (\r\n        <React.Fragment>\r\n          <Grid container className={classes.licenseInfo}>\r\n            <Grid item xs={6}>\r\n              <Typography\r\n                variant=\"button\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoTitle}\r\n              >\r\n                License\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoValue}\r\n              >\r\n                Commercial License\r\n              </Typography>\r\n              <Typography\r\n                variant=\"button\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoTitle}\r\n              >\r\n                Organization\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoValue}\r\n              >\r\n                {tenant.subnet_license.organization}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"button\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoTitle}\r\n              >\r\n                Registered Capacity\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoValue}\r\n              >\r\n                {niceBytes(\r\n                  (tenant.subnet_license.storage_capacity * 1099511627776) // 1 Terabyte = 1099511627776 Bytes\r\n                    .toString(10)\r\n                )}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"button\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoTitle}\r\n              >\r\n                Expiry Date\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoValue}\r\n              >\r\n                <Moment format=\"YYYY-MM-DD\">\r\n                  {tenant.subnet_license.expires_at}\r\n                </Moment>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography\r\n                variant=\"button\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoTitle}\r\n              >\r\n                Subscription Plan\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoValue}\r\n              >\r\n                {tenant.subnet_license.plan}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"button\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoTitle}\r\n              >\r\n                Requestor\r\n              </Typography>\r\n              <Typography\r\n                variant=\"overline\"\r\n                display=\"block\"\r\n                gutterBottom\r\n                className={classes.licenseInfoValue}\r\n              >\r\n                {tenant.subnet_license.email}\r\n              </Typography>\r\n            </Grid>\r\n            <img\r\n              className={classes.verifiedIcon}\r\n              src={\"/verified.svg\"}\r\n              alt=\"verified\"\r\n            />\r\n          </Grid>\r\n        </React.Fragment>\r\n      ) : (\r\n        !loadingLicenseInfo && (\r\n          <Grid className={classes.paperContainer}>\r\n            {!licenseInfo && (\r\n              <Link\r\n                to={\"/license\"}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                }}\r\n                className={classes.noUnderLine}\r\n              >\r\n                <RBIconButton\r\n                  tooltip={\"Activate Product\"}\r\n                  text={\"Activate Product\"}\r\n                  onClick={() => false}\r\n                  color=\"primary\"\r\n                  variant={\"contained\"}\r\n                />\r\n              </Link>\r\n            )}\r\n            {licenseInfo && tenant && (\r\n              <RBIconButton\r\n                disabled={loadingActivateProduct}\r\n                tooltip={\"Attach License\"}\r\n                text={\"Attach License\"}\r\n                onClick={() => activateProduct(tenant.namespace, tenant.name)}\r\n                color=\"primary\"\r\n                variant={\"contained\"}\r\n              />\r\n            )}\r\n          </Grid>\r\n        )\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SubnetLicenseTenant);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {\r\n  containerForHeader,\r\n  tenantDetailsStyles,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport { SubnetInfo } from \"../../License/types\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport SubnetLicenseTenant from \"./SubnetLicenseTenant\";\r\nimport api from \"../../../../common/api\";\r\nimport Loader from \"../../Common/Loader/Loader\";\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { setTenantDetailsLoad } from \"../tenantsSlice\";\r\n\r\ninterface ITenantLicense {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...tenantDetailsStyles,\r\n    loaderAlign: {\r\n      textAlign: \"center\",\r\n    },\r\n    ...containerForHeader(theme.spacing(4)),\r\n  });\r\n\r\nconst TenantLicense = ({ classes }: ITenantLicense) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const loadingTenant = useSelector(\r\n    (state: AppState) => state.tenants.loadingTenant\r\n  );\r\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\r\n\r\n  const [licenseInfo, setLicenseInfo] = useState<SubnetInfo>();\r\n  const [loadingLicenseInfo, setLoadingLicenseInfo] = useState<boolean>(true);\r\n  const [loadingActivateProduct, setLoadingActivateProduct] =\r\n    useState<boolean>(false);\r\n\r\n  const activateProduct = (namespace: string, tenant: string) => {\r\n    if (loadingActivateProduct) {\r\n      return;\r\n    }\r\n    setLoadingActivateProduct(true);\r\n    api\r\n      .invoke(\r\n        \"POST\",\r\n        `/api/v1/subscription/namespaces/${namespace}/tenants/${tenant}/activate`,\r\n        {}\r\n      )\r\n      .then(() => {\r\n        setLoadingActivateProduct(false);\r\n        dispatch(setTenantDetailsLoad(true));\r\n        setLoadingLicenseInfo(true);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setLoadingActivateProduct(false);\r\n        dispatch(setErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadingLicenseInfo) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/subscription/info`)\r\n        .then((res: SubnetInfo) => {\r\n          setLicenseInfo(res);\r\n          setLoadingLicenseInfo(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setLoadingLicenseInfo(false);\r\n        });\r\n    }\r\n  }, [loadingLicenseInfo]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className={classes.sectionTitle}>License</h1>\r\n      {loadingTenant ? (\r\n        <div className={classes.loaderAlign}>\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <Fragment>\r\n          {tenant && (\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <SubnetLicenseTenant\r\n                  tenant={tenant}\r\n                  loadingLicenseInfo={loadingLicenseInfo}\r\n                  loadingActivateProduct={loadingActivateProduct}\r\n                  licenseInfo={licenseInfo}\r\n                  activateProduct={activateProduct}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(TenantLicense);\r\n"],"names":["withStyles","theme","createStyles","paperContainer","padding","display","alignItems","justifyContent","licenseInfoValue","textTransform","fontSize","fontWeight","licenseContainer","position","background","boxShadow","color","marginBottom","textDecoration","licenseInfo","licenseInfoTitle","verifiedIcon","width","right","bottom","noUnderLine","containerForHeader","spacing","classes","tenant","loadingActivateProduct","loadingLicenseInfo","activateProduct","Paper","className","subnet_license","Grid","container","item","xs","Typography","variant","gutterBottom","organization","niceBytes","storage_capacity","toString","format","expires_at","plan","email","src","alt","to","onClick","e","stopPropagation","RBIconButton","tooltip","text","disabled","namespace","name","tenantDetailsStyles","loaderAlign","textAlign","dispatch","useAppDispatch","loadingTenant","useSelector","state","tenants","tenantInfo","useState","setLicenseInfo","setLoadingLicenseInfo","setLoadingActivateProduct","useEffect","api","then","res","catch","err","Fragment","sectionTitle","Loader","setTenantDetailsLoad","setErrorSnackMessage"],"sourceRoot":""}
{"version":3,"file":"static/js/5367.4abbf09c.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/EditTenantMonitoringScreen.tsx","screens/Console/Tenants/TenantDetails/KeyPairEdit.tsx","screens/Console/Tenants/securityContextSelector.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  containerForHeader,\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  spacingUtils,\r\n  tenantDetailsStyles,\r\n  wizardCommon,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport api from \"../../../../common/api\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { Button, DialogContentText } from \"@mui/material\";\r\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\r\nimport {\r\n  setErrorSnackMessage,\r\n  setSnackBarMessage,\r\n} from \"../../../../systemSlice\";\r\nimport { IKeyValue } from \"../ListTenants/types\";\r\nimport KeyPairEdit from \"./KeyPairEdit\";\r\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\r\nimport { ITenantMonitoringStruct } from \"../ListTenants/types\";\r\nimport {\r\n  setPrometheusEnabled,\r\n  setImage,\r\n  setSidecarImage,\r\n  setInitImage,\r\n  setStorageClassName,\r\n  setDiskCapacityGB,\r\n  setServiceAccountName,\r\n  setCPURequest,\r\n  setMemRequest,\r\n  setRunAsGroup,\r\n  setFSGroup,\r\n  setRunAsUser,\r\n  setRunAsNonRoot,\r\n} from \"../TenantDetails/tenantMonitoringSlice\";\r\nimport { clearValidationError, imagePattern, numericPattern } from \"../utils\";\r\nimport SecurityContextSelector from \"../securityContextSelector\";\r\nimport { setFSGroupChangePolicy } from \"../tenantSecurityContextSlice\";\r\nimport { fsGroupChangePolicyType } from \"../types\";\r\n\r\ninterface ITenantMonitoring {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...tenantDetailsStyles,\r\n    ...spacingUtils,\r\n    bold: { fontWeight: \"bold\" },\r\n    italic: { fontStyle: \"italic\" },\r\n    fileItem: {\r\n      marginRight: 10,\r\n      display: \"flex\",\r\n      \"& div label\": {\r\n        minWidth: 50,\r\n      },\r\n\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n      },\r\n    },\r\n    ...containerForHeader(theme.spacing(4)),\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst TenantMonitoring = ({ classes }: ITenantMonitoring) => {\r\n  const dispatch = useAppDispatch();\r\n  const { tenantName, tenantNamespace } = useParams();\r\n  const prometheusEnabled = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.prometheusEnabled\r\n  );\r\n  const image = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.image\r\n  );\r\n  const sidecarImage = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.sidecarImage\r\n  );\r\n  const initImage = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.initImage\r\n  );\r\n  const diskCapacityGB = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.diskCapacityGB\r\n  );\r\n  const cpuRequest = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.monitoringCPURequest\r\n  );\r\n  const memRequest = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.monitoringMemRequest\r\n  );\r\n  const serviceAccountName = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.serviceAccountName\r\n  );\r\n  const storageClassName = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.storageClassName\r\n  );\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n  const [toggleConfirmOpen, setToggleConfirmOpen] = useState<boolean>(false);\r\n\r\n  const [labels, setLabels] = useState<IKeyValue[]>([{ key: \"\", value: \"\" }]);\r\n  const [annotations, setAnnotations] = useState<IKeyValue[]>([\r\n    { key: \"\", value: \"\" },\r\n  ]);\r\n  const [nodeSelector, setNodeSelector] = useState<IKeyValue[]>([\r\n    { key: \"\", value: \"\" },\r\n  ]);\r\n\r\n  const [refreshMonitoringInfo, setRefreshMonitoringInfo] =\r\n    useState<boolean>(true);\r\n  const [labelsError, setLabelsError] = useState<any>({});\r\n  const [annotationsError, setAnnotationsError] = useState<any>({});\r\n  const [nodeSelectorError, setNodeSelectorError] = useState<any>({});\r\n\r\n  const runAsGroup = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.runAsGroup\r\n  );\r\n  const runAsUser = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.runAsUser\r\n  );\r\n  const fsGroup = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.fsGroup\r\n  );\r\n  const runAsNonRoot = useSelector(\r\n    (state: AppState) => state.editTenantMonitoring.runAsNonRoot\r\n  );\r\n  const fsGroupChangePolicy = useSelector(\r\n    (state: AppState) => state.editTenantSecurityContext.fsGroupChangePolicy\r\n  );\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  const setMonitoringInfo = (res: ITenantMonitoringStruct) => {\r\n    dispatch(setImage(res.image));\r\n    dispatch(setSidecarImage(res.sidecarImage));\r\n    dispatch(setInitImage(res.initImage));\r\n    dispatch(setStorageClassName(res.storageClassName));\r\n    dispatch(setDiskCapacityGB(res.diskCapacityGB));\r\n    dispatch(setServiceAccountName(res.serviceAccountName));\r\n    dispatch(setCPURequest(res.monitoringCPURequest));\r\n    if (res.monitoringMemRequest) {\r\n      dispatch(\r\n        setMemRequest(\r\n          Math.floor(\r\n            parseInt(res.monitoringMemRequest, 10) / 1000000000\r\n          ).toString()\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(setMemRequest(\"0\"));\r\n    }\r\n    res.labels != null\r\n      ? setLabels(res.labels)\r\n      : setLabels([{ key: \"\", value: \"\" }]);\r\n    res.annotations != null\r\n      ? setAnnotations(res.annotations)\r\n      : setAnnotations([{ key: \"\", value: \"\" }]);\r\n    res.nodeSelector != null\r\n      ? setNodeSelector(res.nodeSelector)\r\n      : setNodeSelector([{ key: \"\", value: \"\" }]);\r\n    dispatch(setRunAsGroup(res.securityContext.runAsGroup));\r\n    dispatch(setRunAsUser(res.securityContext.runAsUser));\r\n    dispatch(setRunAsNonRoot(res.securityContext.runAsNonRoot));\r\n    dispatch(setFSGroup(res.securityContext.fsGroup));\r\n  };\r\n\r\n  const trim = (x: IKeyValue[]): IKeyValue[] => {\r\n    let retval: IKeyValue[] = [];\r\n    for (let i = 0; i < x.length; i++) {\r\n      if (x[i].key !== \"\") {\r\n        retval.push(x[i]);\r\n      }\r\n    }\r\n    return retval;\r\n  };\r\n\r\n  const checkValid = (): boolean => {\r\n    if (\r\n      Object.keys(validationErrors).length !== 0 ||\r\n      Object.keys(labelsError).length !== 0 ||\r\n      Object.keys(annotationsError).length !== 0 ||\r\n      Object.keys(nodeSelectorError).length !== 0\r\n    ) {\r\n      let err: ErrorResponseHandler = {\r\n        errorMessage: \"Invalid entry\",\r\n        detailedError: \"\",\r\n      };\r\n      dispatch(setErrorSnackMessage(err));\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refreshMonitoringInfo) {\r\n      api\r\n        .invoke(\r\n          \"GET\",\r\n          `/api/v1/namespaces/${tenantNamespace || \"\"}/tenants/${\r\n            tenantName || \"\"\r\n          }/monitoring`\r\n        )\r\n        .then((res: ITenantMonitoringStruct) => {\r\n          dispatch(setPrometheusEnabled(res.prometheusEnabled));\r\n          setMonitoringInfo(res);\r\n          setRefreshMonitoringInfo(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          dispatch(setErrorSnackMessage(err));\r\n          setRefreshMonitoringInfo(false);\r\n        });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [refreshMonitoringInfo]);\r\n\r\n  const submitMonitoringInfo = () => {\r\n    if (checkValid()) {\r\n      const securityContext = {\r\n        runAsGroup: runAsGroup != null ? runAsGroup : \"0\",\r\n        runAsUser: runAsUser != null ? runAsUser : \"0\",\r\n        fsGroup: fsGroup != null ? fsGroup : \"0\",\r\n        runAsNonRoot: runAsNonRoot != null ? runAsNonRoot : true,\r\n      };\r\n      api\r\n        .invoke(\r\n          \"PUT\",\r\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\r\n          {\r\n            labels: trim(labels),\r\n            annotations: trim(annotations),\r\n            nodeSelector: trim(nodeSelector),\r\n            image: image,\r\n            sidecarImage: sidecarImage,\r\n            initImage: initImage,\r\n            diskCapacityGB: diskCapacityGB,\r\n            serviceAccountName: serviceAccountName,\r\n            storageClassName: storageClassName,\r\n            monitoringCPURequest: cpuRequest,\r\n            monitoringMemRequest: memRequest + \"Gi\",\r\n            securityContext: securityContext,\r\n          }\r\n        )\r\n        .then(() => {\r\n          setRefreshMonitoringInfo(true);\r\n          dispatch(setSnackBarMessage(`Prometheus configuration updated.`));\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setErrorSnackMessage(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const togglePrometheus = () => {\r\n    const configInfo = {\r\n      prometheusEnabled: prometheusEnabled,\r\n      toggle: true,\r\n    };\r\n    api\r\n      .invoke(\r\n        \"PUT\",\r\n        `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\r\n        configInfo\r\n      )\r\n      .then(() => {\r\n        dispatch(setPrometheusEnabled(!prometheusEnabled));\r\n        setRefreshMonitoringInfo(true);\r\n        setToggleConfirmOpen(false);\r\n        setRefreshMonitoringInfo(true);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        dispatch(setErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {toggleConfirmOpen && (\r\n        <ConfirmDialog\r\n          isOpen={toggleConfirmOpen}\r\n          title={\r\n            !prometheusEnabled\r\n              ? \"Enable Prometheus monitoring for this tenant?\"\r\n              : \"Disable Prometheus monitoring for this tenant?\"\r\n          }\r\n          confirmText={!prometheusEnabled ? \"Enable\" : \"Disable\"}\r\n          cancelText=\"Cancel\"\r\n          onClose={() => setToggleConfirmOpen(false)}\r\n          onConfirm={togglePrometheus}\r\n          confirmationContent={\r\n            <DialogContentText>\r\n              {!prometheusEnabled\r\n                ? \"A small Prometheus server will be started per the configuration provided, which will collect the Prometheus metrics for your tenant.\"\r\n                : \" Current configuration will be lost, and defaults reset if reenabled.\"}\r\n            </DialogContentText>\r\n          }\r\n        />\r\n      )}\r\n      <Grid container spacing={1}>\r\n        <Grid item xs>\r\n          <h1 className={classes.sectionTitle}>Prometheus Monitoring </h1>\r\n        </Grid>\r\n        <Grid item xs={7} justifyContent={\"end\"} textAlign={\"right\"}>\r\n          <FormSwitchWrapper\r\n            label={\"\"}\r\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\r\n            checked={prometheusEnabled}\r\n            value={\"tenant_monitoring\"}\r\n            id=\"tenant-monitoring\"\r\n            name=\"tenant-monitoring\"\r\n            onChange={() => {\r\n              setToggleConfirmOpen(true);\r\n            }}\r\n            description=\"\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <hr className={classes.hrClass} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {prometheusEnabled && (\r\n        <Fragment>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`prometheus_image`}\r\n              label={\"Image\"}\r\n              placeholder={\"quay.io/prometheus/prometheus:latest\"}\r\n              name={`image`}\r\n              value={image}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setImage(event.target.value));\r\n                }\r\n                cleanValidation(`image`);\r\n              }}\r\n              key={`image`}\r\n              pattern={imagePattern}\r\n              error={validationErrors[`image`] || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`sidecarImage`}\r\n              label={\"Sidecar Image\"}\r\n              placeholder={\"library/alpine:latest\"}\r\n              name={`sidecarImage`}\r\n              value={sidecarImage}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setSidecarImage(event.target.value));\r\n                }\r\n                cleanValidation(`sidecarImage`);\r\n              }}\r\n              key={`sidecarImage`}\r\n              pattern={imagePattern}\r\n              error={validationErrors[`sidecarImage`] || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`initImage`}\r\n              label={\"Init Image\"}\r\n              placeholder={\"library/busybox:1.33.1\"}\r\n              name={`initImage`}\r\n              value={initImage}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setInitImage(event.target.value));\r\n                }\r\n                cleanValidation(`initImage`);\r\n              }}\r\n              key={`initImage`}\r\n              pattern={imagePattern}\r\n              error={validationErrors[`initImage`] || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`diskCapacityGB`}\r\n              label={\"Disk Capacity\"}\r\n              placeholder={\"Disk Capacity\"}\r\n              name={`diskCapacityGB`}\r\n              value={diskCapacityGB}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setDiskCapacityGB(event.target.value));\r\n                }\r\n                cleanValidation(`diskCapacityGB`);\r\n              }}\r\n              key={`diskCapacityGB`}\r\n              pattern={numericPattern}\r\n              error={validationErrors[`diskCapacityGB`] || \"\"}\r\n              overlayObject={\r\n                <InputUnitMenu\r\n                  id={\"size-unit\"}\r\n                  onUnitChange={() => {}}\r\n                  unitSelected={\"Gi\"}\r\n                  unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\r\n                  disabled={true}\r\n                />\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`cpuRequest`}\r\n              label={\"CPU Request\"}\r\n              placeholder={\"CPU Request\"}\r\n              name={`cpuRequest`}\r\n              value={cpuRequest}\r\n              pattern={numericPattern}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setCPURequest(event.target.value));\r\n                }\r\n                cleanValidation(`cpuRequest`);\r\n              }}\r\n              key={`cpuRequest`}\r\n              error={validationErrors[`cpuRequest`] || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`memRequest`}\r\n              label={\"Memory Request\"}\r\n              placeholder={\"Memory request\"}\r\n              name={`memRequest`}\r\n              value={memRequest}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setMemRequest(event.target.value));\r\n                }\r\n                cleanValidation(`memRequest`);\r\n              }}\r\n              pattern={numericPattern}\r\n              key={`memRequest`}\r\n              error={validationErrors[`memRequest`] || \"\"}\r\n              overlayObject={\r\n                <InputUnitMenu\r\n                  id={\"size-unit\"}\r\n                  onUnitChange={() => {}}\r\n                  unitSelected={\"Gi\"}\r\n                  unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\r\n                  disabled={true}\r\n                />\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`serviceAccountName`}\r\n              label={\"Service Account\"}\r\n              placeholder={\"Service Account Name\"}\r\n              name={`serviceAccountName`}\r\n              value={serviceAccountName}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setServiceAccountName(event.target.value));\r\n                }\r\n                cleanValidation(`serviceAccountName`);\r\n              }}\r\n              key={`serviceAccountName`}\r\n              pattern={\"^[a-zA-Z0-9-.]{1,253}$\"}\r\n              error={validationErrors[`serviceAccountName`] || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} paddingBottom={2}>\r\n            <InputBoxWrapper\r\n              id={`storageClassName`}\r\n              label={\"Storage Class\"}\r\n              placeholder={\"Storage Class Name\"}\r\n              name={`storageClassName`}\r\n              value={storageClassName}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                if (event.target.validity.valid) {\r\n                  dispatch(setStorageClassName(event.target.value));\r\n                }\r\n                cleanValidation(`storageClassName`);\r\n              }}\r\n              key={`storageClassName`}\r\n              pattern={\"^[a-zA-Z0-9-.]{1,253}$\"}\r\n              error={validationErrors[`storageClassName`] || \"\"}\r\n            />\r\n          </Grid>\r\n          {labels !== null && (\r\n            <Grid item xs={12} className={classes.formFieldRow}>\r\n              <span className={classes.inputLabel}>Labels</span>\r\n              <KeyPairEdit\r\n                newValues={labels}\r\n                setNewValues={setLabels}\r\n                paramName={\"Labels\"}\r\n                error={labelsError}\r\n                setError={setLabelsError}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          {annotations !== null && (\r\n            <Grid item xs={12} className={classes.formFieldRow}>\r\n              <span className={classes.inputLabel}>Annotations</span>\r\n              <KeyPairEdit\r\n                newValues={annotations}\r\n                setNewValues={setAnnotations}\r\n                paramName={\"Annotations\"}\r\n                error={annotationsError}\r\n                setError={setAnnotationsError}\r\n              />\r\n            </Grid>\r\n          )}\r\n          {nodeSelector !== null && (\r\n            <Grid item xs={12} className={classes.formFieldRow}>\r\n              <span className={classes.inputLabel}>Node Selector</span>\r\n              <KeyPairEdit\r\n                newValues={nodeSelector}\r\n                setNewValues={setNodeSelector}\r\n                paramName={\"Node Selector\"}\r\n                error={nodeSelectorError}\r\n                setError={setNodeSelectorError}\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <SecurityContextSelector\r\n              classes={classes}\r\n              runAsGroup={runAsGroup}\r\n              runAsUser={runAsUser}\r\n              fsGroup={fsGroup}\r\n              runAsNonRoot={runAsNonRoot}\r\n              fsGroupChangePolicy={fsGroupChangePolicy}\r\n              setFSGroup={(value: string) => dispatch(setFSGroup(value))}\r\n              setRunAsUser={(value: string) => dispatch(setRunAsUser(value))}\r\n              setRunAsGroup={(value: string) => dispatch(setRunAsGroup(value))}\r\n              setRunAsNonRoot={(value: boolean) =>\r\n                dispatch(setRunAsNonRoot(value))\r\n              }\r\n              setFSGroupChangePolicy={(value: fsGroupChangePolicyType) =>\r\n                dispatch(setFSGroupChangePolicy(value))\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} textAlign={\"right\"}>\r\n            <Button\r\n              type=\"submit\"\r\n              id={\"submit_button\"}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={!checkValid()}\r\n              onClick={() => submitMonitoringInfo()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(TenantMonitoring);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { IKeyValue } from \"../ListTenants/types\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../utils/validationFunctions\";\r\nimport { clearValidationError } from \"../utils\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\ninterface IKeyPairEditProps {\r\n  classes: any;\r\n  paramName: string;\r\n  error: any;\r\n  setError: (e: any) => void;\r\n  newValues: IKeyValue[];\r\n  setNewValues: (vals: IKeyValue[]) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    bottomContainer: {\r\n      display: \"flex\",\r\n      flexGrow: 1,\r\n      alignItems: \"center\",\r\n      \"& div\": {\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    shortened: {\r\n      gridTemplateColumns: \"auto auto 20px 20px\",\r\n      display: \"grid\",\r\n      gridGap: 20,\r\n      paddingRight: 20,\r\n    },\r\n    ...modalBasic,\r\n  });\r\n\r\nconst KeyPairEdit = ({\r\n  classes,\r\n  paramName,\r\n  newValues,\r\n  setNewValues,\r\n  error,\r\n  setError,\r\n}: IKeyPairEditProps) => {\r\n  const cleanValidation = (fieldName: string) => {\r\n    setError(clearValidationError(error, fieldName));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let keyPairValidation: IValidation[] = [];\r\n\r\n    for (var i = 0; i < newValues.length; i++) {\r\n      keyPairValidation.push({\r\n        fieldKey: `key-${i.toString()}`,\r\n        required: false,\r\n        value: newValues[i].key,\r\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\r\n        customPatternMessage: \"Invalid key\",\r\n      });\r\n      keyPairValidation.push({\r\n        fieldKey: `val-${i.toString()}`,\r\n        required: false,\r\n        value: newValues[i].value,\r\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\r\n        customPatternMessage: \"Invalid value\",\r\n      });\r\n    }\r\n\r\n    const commonVal = commonFormValidation(keyPairValidation);\r\n    setError(commonVal);\r\n  }, [newValues, setError]);\r\n\r\n  let keyValueInputs = newValues.map((_, index) => {\r\n    return (\r\n      <Fragment key={`keyvalue-${index.toString()}`}>\r\n        <Grid paddingBottom={1}>\r\n          <div className={classes.shortened}>\r\n            <InputBoxWrapper\r\n              id={`key-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\r\n              label={\"\"}\r\n              placeholder={\"Key\"}\r\n              name={`key-${index.toString()}`}\r\n              value={newValues[index].key}\r\n              onChange={(e) => {\r\n                let tempLabels = [...newValues];\r\n                tempLabels[index].key = e.target.value;\r\n                setNewValues(tempLabels);\r\n                cleanValidation(`key-${index.toString()}`);\r\n              }}\r\n              index={index}\r\n              key={`csv-key-${index.toString()}`}\r\n              error={error[`key-${index.toString()}`] || \"\"}\r\n            />\r\n            <InputBoxWrapper\r\n              id={`val-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\r\n              label={\"\"}\r\n              placeholder={\"Value\"}\r\n              name={`val-${index.toString()}`}\r\n              value={newValues[index].value}\r\n              onChange={(e) => {\r\n                let tempLabels = [...newValues];\r\n                tempLabels[index].value = e.target.value;\r\n                setNewValues(tempLabels);\r\n                cleanValidation(`val-${index.toString()}`);\r\n              }}\r\n              index={index}\r\n              key={`csv-val-${index.toString()}`}\r\n              error={error[`val-${index.toString()}`] || \"\"}\r\n            />\r\n            <Tooltip title={`Add ${paramName}`} aria-label=\"addlabel\">\r\n              <IconButton\r\n                id={`add-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\r\n                size={\"small\"}\r\n                onClick={() => {\r\n                  let tempLabels = [...newValues];\r\n                  tempLabels.push({ key: \"\", value: \"\" });\r\n                  setNewValues(tempLabels);\r\n                }}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Remove\" aria-label=\"removeLabel\">\r\n              <IconButton\r\n                id={`remove-${paramName.replace(/ /g, \"\")}-${index.toString()}`}\r\n                size={\"small\"}\r\n                style={{ marginLeft: 16 }}\r\n                onClick={() => {\r\n                  if (newValues.length === 1) {\r\n                    setNewValues([{ key: \"\", value: \"\" }]);\r\n                  }\r\n                  if (newValues.length > 1) {\r\n                    let tempLabels = [...newValues];\r\n                    tempLabels.splice(index, 1);\r\n                    setNewValues(tempLabels);\r\n                  }\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </Grid>\r\n      </Fragment>\r\n    );\r\n  });\r\n\r\n  return <Fragment>{keyValueInputs}</Fragment>;\r\n};\r\n\r\nexport default withStyles(styles)(KeyPairEdit);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport SelectWrapper from \"../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport { Grid, SelectChangeEvent } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { fsGroupChangePolicyType } from \"./types\";\r\n\r\ninterface IEditSecurityContextProps {\r\n  classes: any;\r\n  runAsUser: string;\r\n  runAsGroup: string;\r\n  fsGroup: string;\r\n  fsGroupChangePolicy: fsGroupChangePolicyType;\r\n  runAsNonRoot: boolean;\r\n  setRunAsUser: any;\r\n  setRunAsGroup: any;\r\n  setFSGroup: any;\r\n  setRunAsNonRoot: any;\r\n  setFSGroupChangePolicy: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    configSectionItem: {\r\n      marginRight: 15,\r\n      marginBottom: 15,\r\n      \"& .multiContainer\": {\r\n        border: \"1px solid red\",\r\n      },\r\n    },\r\n  });\r\n\r\nconst SecurityContextSelector = ({\r\n  classes,\r\n  runAsGroup,\r\n  runAsUser,\r\n  fsGroup,\r\n  fsGroupChangePolicy,\r\n  runAsNonRoot,\r\n  setRunAsUser,\r\n  setRunAsGroup,\r\n  setFSGroup,\r\n  setRunAsNonRoot,\r\n  setFSGroupChangePolicy,\r\n}: IEditSecurityContextProps) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Fragment>\r\n      <fieldset className={`${classes.fieldGroup} ${classes.fieldSpaceTop} `}>\r\n        <legend className={classes.descriptionText}>Security Context</legend>\r\n\r\n        <Grid item xs={12}>\r\n          <div className={`${classes.multiContainerStackNarrow} `}>\r\n            <div className={classes.configSectionItem}>\r\n              <InputBoxWrapper\r\n                type=\"number\"\r\n                id=\"securityContext_runAsUser\"\r\n                name=\"securityContext_runAsUser\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  dispatch(setRunAsUser(e.target.value));\r\n                }}\r\n                label=\"Run As User\"\r\n                value={runAsUser}\r\n                required\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n            <div className={classes.configSectionItem}>\r\n              <InputBoxWrapper\r\n                type=\"number\"\r\n                id=\"securityContext_runAsGroup\"\r\n                name=\"securityContext_runAsGroup\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  dispatch(setRunAsGroup(e.target.value));\r\n                }}\r\n                label=\"Run As Group\"\r\n                value={runAsGroup}\r\n                required\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={`${classes.multiContainerStackNarrow} `}>\r\n            <div className={classes.configSectionItem}>\r\n              <InputBoxWrapper\r\n                type=\"number\"\r\n                id=\"securityContext_fsGroup\"\r\n                name=\"securityContext_fsGroup\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  dispatch(setFSGroup(e.target.value));\r\n                }}\r\n                label=\"FsGroup\"\r\n                value={fsGroup}\r\n                required\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.configSectionItem}>\r\n              <SelectWrapper\r\n                label=\"FsGroupChangePolicy\"\r\n                id=\"securityContext_fsGroupChangePolicy\"\r\n                name=\"securityContext_fsGroupChangePolicy\"\r\n                onChange={(e: SelectChangeEvent<string>) => {\r\n                  dispatch(setFSGroupChangePolicy(e.target.value));\r\n                }}\r\n                value={fsGroupChangePolicy}\r\n                options={[\r\n                  {\r\n                    label: \"Always\",\r\n                    value: \"Always\",\r\n                  },\r\n                  {\r\n                    label: \"OnRootMismatch\",\r\n                    value: \"OnRootMismatch\",\r\n                  },\r\n                ]}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={classes.multiContainer}>\r\n            <FormSwitchWrapper\r\n              value=\"SecurityContextRunAsNonRoot\"\r\n              id=\"securityContext_runAsNonRoot\"\r\n              name=\"securityContext_runAsNonRoot\"\r\n              checked={runAsNonRoot}\r\n              onChange={() => {\r\n                dispatch(setRunAsNonRoot(!runAsNonRoot));\r\n              }}\r\n              label={\"Do not run as Root\"}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </fieldset>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SecurityContextSelector);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["withStyles","theme","createStyles","tenantDetailsStyles","spacingUtils","bold","fontWeight","italic","fontStyle","fileItem","marginRight","display","minWidth","flexFlow","containerForHeader","spacing","createTenantCommon","formFieldStyles","modalBasic","wizardCommon","classes","dispatch","useAppDispatch","useParams","tenantName","tenantNamespace","prometheusEnabled","useSelector","state","editTenantMonitoring","image","sidecarImage","initImage","diskCapacityGB","cpuRequest","monitoringCPURequest","memRequest","monitoringMemRequest","serviceAccountName","storageClassName","useState","validationErrors","setValidationErrors","toggleConfirmOpen","setToggleConfirmOpen","key","value","labels","setLabels","annotations","setAnnotations","nodeSelector","setNodeSelector","refreshMonitoringInfo","setRefreshMonitoringInfo","labelsError","setLabelsError","annotationsError","setAnnotationsError","nodeSelectorError","setNodeSelectorError","runAsGroup","runAsUser","fsGroup","runAsNonRoot","fsGroupChangePolicy","editTenantSecurityContext","cleanValidation","fieldName","clearValidationError","trim","x","retval","i","length","push","checkValid","Object","keys","setErrorSnackMessage","errorMessage","detailedError","useEffect","api","then","res","setPrometheusEnabled","setImage","setSidecarImage","setInitImage","setStorageClassName","setDiskCapacityGB","setServiceAccountName","setCPURequest","setMemRequest","Math","floor","parseInt","toString","setRunAsGroup","securityContext","setRunAsUser","setRunAsNonRoot","setFSGroup","setMonitoringInfo","catch","err","Fragment","isOpen","title","confirmText","cancelText","onClose","onConfirm","configInfo","toggle","confirmationContent","container","item","xs","className","sectionTitle","justifyContent","textAlign","label","indicatorLabels","checked","id","name","onChange","description","hrClass","paddingBottom","placeholder","event","target","validity","valid","pattern","imagePattern","error","numericPattern","overlayObject","onUnitChange","unitSelected","unitsList","disabled","formFieldRow","inputLabel","newValues","setNewValues","paramName","setError","setFSGroupChangePolicy","type","variant","color","onClick","setSnackBarMessage","submitMonitoringInfo","bottomContainer","flexGrow","alignItems","width","shortened","gridTemplateColumns","gridGap","paddingRight","keyPairValidation","fieldKey","required","customPatternMessage","commonVal","commonFormValidation","keyValueInputs","map","_","index","replace","e","tempLabels","size","style","marginLeft","splice","configSectionItem","marginBottom","border","useDispatch","fieldGroup","fieldSpaceTop","descriptionText","multiContainerStackNarrow","min","options","multiContainer","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
{"version":3,"file":"static/js/1260.d605159e.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","icons/CertificateIcon.tsx","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/HelpBox/TLSHelpBox.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigLogSearch.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigPrometheus.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/Console/Tenants/LogoComponents.tsx","screens/shared/ErrorBlock.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #E2E2E2\",\r\n      borderRadius: 2,\r\n      backgroundColor: \"#FBFAFA\",\r\n      paddingLeft: 25,\r\n      paddingTop: 31,\r\n      paddingBottom: 21,\r\n      paddingRight: 30,\r\n    },\r\n    leftItems: {\r\n      fontSize: 16,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 15,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& .min-icon\": {\r\n        marginRight: 15,\r\n        height: 28,\r\n        width: 38,\r\n      },\r\n    },\r\n    helpText: {\r\n      fontSize: 16,\r\n      paddingLeft: 5,\r\n    },\r\n  });\r\n\r\ninterface IHelpBox {\r\n  classes: any;\r\n  iconComponent: any;\r\n  title: string;\r\n  help: any;\r\n}\r\n\r\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.leftItems}>\r\n          {iconComponent}\r\n          {title}\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.helpText}>\r\n          {help}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(HelpBox);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport * as React from \"react\";\r\nimport { SVGProps } from \"react\";\r\n\r\nconst CertificateIcon = (props: SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={`min-icon`}\r\n      fill={\"currentcolor\"}\r\n      viewBox=\"0 0 256 256\"\r\n      {...props}\r\n    >\r\n      <defs>\r\n        <clipPath id=\"certificate_svg__a\">\r\n          <path\r\n            data-name=\"Rect\\xE1ngulo 2156\"\r\n            fill=\"#07193e\"\r\n            d=\"M0 0h256v222.048H0z\"\r\n          />\r\n        </clipPath>\r\n      </defs>\r\n      <g\r\n        data-name=\"Grupo 4763\"\r\n        transform=\"translate(0 17)\"\r\n        clipPath=\"url(#certificate_svg__a)\"\r\n        fill=\"#07193e\"\r\n      >\r\n        <path\r\n          data-name=\"Trazado 8152\"\r\n          d=\"M240-.002H16a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h120l4.64-5.6 7.44-9.12A66.72 66.72 0 0 1 256 98.958v-82.96a16 16 0 0 0-16-16m-130.96 149.7H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 1 1 0 14.592m0-56H47.3a7.3 7.3 0 1 1 0-14.592h61.74a7.3 7.3 0 0 1 0 14.592m66.96-39.3a6.419 6.419 0 0 1-6.4 6.4H46.4a6.419 6.419 0 0 1-6.4-6.4v-1.792a6.419 6.419 0 0 1 6.4-6.4h123.2a6.419 6.419 0 0 1 6.4 6.4Z\"\r\n        />\r\n        <path\r\n          data-name=\"Trazado 8153\"\r\n          d=\"M256 137.486a50.96 50.96 0 1 0-86.16 36.72l-15.52 18.96 7.2 28.88 29.28-35.68a50.018 50.018 0 0 0 28.4 0l29.28 35.68 7.2-28.88-15.52-18.96a50.75 50.75 0 0 0 15.84-36.72m-50.928 29.688a29.688 29.688 0 0 1-.072-59.376h.072a29.688 29.688 0 0 1 0 59.376\"\r\n        />\r\n      </g>\r\n      <path data-name=\"Rect\\xE1ngulo 2157\" fill=\"none\" d=\"M0 0h256v256H0z\" />\r\n    </svg>\r\n  );\r\n};\r\nexport default CertificateIcon;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\r\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { CopyIcon } from \"../../../../icons\";\r\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      padding: \"20px 0 8px 0\",\r\n    },\r\n    inputWithCopy: {\r\n      \"& .MuiInputBase-root \": {\r\n        width: \"100%\",\r\n        background: \"#FBFAFA\",\r\n        \"& .MuiInputBase-input\": {\r\n          height: \".8rem\",\r\n        },\r\n        \"& .MuiInputAdornment-positionEnd\": {\r\n          marginRight: \".5rem\",\r\n          \"& .MuiButtonBase-root\": {\r\n            height: \"2rem\",\r\n          },\r\n        },\r\n      },\r\n      \"& .MuiButtonBase-root .min-icon\": {\r\n        width: \".8rem\",\r\n        height: \".8rem\",\r\n      },\r\n    },\r\n    inputLabel: {\r\n      ...fieldBasic.inputLabel,\r\n      fontSize: \".8rem\",\r\n    },\r\n  });\r\n\r\nconst CredentialItem = ({\r\n  label = \"\",\r\n  value = \"\",\r\n  classes = {},\r\n}: {\r\n  label: string;\r\n  value: string;\r\n  classes: any;\r\n}) => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.inputLabel}>{label}:</div>\r\n      <div className={classes.inputWithCopy}>\r\n        <OutlinedInput\r\n          value={value}\r\n          readOnly\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <CopyToClipboard text={value}>\r\n                <BoxIconButton\r\n                  aria-label=\"copy\"\r\n                  tooltip={\"Copy\"}\r\n                  onClick={() => {}}\r\n                  onMouseDown={() => {}}\r\n                  edge=\"end\"\r\n                >\r\n                  <CopyIcon />\r\n                </BoxIconButton>\r\n              </CopyToClipboard>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CredentialItem);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { NewServiceAccount } from \"./types\";\r\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport CredentialItem from \"./CredentialItem\";\r\nimport WarnIcon from \"../../../../icons/WarnIcon\";\r\nimport { DownloadIcon, ServiceAccountCredentialsIcon } from \"../../../../icons\";\r\n\r\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    warningBlock: {\r\n      color: \"red\",\r\n      fontSize: \".85rem\",\r\n      margin: \".5rem 0 .5rem 0\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& svg \": {\r\n        marginRight: \".3rem\",\r\n        height: 16,\r\n        width: 16,\r\n      },\r\n    },\r\n    credentialTitle: {\r\n      padding: \".8rem 0 0 0\",\r\n      fontWeight: 600,\r\n      fontSize: \".9rem\",\r\n    },\r\n    buttonContainer: {\r\n      textAlign: \"right\",\r\n      marginTop: \"1rem\",\r\n    },\r\n    credentialsPanel: {\r\n      overflowY: \"auto\",\r\n      maxHeight: 350,\r\n    },\r\n    promptTitle: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    buttonSpacer: {\r\n      marginRight: \".9rem\",\r\n    },\r\n  });\r\n\r\ninterface ICredentialsPromptProps {\r\n  classes: any;\r\n  newServiceAccount: NewServiceAccount | null;\r\n  open: boolean;\r\n  entity: string;\r\n  closeModal: () => void;\r\n}\r\n\r\nconst download = (filename: string, text: string) => {\r\n  let element = document.createElement(\"a\");\r\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\r\n  element.setAttribute(\"download\", filename);\r\n\r\n  element.style.display = \"none\";\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n  document.body.removeChild(element);\r\n};\r\n\r\nconst CredentialsPrompt = ({\r\n  classes,\r\n  newServiceAccount,\r\n  open,\r\n  closeModal,\r\n  entity,\r\n}: ICredentialsPromptProps) => {\r\n  if (!newServiceAccount) {\r\n    return null;\r\n  }\r\n  const consoleCreds = get(newServiceAccount, \"console\", null);\r\n  const idp = get(newServiceAccount, \"idp\", false);\r\n\r\n  return (\r\n    <ModalWrapper\r\n      modalOpen={open}\r\n      onClose={() => {\r\n        closeModal();\r\n      }}\r\n      title={\r\n        <div className={classes.promptTitle}>\r\n          <div>New {entity} Created</div>\r\n        </div>\r\n      }\r\n      titleIcon={<ServiceAccountCredentialsIcon />}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.formScrollable}>\r\n          A new {entity} has been created with the following details:\r\n          {!idp && consoleCreds && (\r\n            <React.Fragment>\r\n              <Grid item xs={12} className={classes.credentialsPanel}>\r\n                <div className={classes.credentialTitle}>\r\n                  Console Credentials\r\n                </div>\r\n                {Array.isArray(consoleCreds) &&\r\n                  consoleCreds.map((credentialsPair, index) => {\r\n                    return (\r\n                      <>\r\n                        <CredentialItem\r\n                          label=\"Access Key\"\r\n                          value={credentialsPair.accessKey}\r\n                        />\r\n                        <CredentialItem\r\n                          label=\"Secret Key\"\r\n                          value={credentialsPair.secretKey}\r\n                        />\r\n                      </>\r\n                    );\r\n                  })}\r\n                {!Array.isArray(consoleCreds) && (\r\n                  <>\r\n                    <CredentialItem\r\n                      label=\"Access Key\"\r\n                      value={consoleCreds.accessKey}\r\n                    />\r\n                    <CredentialItem\r\n                      label=\"Secret Key\"\r\n                      value={consoleCreds.secretKey}\r\n                    />\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n          {(consoleCreds === null || consoleCreds === undefined) && (\r\n            <>\r\n              <CredentialItem\r\n                label=\"Access Key\"\r\n                value={newServiceAccount.accessKey || \"\"}\r\n              />\r\n              <CredentialItem\r\n                label=\"Secret Key\"\r\n                value={newServiceAccount.secretKey || \"\"}\r\n              />\r\n            </>\r\n          )}\r\n          {idp ? (\r\n            <div className={classes.warningBlock}>\r\n              Please Login via the configured external identity provider.\r\n            </div>\r\n          ) : (\r\n            <div className={classes.warningBlock}>\r\n              <WarnIcon />\r\n              <span>\r\n                Write these down, as this is the only time the secret will be\r\n                displayed.\r\n              </span>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.buttonContainer}>\r\n          {!idp && (\r\n            <>\r\n              <RBIconButton\r\n                id={\"download-button\"}\r\n                tooltip={\r\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\r\n                }\r\n                text={\"Download for import\"}\r\n                className={classes.buttonSpacer}\r\n                onClick={() => {\r\n                  let consoleExtras = {};\r\n\r\n                  if (consoleCreds) {\r\n                    if (!Array.isArray(consoleCreds)) {\r\n                      consoleExtras = {\r\n                        url: consoleCreds.url,\r\n                        accessKey: consoleCreds.accessKey,\r\n                        secretKey: consoleCreds.secretKey,\r\n                        api: \"s3v4\",\r\n                        path: \"auto\",\r\n                      };\r\n                    } else {\r\n                      const cCreds = consoleCreds.map((itemMap) => {\r\n                        return {\r\n                          url: itemMap.url,\r\n                          accessKey: itemMap.accessKey,\r\n                          secretKey: itemMap.secretKey,\r\n                          api: \"s3v4\",\r\n                          path: \"auto\",\r\n                        };\r\n                      });\r\n                      consoleExtras = cCreds[0];\r\n                    }\r\n                  } else {\r\n                    consoleExtras = {\r\n                      url: newServiceAccount.url,\r\n                      accessKey: newServiceAccount.accessKey,\r\n                      secretKey: newServiceAccount.secretKey,\r\n                      api: \"s3v4\",\r\n                      path: \"auto\",\r\n                    };\r\n                  }\r\n\r\n                  download(\r\n                    \"credentials.json\",\r\n                    JSON.stringify({\r\n                      ...consoleExtras,\r\n                    })\r\n                  );\r\n                }}\r\n                icon={<DownloadIcon />}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              />\r\n\r\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\r\n                <RBIconButton\r\n                  id={\"download-all-button\"}\r\n                  tooltip={\r\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\r\n                  }\r\n                  text={\"Download all access credentials\"}\r\n                  className={classes.buttonSpacer}\r\n                  onClick={() => {\r\n                    let allCredentials = {};\r\n                    if (consoleCreds) {\r\n                      const cCreds = consoleCreds.map((itemMap) => {\r\n                        return {\r\n                          accessKey: itemMap.accessKey,\r\n                          secretKey: itemMap.secretKey,\r\n                        };\r\n                      });\r\n                      allCredentials = cCreds;\r\n                    }\r\n                    download(\r\n                      \"all_credentials.json\",\r\n                      JSON.stringify({\r\n                        ...allCredentials,\r\n                      })\r\n                    );\r\n                  }}\r\n                  icon={<DownloadIcon />}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CredentialsPrompt);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState } from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  fieldBasic,\r\n  fileInputStyles,\r\n  tooltipHelper,\r\n} from \"../common/styleLibrary\";\r\nimport { fileProcess } from \"./utils\";\r\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\r\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\r\n\r\ninterface InputBoxProps {\r\n  label: string;\r\n  classes: any;\r\n  onChange: (e: string, i: string) => void;\r\n  id: string;\r\n  name: string;\r\n  disabled?: boolean;\r\n  tooltip?: string;\r\n  required?: boolean;\r\n  error?: string;\r\n  accept?: string;\r\n  value?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n    valueString: {\r\n      maxWidth: 350,\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      marginTop: 2,\r\n    },\r\n    fileInputField: {\r\n      margin: \"13px 0\",\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n      },\r\n    },\r\n    ...fileInputStyles,\r\n    inputLabel: {\r\n      ...fieldBasic.inputLabel,\r\n      fontWeight: \"normal\",\r\n    },\r\n    textBoxContainer: {\r\n      ...fieldBasic.textBoxContainer,\r\n      maxWidth: \"100%\",\r\n      border: \"1px solid #eaeaea\",\r\n      paddingLeft: \"15px\",\r\n    },\r\n  });\r\n\r\nconst FileSelector = ({\r\n  label,\r\n  classes,\r\n  onChange,\r\n  id,\r\n  name,\r\n  disabled = false,\r\n  tooltip = \"\",\r\n  required,\r\n  error = \"\",\r\n  accept = \"\",\r\n  value = \"\",\r\n}: InputBoxProps) => {\r\n  const [showFileSelector, setShowSelector] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\r\n          classes.fieldContainer\r\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\r\n      >\r\n        {label !== \"\" && (\r\n          <InputLabel\r\n            htmlFor={id}\r\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\r\n              classes.inputLabel\r\n            }`}\r\n          >\r\n            <span>\r\n              {label}\r\n              {required ? \"*\" : \"\"}\r\n            </span>\r\n            {tooltip !== \"\" && (\r\n              <div className={classes.tooltipContainer}>\r\n                <Tooltip title={tooltip} placement=\"top-start\">\r\n                  <div className={classes.tooltip}>\r\n                    <HelpIcon />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </InputLabel>\r\n        )}\r\n\r\n        {showFileSelector || value === \"\" ? (\r\n          <div className={classes.textBoxContainer}>\r\n            <input\r\n              type=\"file\"\r\n              name={name}\r\n              onChange={(e) => {\r\n                const fileName = get(e, \"target.files[0].name\", \"\");\r\n                fileProcess(e, (data: any) => {\r\n                  onChange(data, fileName);\r\n                });\r\n              }}\r\n              accept={accept}\r\n              required={required}\r\n              disabled={disabled}\r\n              className={classes.fileInputField}\r\n            />\r\n\r\n            {value !== \"\" && (\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                onClick={() => {\r\n                  setShowSelector(false);\r\n                }}\r\n                disableRipple={false}\r\n                disableFocusRipple={false}\r\n                size=\"small\"\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n            )}\r\n\r\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\r\n          </div>\r\n        ) : (\r\n          <div className={classes.fileReselect}>\r\n            <div className={classes.valueString}>{value}</div>\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n              onClick={() => {\r\n                setShowSelector(true);\r\n              }}\r\n              disableRipple={false}\r\n              disableFocusRipple={false}\r\n              size=\"small\"\r\n            >\r\n              <AttachFileIcon />\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(FileSelector);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nexport const fileProcess = (evt: any, callback: any) => {\r\n  const file = evt.target.files[0];\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(file);\r\n\r\n  reader.onload = () => {\r\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\r\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\r\n    const fileBase64 = reader.result;\r\n    if (fileBase64) {\r\n      const fileArray = fileBase64.toString().split(\"base64,\");\r\n\r\n      if (fileArray.length === 2) {\r\n        callback(fileArray[1]);\r\n      }\r\n    }\r\n  };\r\n};\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\r\nimport {\r\n  createTenantCommon,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { AppState, useAppDispatch } from \"../../../../../store\";\r\nimport { clearValidationError } from \"../../utils\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../utils/validationFunctions\";\r\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\r\nimport {\r\n  addNewMinIODomain,\r\n  isPageValid,\r\n  removeMinIODomain,\r\n  updateAddField,\r\n} from \"../createTenantSlice\";\r\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\n\r\ninterface IConfigureProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    configSectionItem: {\r\n      marginRight: 15,\r\n      marginBottom: 15,\r\n\r\n      \"& .multiContainer\": {\r\n        border: \"1px solid red\",\r\n      },\r\n    },\r\n    tenantCustomizationFields: {\r\n      marginLeft: 30, // 2nd Level(15+15)\r\n      width: \"88%\",\r\n      margin: \"auto\",\r\n    },\r\n    containerItem: {\r\n      marginRight: 15,\r\n    },\r\n    fieldGroup: {\r\n      ...createTenantCommon.fieldGroup,\r\n      paddingTop: 15,\r\n      marginBottom: 25,\r\n    },\r\n    responsiveSectionItem: {\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n        alignItems: \"flex-start\",\r\n\r\n        \"& div > div\": {\r\n          marginBottom: 5,\r\n          marginRight: 0,\r\n        },\r\n      },\r\n    },\r\n    wrapperContainer: {\r\n      display: \"flex\",\r\n      marginBottom: 15,\r\n    },\r\n    overlayAction: {\r\n      marginLeft: 10,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& svg\": {\r\n        width: 15,\r\n        height: 15,\r\n      },\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst Configure = ({ classes }: IConfigureProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const exposeMinIO = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO\r\n  );\r\n  const exposeConsole = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole\r\n  );\r\n  const setDomains = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.setDomains\r\n  );\r\n  const consoleDomain = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain\r\n  );\r\n  const minioDomains = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.minioDomains\r\n  );\r\n  const tenantCustom = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\r\n  );\r\n  const tenantSecurityContext = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.tenantSecurityContext\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"configure\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customAccountValidation: IValidation[] = [];\r\n    if (tenantCustom) {\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        {\r\n          fieldKey: \"tenant_securityContext_runAsUser\",\r\n          required: true,\r\n          value: tenantSecurityContext.runAsUser,\r\n          customValidation:\r\n            tenantSecurityContext.runAsUser === \"\" ||\r\n            parseInt(tenantSecurityContext.runAsUser) < 0,\r\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"tenant_securityContext_runAsGroup\",\r\n          required: true,\r\n          value: tenantSecurityContext.runAsGroup,\r\n          customValidation:\r\n            tenantSecurityContext.runAsGroup === \"\" ||\r\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\r\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"tenant_securityContext_fsGroup\",\r\n          required: true,\r\n          value: tenantSecurityContext.fsGroup,\r\n          customValidation:\r\n            tenantSecurityContext.fsGroup === \"\" ||\r\n            parseInt(tenantSecurityContext.fsGroup) < 0,\r\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\r\n        },\r\n      ];\r\n    }\r\n\r\n    if (setDomains) {\r\n      const minioExtraValidations = minioDomains.map((validation, index) => {\r\n        return {\r\n          fieldKey: `minio-domain-${index.toString()}`,\r\n          required: false,\r\n          value: validation,\r\n          pattern: /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?$/,\r\n          customPatternMessage:\r\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\r\n        };\r\n      });\r\n\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        ...minioExtraValidations,\r\n        {\r\n          fieldKey: \"console_domain\",\r\n          required: false,\r\n          value: consoleDomain,\r\n          pattern:\r\n            /^(https?):\\/\\/([a-zA-Z0-9\\-.]+)(:[0-9]+)?(\\/[a-zA-Z0-9\\-./]*)?$/,\r\n          customPatternMessage:\r\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\r\n        },\r\n      ];\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customAccountValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"configure\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [\r\n    dispatch,\r\n    tenantCustom,\r\n    tenantSecurityContext,\r\n    setDomains,\r\n    consoleDomain,\r\n    minioDomains,\r\n  ]);\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  const updateMinIODomain = (value: string, index: number) => {\r\n    const copyDomains = [...minioDomains];\r\n    copyDomains[index] = value;\r\n\r\n    updateField(\"minioDomains\", copyDomains);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <div className={classes.headerElement}>\r\n        <h3 className={classes.h3Section}>Configure</h3>\r\n        <span className={classes.descriptionText}>\r\n          Basic configurations for tenant management\r\n        </span>\r\n      </div>\r\n      <div className={classes.headerElement}>\r\n        <h3 className={classes.h3Section}>Services</h3>\r\n        <span className={classes.descriptionText}>\r\n          Whether the tenant's services should request an external IP via\r\n          LoadBalancer service type.\r\n        </span>\r\n      </div>\r\n      <Grid item xs={12} className={classes.configSectionItem}>\r\n        <FormSwitchWrapper\r\n          value=\"expose_minio\"\r\n          id=\"expose_minio\"\r\n          name=\"expose_minio\"\r\n          checked={exposeMinIO}\r\n          onChange={(e) => {\r\n            const targetD = e.target;\r\n            const checked = targetD.checked;\r\n\r\n            updateField(\"exposeMinIO\", checked);\r\n          }}\r\n          label={\"Expose MinIO Service\"}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.configSectionItem}>\r\n        <FormSwitchWrapper\r\n          value=\"expose_console\"\r\n          id=\"expose_console\"\r\n          name=\"expose_console\"\r\n          checked={exposeConsole}\r\n          onChange={(e) => {\r\n            const targetD = e.target;\r\n            const checked = targetD.checked;\r\n\r\n            updateField(\"exposeConsole\", checked);\r\n          }}\r\n          label={\"Expose Console Service\"}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.configSectionItem}>\r\n        <FormSwitchWrapper\r\n          value=\"custom_domains\"\r\n          id=\"custom_domains\"\r\n          name=\"custom_domains\"\r\n          checked={setDomains}\r\n          onChange={(e) => {\r\n            const targetD = e.target;\r\n            const checked = targetD.checked;\r\n\r\n            updateField(\"setDomains\", checked);\r\n          }}\r\n          label={\"Set Custom Domains\"}\r\n        />\r\n      </Grid>\r\n      {setDomains && (\r\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\r\n          <fieldset className={classes.fieldGroup}>\r\n            <legend className={classes.descriptionText}>\r\n              Custom Domains for MinIO\r\n            </legend>\r\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\r\n              <div className={classes.containerItem}>\r\n                <InputBoxWrapper\r\n                  id=\"console_domain\"\r\n                  name=\"console_domain\"\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    updateField(\"consoleDomain\", e.target.value);\r\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\r\n                  }}\r\n                  label=\"Console Domain\"\r\n                  value={consoleDomain}\r\n                  placeholder={\r\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\r\n                  }\r\n                  error={validationErrors[\"console_domain\"] || \"\"}\r\n                />\r\n              </div>\r\n              <div>\r\n                <h4>MinIO Domains</h4>\r\n                <div className={`${classes.responsiveSectionItem}`}>\r\n                  {minioDomains.map((domain, index) => {\r\n                    return (\r\n                      <div\r\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\r\n                        key={`minio-domain-key-${index.toString()}`}\r\n                      >\r\n                        <InputBoxWrapper\r\n                          id={`minio-domain-${index.toString()}`}\r\n                          name={`minio-domain-${index.toString()}`}\r\n                          onChange={(\r\n                            e: React.ChangeEvent<HTMLInputElement>\r\n                          ) => {\r\n                            updateMinIODomain(e.target.value, index);\r\n                          }}\r\n                          label={`MinIO Domain ${index + 1}`}\r\n                          value={domain}\r\n                          placeholder={\"Eg. http://subdomain.domain\"}\r\n                          error={\r\n                            validationErrors[\r\n                              `minio-domain-${index.toString()}`\r\n                            ] || \"\"\r\n                          }\r\n                        />\r\n                        <div className={classes.overlayAction}>\r\n                          <IconButton\r\n                            size={\"small\"}\r\n                            onClick={() => dispatch(addNewMinIODomain())}\r\n                            disabled={index !== minioDomains.length - 1}\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                        </div>\r\n\r\n                        <div className={classes.overlayAction}>\r\n                          <IconButton\r\n                            size={\"small\"}\r\n                            onClick={() => dispatch(removeMinIODomain(index))}\r\n                            disabled={minioDomains.length <= 1}\r\n                          >\r\n                            <RemoveIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </fieldset>\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item xs={12} className={classes.configSectionItem}>\r\n        <FormSwitchWrapper\r\n          value=\"tenantConfig\"\r\n          id=\"tenant_configuration\"\r\n          name=\"tenant_configuration\"\r\n          checked={tenantCustom}\r\n          onChange={(e) => {\r\n            const targetD = e.target;\r\n            const checked = targetD.checked;\r\n\r\n            updateField(\"tenantCustom\", checked);\r\n          }}\r\n          label={\"Security Context\"}\r\n        />\r\n      </Grid>\r\n      {tenantCustom && (\r\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\r\n          <fieldset className={classes.fieldGroup}>\r\n            <legend className={classes.descriptionText}>\r\n              SecurityContext for MinIO\r\n            </legend>\r\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\r\n              <div\r\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\r\n              >\r\n                <div className={classes.containerItem}>\r\n                  <InputBoxWrapper\r\n                    type=\"number\"\r\n                    id=\"tenant_securityContext_runAsUser\"\r\n                    name=\"tenant_securityContext_runAsUser\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      updateField(\"tenantSecurityContext\", {\r\n                        ...tenantSecurityContext,\r\n                        runAsUser: e.target.value,\r\n                      });\r\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\r\n                    }}\r\n                    label=\"Run As User\"\r\n                    value={tenantSecurityContext.runAsUser}\r\n                    required\r\n                    error={\r\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\r\n                    }\r\n                    min=\"0\"\r\n                  />\r\n                </div>\r\n                <div className={classes.containerItem}>\r\n                  <InputBoxWrapper\r\n                    type=\"number\"\r\n                    id=\"tenant_securityContext_runAsGroup\"\r\n                    name=\"tenant_securityContext_runAsGroup\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      updateField(\"tenantSecurityContext\", {\r\n                        ...tenantSecurityContext,\r\n                        runAsGroup: e.target.value,\r\n                      });\r\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\r\n                    }}\r\n                    label=\"Run As Group\"\r\n                    value={tenantSecurityContext.runAsGroup}\r\n                    required\r\n                    error={\r\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\r\n                      \"\"\r\n                    }\r\n                    min=\"0\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <br />\r\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\r\n              <div\r\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\r\n              >\r\n                <div className={classes.containerItem}>\r\n                  <InputBoxWrapper\r\n                    type=\"number\"\r\n                    id=\"tenant_securityContext_fsGroup\"\r\n                    name=\"tenant_securityContext_fsGroup\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      updateField(\"tenantSecurityContext\", {\r\n                        ...tenantSecurityContext,\r\n                        fsGroup: e.target.value,\r\n                      });\r\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\r\n                    }}\r\n                    label=\"FsGroup\"\r\n                    value={tenantSecurityContext.fsGroup}\r\n                    required\r\n                    error={\r\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\r\n                    }\r\n                    min=\"0\"\r\n                  />\r\n                </div>\r\n                <div className={classes.containerItem}>\r\n                  <div className={classes.configSectionItem}>\r\n                    <SelectWrapper\r\n                      label=\"FsGroupChangePolicy\"\r\n                      id=\"securityContext_fsGroupChangePolicy\"\r\n                      name=\"securityContext_fsGroupChangePolicy\"\r\n                      value={tenantSecurityContext.fsGroupChangePolicy}\r\n                      onChange={(e: SelectChangeEvent<string>) => {\r\n                        updateField(\"tenantSecurityContext\", {\r\n                          ...tenantSecurityContext,\r\n                          fsGroupChangePolicy: e.target.value,\r\n                        });\r\n                      }}\r\n                      options={[\r\n                        {\r\n                          label: \"Always\",\r\n                          value: \"Always\",\r\n                        },\r\n                        {\r\n                          label: \"OnRootMismatch\",\r\n                          value: \"OnRootMismatch\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n            <br />\r\n            <Grid item xs={12} className={classes.configSectionItem}>\r\n              <div className={classes.multiContainer}>\r\n                <FormSwitchWrapper\r\n                  value=\"tenantSecurityContextRunAsNonRoot\"\r\n                  id=\"tenant_securityContext_runAsNonRoot\"\r\n                  name=\"tenant_securityContext_runAsNonRoot\"\r\n                  checked={tenantSecurityContext.runAsNonRoot}\r\n                  onChange={(e) => {\r\n                    const targetD = e.target;\r\n                    const checked = targetD.checked;\r\n                    updateField(\"tenantSecurityContext\", {\r\n                      ...tenantSecurityContext,\r\n                      runAsNonRoot: checked,\r\n                    });\r\n                  }}\r\n                  label={\"Do not run as Root\"}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </fieldset>\r\n        </Grid>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Configure);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport {\r\n  addIDPADUsrAtIndex,\r\n  isPageValid,\r\n  removeIDPADUsrAtIndex,\r\n  setIDPADUsrAtIndex,\r\n  updateAddField,\r\n  addIDPADGroupAtIndex,\r\n  removeIDPADGroupAtIndex,\r\n  setIDPADGroupAtIndex,\r\n} from \"../../createTenantSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { clearValidationError } from \"../../../utils\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    adUserDnRows: {\r\n      display: \"flex\",\r\n      marginBottom: 10,\r\n    },\r\n    buttonTray: {\r\n      marginLeft: 10,\r\n      display: \"flex\",\r\n      height: 38,\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n    overlayAction: {\r\n      marginLeft: 10,\r\n      \"& svg\": {\r\n        maxWidth: 15,\r\n        maxHeight: 15,\r\n      },\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  })\r\n);\r\n\r\nconst IDPActiveDirectory = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const idpSelection = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\r\n  );\r\n  const ADURL = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL\r\n  );\r\n  const ADSkipTLS = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS\r\n  );\r\n  const ADServerInsecure = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.ADServerInsecure\r\n  );\r\n  const ADGroupSearchBaseDN = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN\r\n  );\r\n  const ADGroupSearchFilter = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter\r\n  );\r\n  const ADUserDNs = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs\r\n  );\r\n  const ADGroupDNs = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.ADGroupDNs\r\n  );\r\n  const ADLookupBindDN = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.ADLookupBindDN\r\n  );\r\n  const ADLookupBindPassword = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.ADLookupBindPassword\r\n  );\r\n  const ADUserDNSearchBaseDN = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN\r\n  );\r\n  const ADUserDNSearchFilter = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter\r\n  );\r\n  const ADServerStartTLS = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.ADServerStartTLS\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({\r\n          pageName: \"identityProvider\",\r\n          field: field,\r\n          value: value,\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customIDPValidation: IValidation[] = [];\r\n\r\n    if (idpSelection === \"AD\") {\r\n      customIDPValidation = [\r\n        ...customIDPValidation,\r\n        {\r\n          fieldKey: \"AD_URL\",\r\n          required: true,\r\n          value: ADURL,\r\n        },\r\n        {\r\n          fieldKey: \"ad_lookupBindDN\",\r\n          required: true,\r\n          value: ADLookupBindDN,\r\n        },\r\n      ];\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customIDPValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"identityProvider\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [\r\n    ADLookupBindDN,\r\n    idpSelection,\r\n    ADURL,\r\n    ADGroupSearchBaseDN,\r\n    ADGroupSearchFilter,\r\n    ADUserDNs,\r\n    ADGroupDNs,\r\n    dispatch,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"AD_URL\"\r\n          name=\"AD_URL\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"ADURL\", e.target.value);\r\n            cleanValidation(\"AD_URL\");\r\n          }}\r\n          label=\"LDAP Server Address\"\r\n          value={ADURL}\r\n          placeholder=\"ldap-server:636\"\r\n          error={validationErrors[\"AD_URL\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <FormSwitchWrapper\r\n          value=\"ad_skipTLS\"\r\n          id=\"ad_skipTLS\"\r\n          name=\"ad_skipTLS\"\r\n          checked={ADSkipTLS}\r\n          onChange={(e) => {\r\n            const targetD = e.target;\r\n            const checked = targetD.checked;\r\n            updateField(\"ADSkipTLS\", checked);\r\n          }}\r\n          label={\"Skip TLS Verification\"}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <FormSwitchWrapper\r\n          value=\"ad_serverInsecure\"\r\n          id=\"ad_serverInsecure\"\r\n          name=\"ad_serverInsecure\"\r\n          checked={ADServerInsecure}\r\n          onChange={(e) => {\r\n            const targetD = e.target;\r\n            const checked = targetD.checked;\r\n            updateField(\"ADServerInsecure\", checked);\r\n          }}\r\n          label={\"Server Insecure\"}\r\n        />\r\n      </Grid>\r\n      {ADServerInsecure ? (\r\n        <Grid item xs={12}>\r\n          <Typography\r\n            className={classes.error}\r\n            variant=\"caption\"\r\n            display=\"block\"\r\n            gutterBottom\r\n          >\r\n            Warning: All traffic with Active Directory will be unencrypted\r\n          </Typography>\r\n          <br />\r\n        </Grid>\r\n      ) : null}\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <FormSwitchWrapper\r\n          value=\"ad_serverStartTLS\"\r\n          id=\"ad_serverStartTLS\"\r\n          name=\"ad_serverStartTLS\"\r\n          checked={ADServerStartTLS}\r\n          onChange={(e) => {\r\n            const targetD = e.target;\r\n            const checked = targetD.checked;\r\n            updateField(\"ADServerStartTLS\", checked);\r\n          }}\r\n          label={\"Start TLS connection to AD/LDAP server\"}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"ad_lookupBindDN\"\r\n          name=\"ad_lookupBindDN\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"ADLookupBindDN\", e.target.value);\r\n            cleanValidation(\"ad_lookupBindDN\");\r\n          }}\r\n          label=\"Lookup Bind DN\"\r\n          value={ADLookupBindDN}\r\n          placeholder=\"cn=admin,dc=min,dc=io\"\r\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"ad_lookupBindPassword\"\r\n          name=\"ad_lookupBindPassword\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"ADLookupBindPassword\", e.target.value);\r\n          }}\r\n          label=\"Lookup Bind Password\"\r\n          value={ADLookupBindPassword}\r\n          placeholder=\"admin\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"ad_userDNSearchBaseDN\"\r\n          name=\"ad_userDNSearchBaseDN\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\r\n          }}\r\n          label=\"User DN Search Base DN\"\r\n          value={ADUserDNSearchBaseDN}\r\n          placeholder=\"dc=min,dc=io\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"ad_userDNSearchFilter\"\r\n          name=\"ad_userDNSearchFilter\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\r\n          }}\r\n          label=\"User DN Search Filter\"\r\n          value={ADUserDNSearchFilter}\r\n          placeholder=\"(sAMAcountName=%s)\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"ad_groupSearchBaseDN\"\r\n          name=\"ad_groupSearchBaseDN\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\r\n          }}\r\n          label=\"Group Search Base DN\"\r\n          value={ADGroupSearchBaseDN}\r\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"ad_groupSearchFilter\"\r\n          name=\"ad_groupSearchFilter\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"ADGroupSearchFilter\", e.target.value);\r\n          }}\r\n          label=\"Group Search Filter\"\r\n          value={ADGroupSearchFilter}\r\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\r\n        />\r\n      </Grid>\r\n      <fieldset className={classes.fieldGroup}>\r\n        <legend className={classes.descriptionText}>\r\n          List of user DNs (Distinguished Names) to be Tenant Administrators\r\n        </legend>\r\n        <Grid item xs={12}>\r\n          {ADUserDNs.map((_, index) => {\r\n            return (\r\n              <Fragment key={`identityField-${index.toString()}`}>\r\n                <div className={classes.adUserDnRows}>\r\n                  <InputBoxWrapper\r\n                    id={`ad-userdn-${index.toString()}`}\r\n                    label={\"\"}\r\n                    placeholder=\"\"\r\n                    name={`ad-userdn-${index.toString()}`}\r\n                    value={ADUserDNs[index]}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      dispatch(\r\n                        setIDPADUsrAtIndex({\r\n                          index: index,\r\n                          userDN: e.target.value,\r\n                        })\r\n                      );\r\n                      cleanValidation(`ad-userdn-${index.toString()}`);\r\n                    }}\r\n                    index={index}\r\n                    key={`csv-ad-userdn-${index.toString()}`}\r\n                    error={\r\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\r\n                    }\r\n                  />\r\n                  <div className={classes.buttonTray}>\r\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\r\n                      <IconButton\r\n                        size={\"small\"}\r\n                        onClick={() => {\r\n                          dispatch(addIDPADUsrAtIndex());\r\n                        }}\r\n                      >\r\n                        <AddIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\r\n                      <IconButton\r\n                        size={\"small\"}\r\n                        style={{ marginLeft: 16 }}\r\n                        onClick={() => {\r\n                          if (ADUserDNs.length > 1) {\r\n                            dispatch(removeIDPADUsrAtIndex(index));\r\n                          }\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </fieldset>\r\n      <fieldset className={classes.fieldGroup}>\r\n        <legend className={classes.descriptionText}>\r\n          List of group DNs (Distinguished Names) to be Tenant Administrators\r\n        </legend>\r\n        <Grid item xs={12}>\r\n          {ADGroupDNs.map((_, index) => {\r\n            return (\r\n              <Fragment key={`identityField-${index.toString()}`}>\r\n                <div className={classes.adUserDnRows}>\r\n                  <InputBoxWrapper\r\n                    id={`ad-groupdn-${index.toString()}`}\r\n                    label={\"\"}\r\n                    placeholder=\"\"\r\n                    name={`ad-groupdn-${index.toString()}`}\r\n                    value={ADGroupDNs[index]}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      dispatch(\r\n                        setIDPADGroupAtIndex({\r\n                          index: index,\r\n                          userDN: e.target.value,\r\n                        })\r\n                      );\r\n                      cleanValidation(`ad-groupdn-${index.toString()}`);\r\n                    }}\r\n                    index={index}\r\n                    key={`csv-ad-groupdn-${index.toString()}`}\r\n                    error={\r\n                      validationErrors[`ad-groupdn-${index.toString()}`] || \"\"\r\n                    }\r\n                  />\r\n                  <div className={classes.buttonTray}>\r\n                    <Tooltip title=\"Add Group\" aria-label=\"add\">\r\n                      <IconButton\r\n                        size={\"small\"}\r\n                        onClick={() => {\r\n                          dispatch(addIDPADGroupAtIndex());\r\n                        }}\r\n                      >\r\n                        <AddIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\r\n                      <IconButton\r\n                        size={\"small\"}\r\n                        style={{ marginLeft: 16 }}\r\n                        onClick={() => {\r\n                          if (ADGroupDNs.length > 1) {\r\n                            dispatch(removeIDPADGroupAtIndex(index));\r\n                          }\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </fieldset>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default IDPActiveDirectory;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Grid } from \"@mui/material\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\r\nimport { clearValidationError } from \"../../../utils\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    buttonTray: {\r\n      marginLeft: 10,\r\n      display: \"flex\",\r\n      height: 38,\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n    overlayAction: {\r\n      marginLeft: 10,\r\n      \"& svg\": {\r\n        maxWidth: 15,\r\n        maxHeight: 15,\r\n      },\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  })\r\n);\r\n\r\nconst IDPOpenID = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const idpSelection = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\r\n  );\r\n  const openIDConfigurationURL = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.openIDConfigurationURL\r\n  );\r\n  const openIDClientID = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.openIDClientID\r\n  );\r\n  const openIDSecretID = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.openIDSecretID\r\n  );\r\n  const openIDCallbackURL = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.openIDCallbackURL\r\n  );\r\n  const openIDClaimName = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.identityProvider.openIDClaimName\r\n  );\r\n  const openIDScopes = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.openIDScopes\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({\r\n          pageName: \"identityProvider\",\r\n          field: field,\r\n          value: value,\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customIDPValidation: IValidation[] = [];\r\n\r\n    if (idpSelection === \"OpenID\") {\r\n      customIDPValidation = [\r\n        ...customIDPValidation,\r\n        {\r\n          fieldKey: \"openID_CONFIGURATION_URL\",\r\n          required: true,\r\n          value: openIDConfigurationURL,\r\n        },\r\n        {\r\n          fieldKey: \"openID_clientID\",\r\n          required: true,\r\n          value: openIDClientID,\r\n        },\r\n        {\r\n          fieldKey: \"openID_secretID\",\r\n          required: true,\r\n          value: openIDSecretID,\r\n        },\r\n        {\r\n          fieldKey: \"openID_claimName\",\r\n          required: true,\r\n          value: openIDClaimName,\r\n        },\r\n      ];\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customIDPValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"identityProvider\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [\r\n    idpSelection,\r\n    openIDClientID,\r\n    openIDSecretID,\r\n    openIDConfigurationURL,\r\n    openIDClaimName,\r\n    dispatch,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"openID_CONFIGURATION_URL\"\r\n          name=\"openID_CONFIGURATION_URL\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"openIDConfigurationURL\", e.target.value);\r\n            cleanValidation(\"openID_CONFIGURATION_URL\");\r\n          }}\r\n          label=\"Configuration URL\"\r\n          value={openIDConfigurationURL}\r\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\r\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"openID_clientID\"\r\n          name=\"openID_clientID\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"openIDClientID\", e.target.value);\r\n            cleanValidation(\"openID_clientID\");\r\n          }}\r\n          label=\"Client ID\"\r\n          value={openIDClientID}\r\n          error={validationErrors[\"openID_clientID\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"openID_secretID\"\r\n          name=\"openID_secretID\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"openIDSecretID\", e.target.value);\r\n            cleanValidation(\"openID_secretID\");\r\n          }}\r\n          label=\"Secret ID\"\r\n          value={openIDSecretID}\r\n          error={validationErrors[\"openID_secretID\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"openID_callbackURL\"\r\n          name=\"openID_callbackURL\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"openIDCallbackURL\", e.target.value);\r\n            cleanValidation(\"openID_callbackURL\");\r\n          }}\r\n          label=\"Callback URL\"\r\n          value={openIDCallbackURL}\r\n          placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\r\n          error={validationErrors[\"openID_callbackURL\"] || \"\"}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"openID_claimName\"\r\n          name=\"openID_claimName\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"openIDClaimName\", e.target.value);\r\n            cleanValidation(\"openID_claimName\");\r\n          }}\r\n          label=\"Claim Name\"\r\n          value={openIDClaimName}\r\n          error={validationErrors[\"openID_claimName\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"openID_scopes\"\r\n          name=\"openID_scopes\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"openIDScopes\", e.target.value);\r\n            cleanValidation(\"openID_scopes\");\r\n          }}\r\n          label=\"Scopes\"\r\n          value={openIDScopes}\r\n        />\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default IDPOpenID;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport {\r\n  addIDPNewKeyPair,\r\n  isPageValid,\r\n  removeIDPKeyPairAtIndex,\r\n  setIDPPwdAtIndex,\r\n  setIDPUsrAtIndex,\r\n} from \"../../createTenantSlice\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"../../../../../../icons/RemoveIcon\";\r\nimport { clearValidationError, getRandomString } from \"../../../utils\";\r\nimport CasinoIcon from \"@mui/icons-material/Casino\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    buttonTray: {\r\n      marginLeft: 10,\r\n      display: \"flex\",\r\n      height: 38,\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n    overlayAction: {\r\n      marginLeft: 10,\r\n      \"& svg\": {\r\n        maxWidth: 15,\r\n        maxHeight: 15,\r\n      },\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n    shortened: {\r\n      gridTemplateColumns: \"auto auto 50px 50px\",\r\n      display: \"grid\",\r\n      gridGap: 15,\r\n      marginBottom: 10,\r\n      \"& input\": {\r\n        fontWeight: 400,\r\n      },\r\n    },\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  })\r\n);\r\n\r\nconst IDPBuiltIn = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const idpSelection = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\r\n  );\r\n  const accessKeys = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys\r\n  );\r\n  const secretKeys = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customIDPValidation: IValidation[] = [];\r\n\r\n    if (idpSelection === \"Built-in\") {\r\n      customIDPValidation = [...customIDPValidation];\r\n      for (var i = 0; i < accessKeys.length; i++) {\r\n        customIDPValidation.push({\r\n          fieldKey: `accesskey-${i.toString()}`,\r\n          required: true,\r\n          value: accessKeys[i],\r\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\r\n          customPatternMessage: \"Keys must be at least length 8\",\r\n        });\r\n        customIDPValidation.push({\r\n          fieldKey: `secretkey-${i.toString()}`,\r\n          required: true,\r\n          value: secretKeys[i],\r\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\r\n          customPatternMessage: \"Keys must be at least length 8\",\r\n        });\r\n      }\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customIDPValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"identityProvider\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\r\n\r\n  return (\r\n    <Fragment>\r\n      Add additional users\r\n      {accessKeys.map((_, index) => {\r\n        return (\r\n          <Fragment key={`identityField-${index.toString()}`}>\r\n            <div className={classes.shortened}>\r\n              <InputBoxWrapper\r\n                id={`accesskey-${index.toString()}`}\r\n                label={\"\"}\r\n                placeholder={\"Access Key\"}\r\n                name={`accesskey-${index.toString()}`}\r\n                value={accessKeys[index]}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  dispatch(\r\n                    setIDPUsrAtIndex({\r\n                      index,\r\n                      accessKey: e.target.value,\r\n                    })\r\n                  );\r\n                  cleanValidation(`accesskey-${index.toString()}`);\r\n                }}\r\n                index={index}\r\n                key={`csv-accesskey-${index.toString()}`}\r\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\r\n              />\r\n              <InputBoxWrapper\r\n                id={`secretkey-${index.toString()}`}\r\n                label={\"\"}\r\n                placeholder={\"Secret Key\"}\r\n                name={`secretkey-${index.toString()}`}\r\n                value={secretKeys[index]}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  dispatch(\r\n                    setIDPPwdAtIndex({\r\n                      index,\r\n                      secretKey: e.target.value,\r\n                    })\r\n                  );\r\n                  cleanValidation(`secretkey-${index.toString()}`);\r\n                }}\r\n                index={index}\r\n                key={`csv-secretkey-${index.toString()}`}\r\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\r\n              />\r\n              <div className={classes.buttonTray}>\r\n                <div className={classes.overlayAction}>\r\n                  <IconButton\r\n                    size={\"small\"}\r\n                    onClick={() => {\r\n                      dispatch(addIDPNewKeyPair());\r\n                    }}\r\n                    disabled={index !== accessKeys.length - 1}\r\n                  >\r\n                    <AddIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div className={classes.overlayAction}>\r\n                  <IconButton\r\n                    size={\"small\"}\r\n                    onClick={() => {\r\n                      dispatch(removeIDPKeyPairAtIndex(index));\r\n                    }}\r\n                    disabled={accessKeys.length <= 1}\r\n                  >\r\n                    <RemoveIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\r\n                  <div className={classes.overlayAction}>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        dispatch(\r\n                          setIDPUsrAtIndex({\r\n                            index,\r\n                            accessKey: getRandomString(16),\r\n                          })\r\n                        );\r\n                        dispatch(\r\n                          setIDPPwdAtIndex({\r\n                            index,\r\n                            secretKey: getRandomString(16),\r\n                          })\r\n                        );\r\n                      }}\r\n                      size={\"small\"}\r\n                    >\r\n                      <CasinoIcon />\r\n                    </IconButton>\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default IDPBuiltIn;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport { Grid, Paper } from \"@mui/material\";\r\nimport {\r\n  createTenantCommon,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../Common/FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../../store\";\r\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\r\nimport { setIDP } from \"../createTenantSlice\";\r\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\r\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\r\nimport {\r\n  OIDCLogoElement,\r\n  LDAPLogoElement,\r\n  BuiltInLogoElement,\r\n} from \"../../LogoComponents\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    protocolRadioOptions: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      marginBottom: 10,\r\n\r\n      \"& label\": {\r\n        fontSize: 16,\r\n        fontWeight: 600,\r\n      },\r\n      \"& div\": {\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        alignItems: \"top\",\r\n      },\r\n    },\r\n    ...createTenantCommon,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  })\r\n);\r\n\r\nconst IdentityProvider = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const idpSelection = useSelector(\r\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\r\n  );\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <div className={classes.headerElement}>\r\n        <h3 className={classes.h3Section}>Identity Provider</h3>\r\n        <span className={classes.descriptionText}>\r\n          Access to the tenant can be controlled via an external Identity\r\n          Manager.\r\n        </span>\r\n      </div>\r\n      <Grid item xs={12} padding=\"10px\">\r\n        <RadioGroupSelector\r\n          currentSelection={idpSelection}\r\n          id=\"idp-options\"\r\n          name=\"idp-options\"\r\n          label=\"Protocol\"\r\n          onChange={(e) => {\r\n            dispatch(setIDP(e.target.value));\r\n          }}\r\n          selectorOptions={[\r\n            { label: <BuiltInLogoElement />, value: \"Built-in\" },\r\n            { label: <OIDCLogoElement />, value: \"OpenID\" },\r\n            { label: <LDAPLogoElement />, value: \"AD\" },\r\n          ]}\r\n        />\r\n      </Grid>\r\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\r\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\r\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default IdentityProvider;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box } from \"@mui/material\";\r\nimport CertificateIcon from \"../../../../icons/CertificateIcon\";\r\nimport { AppState } from \"../../../../store\";\r\n\r\nconst FeatureItem = ({\r\n  icon,\r\n  description,\r\n}: {\r\n  icon: any;\r\n  description: string;\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        \"& .min-icon\": {\r\n          marginRight: \"10px\",\r\n          height: \"23px\",\r\n          width: \"23px\",\r\n          marginBottom: \"10px\",\r\n        },\r\n      }}\r\n    >\r\n      {icon}{\" \"}\r\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\r\n        {description}\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nconst TLSHelpBox = () => {\r\n  const namespace = useSelector((state: AppState) => {\r\n    return state.createTenant.fields.nameTenant.namespace || \"<namespace>\";\r\n  });\r\n\r\n  const tenantName = useSelector((state: AppState) => {\r\n    return state.createTenant.fields.nameTenant.tenantName || \"<tenant-name>\";\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        border: \"1px solid #eaeaea\",\r\n        borderRadius: \"2px\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        padding: \"20px\",\r\n        marginTop: {\r\n          xs: \"0px\",\r\n        },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexFlow: \"column\",\r\n        }}\r\n      >\r\n        <FeatureItem\r\n          icon={<CertificateIcon />}\r\n          description={`TLS Certificates Warning`}\r\n        />\r\n        <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\r\n          Automatic certificate generation is not enabled.\r\n          <br />\r\n          <br />\r\n          If you wish to continue only with <b>custom certificates</b> make sure\r\n          they are valid for the following internode hostnames, i.e.:\r\n          <br />\r\n          <br />\r\n          <div\r\n            style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}\r\n          >\r\n            minio.{namespace}\r\n            <br />\r\n            minio.{namespace}.svc\r\n            <br />\r\n            minio.{namespace}.svc.&#x3C;cluster domain&#x3E;\r\n            <br />\r\n            *.{tenantName}-hl.{namespace}.svc.&#x3C;cluster domain&#x3E;\r\n            <br />\r\n            *.{namespace}.svc.&#x3C;cluster domain&#x3E;\r\n          </div>\r\n          <br />\r\n          Replace <em>&#x3C;tenant-name&#x3E;</em>,{\" \"}\r\n          <em>&#x3C;namespace&#x3E;</em> and\r\n          <em>&#x3C;cluster domain&#x3E;</em> with the actual values for your\r\n          MinIO tenant.\r\n          <br />\r\n          <br />\r\n          You can learn more at our{\" \"}\r\n          <a\r\n            href=\"https://docs.min.io/minio/k8s/security/security.html?ref=op#id5\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            documentation\r\n          </a>\r\n          .\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TLSHelpBox;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid, IconButton, Paper } from \"@mui/material\";\r\nimport {\r\n  createTenantCommon,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { AppState, useAppDispatch } from \"../../../../../store\";\r\nimport { KeyPair } from \"../../ListTenants/utils\";\r\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\r\nimport {\r\n  addCaCertificate,\r\n  deleteCaCertificate,\r\n  addFileToCaCertificates,\r\n  addFileToKeyPair,\r\n  addKeyPair,\r\n  deleteKeyPair,\r\n  addClientKeyPair,\r\n  deleteClientKeyPair,\r\n  addFileToClientKeyPair,\r\n  isPageValid,\r\n  updateAddField,\r\n} from \"../createTenantSlice\";\r\nimport TLSHelpBox from \"../../HelpBox/TLSHelpBox\";\r\n\r\ninterface ISecurityProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    minioCertificateRows: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-start\",\r\n      borderBottom: \"1px solid #EAEAEA\",\r\n      \"&:last-child\": {\r\n        borderBottom: 0,\r\n      },\r\n      \"@media (max-width: 900px)\": {\r\n        flex: 1,\r\n      },\r\n    },\r\n    fileItem: {\r\n      marginRight: 10,\r\n      display: \"flex\",\r\n      \"& div label\": {\r\n        minWidth: 50,\r\n      },\r\n\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n      },\r\n    },\r\n    minioCertsContainer: {\r\n      marginBottom: 15,\r\n    },\r\n    minioCACertsRow: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-start\",\r\n\r\n      borderBottom: \"1px solid #EAEAEA\",\r\n      \"&:last-child\": {\r\n        borderBottom: 0,\r\n      },\r\n      \"@media (max-width: 900px)\": {\r\n        flex: 1,\r\n\r\n        \"& div label\": {\r\n          minWidth: 50,\r\n        },\r\n      },\r\n    },\r\n    rowActions: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n      \"@media (max-width: 900px)\": {\r\n        flex: 1,\r\n      },\r\n    },\r\n    overlayAction: {\r\n      marginLeft: 10,\r\n      \"& svg\": {\r\n        maxWidth: 15,\r\n        maxHeight: 15,\r\n      },\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n\r\n    ...createTenantCommon,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst Security = ({ classes }: ISecurityProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const enableTLS = useSelector(\r\n    (state: AppState) => state.createTenant.fields.security.enableTLS\r\n  );\r\n  const enableAutoCert = useSelector(\r\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\r\n  );\r\n  const enableCustomCerts = useSelector(\r\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\r\n  );\r\n  const minioCertificates = useSelector(\r\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\r\n  );\r\n  const minioClientCertificates = useSelector(\r\n    (state: AppState) => state.createTenant.certificates.minioClientCertificates\r\n  );\r\n  const caCertificates = useSelector(\r\n    (state: AppState) => state.createTenant.certificates.minioCAsCertificates\r\n  );\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"security\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // Validation\r\n\r\n  useEffect(() => {\r\n    if (!enableTLS) {\r\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\r\n      return;\r\n    }\r\n    if (enableAutoCert) {\r\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\r\n      return;\r\n    }\r\n    if (enableCustomCerts) {\r\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\r\n      return;\r\n    }\r\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\r\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <div className={classes.headerElement}>\r\n        <h3 className={classes.h3Section}>Security</h3>\r\n      </div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <FormSwitchWrapper\r\n            value=\"enableTLS\"\r\n            id=\"enableTLS\"\r\n            name=\"enableTLS\"\r\n            checked={enableTLS}\r\n            onChange={(e) => {\r\n              const targetD = e.target;\r\n              const checked = targetD.checked;\r\n\r\n              updateField(\"enableTLS\", checked);\r\n            }}\r\n            label={\"TLS\"}\r\n            description={\r\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\r\n            }\r\n          />\r\n        </Grid>\r\n        {enableTLS && (\r\n          <Fragment>\r\n            <Grid item xs={12}>\r\n              <FormSwitchWrapper\r\n                value=\"enableAutoCert\"\r\n                id=\"enableAutoCert\"\r\n                name=\"enableAutoCert\"\r\n                checked={enableAutoCert}\r\n                onChange={(e) => {\r\n                  const targetD = e.target;\r\n                  const checked = targetD.checked;\r\n                  updateField(\"enableAutoCert\", checked);\r\n                }}\r\n                label={\"AutoCert\"}\r\n                description={\r\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormSwitchWrapper\r\n                value=\"enableCustomCerts\"\r\n                id=\"enableCustomCerts\"\r\n                name=\"enableCustomCerts\"\r\n                checked={enableCustomCerts}\r\n                onChange={(e) => {\r\n                  const targetD = e.target;\r\n                  const checked = targetD.checked;\r\n                  updateField(\"enableCustomCerts\", checked);\r\n                }}\r\n                label={\"Custom Certificates\"}\r\n                description={\"Certificates used to terminated TLS at MinIO\"}\r\n              />\r\n            </Grid>\r\n            {enableCustomCerts && (\r\n              <Fragment>\r\n                {!enableAutoCert && (\r\n                  <Grid item xs={12}>\r\n                    <TLSHelpBox />\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12} className={classes.minioCertsContainer}>\r\n                  <h5>MinIO Server Certificates</h5>\r\n                  {minioCertificates.map((keyPair: KeyPair, index) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      key={`minio-certs-${keyPair.id}`}\r\n                      className={classes.minioCertificateRows}\r\n                    >\r\n                      <Grid item xs={10} className={classes.fileItem}>\r\n                        <FileSelector\r\n                          onChange={(encodedValue, fileName) => {\r\n                            dispatch(\r\n                              addFileToKeyPair({\r\n                                id: keyPair.id,\r\n                                key: \"cert\",\r\n                                fileName: fileName,\r\n                                value: encodedValue,\r\n                              })\r\n                            );\r\n                          }}\r\n                          accept=\".cer,.crt,.cert,.pem\"\r\n                          id=\"tlsCert\"\r\n                          name=\"tlsCert\"\r\n                          label=\"Cert\"\r\n                          value={keyPair.cert}\r\n                        />\r\n                        <FileSelector\r\n                          onChange={(encodedValue, fileName) => {\r\n                            dispatch(\r\n                              addFileToKeyPair({\r\n                                id: keyPair.id,\r\n                                key: \"key\",\r\n                                fileName: fileName,\r\n                                value: encodedValue,\r\n                              })\r\n                            );\r\n                          }}\r\n                          accept=\".key,.pem\"\r\n                          id=\"tlsKey\"\r\n                          name=\"tlsKey\"\r\n                          label=\"Key\"\r\n                          value={keyPair.key}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={2} className={classes.rowActions}>\r\n                        <div className={classes.overlayAction}>\r\n                          <IconButton\r\n                            size={\"small\"}\r\n                            onClick={() => {\r\n                              dispatch(addKeyPair());\r\n                            }}\r\n                            disabled={index !== minioCertificates.length - 1}\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                        <div className={classes.overlayAction}>\r\n                          <IconButton\r\n                            size={\"small\"}\r\n                            onClick={() => {\r\n                              dispatch(deleteKeyPair(keyPair.id));\r\n                            }}\r\n                            disabled={minioCertificates.length <= 1}\r\n                          >\r\n                            <RemoveIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.minioCertsContainer}>\r\n                  <h5>MinIO Client Certificates</h5>\r\n                  {minioClientCertificates.map((keyPair: KeyPair, index) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      key={`minio-certs-${keyPair.id}`}\r\n                      className={classes.minioCertificateRows}\r\n                    >\r\n                      <Grid item xs={10} className={classes.fileItem}>\r\n                        <FileSelector\r\n                          onChange={(encodedValue, fileName) => {\r\n                            dispatch(\r\n                              addFileToClientKeyPair({\r\n                                id: keyPair.id,\r\n                                key: \"cert\",\r\n                                fileName: fileName,\r\n                                value: encodedValue,\r\n                              })\r\n                            );\r\n                          }}\r\n                          accept=\".cer,.crt,.cert,.pem\"\r\n                          id=\"tlsCert\"\r\n                          name=\"tlsCert\"\r\n                          label=\"Cert\"\r\n                          value={keyPair.cert}\r\n                        />\r\n                        <FileSelector\r\n                          onChange={(encodedValue, fileName) => {\r\n                            dispatch(\r\n                              addFileToClientKeyPair({\r\n                                id: keyPair.id,\r\n                                key: \"key\",\r\n                                fileName: fileName,\r\n                                value: encodedValue,\r\n                              })\r\n                            );\r\n                          }}\r\n                          accept=\".key,.pem\"\r\n                          id=\"tlsKey\"\r\n                          name=\"tlsKey\"\r\n                          label=\"Key\"\r\n                          value={keyPair.key}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={2} className={classes.rowActions}>\r\n                        <div className={classes.overlayAction}>\r\n                          <IconButton\r\n                            size={\"small\"}\r\n                            onClick={() => {\r\n                              dispatch(addClientKeyPair());\r\n                            }}\r\n                            disabled={\r\n                              index !== minioClientCertificates.length - 1\r\n                            }\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                        <div className={classes.overlayAction}>\r\n                          <IconButton\r\n                            size={\"small\"}\r\n                            onClick={() => {\r\n                              dispatch(deleteClientKeyPair(keyPair.id));\r\n                            }}\r\n                            disabled={minioClientCertificates.length <= 1}\r\n                          >\r\n                            <RemoveIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.minioCertsContainer}>\r\n                  <h5>MinIO CA Certificates</h5>\r\n                  {caCertificates.map((keyPair: KeyPair, index) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      key={`minio-CA-certs-${keyPair.id}`}\r\n                      className={classes.minioCACertsRow}\r\n                    >\r\n                      <Grid item xs={6}>\r\n                        <FileSelector\r\n                          onChange={(encodedValue, fileName) => {\r\n                            dispatch(\r\n                              addFileToCaCertificates({\r\n                                id: keyPair.id,\r\n                                key: \"cert\",\r\n                                fileName: fileName,\r\n                                value: encodedValue,\r\n                              })\r\n                            );\r\n                          }}\r\n                          accept=\".cer,.crt,.cert,.pem\"\r\n                          id=\"tlsCert\"\r\n                          name=\"tlsCert\"\r\n                          label=\"Cert\"\r\n                          value={keyPair.cert}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <div className={classes.rowActions}>\r\n                          <div className={classes.overlayAction}>\r\n                            <IconButton\r\n                              size={\"small\"}\r\n                              onClick={() => {\r\n                                dispatch(addCaCertificate());\r\n                              }}\r\n                              disabled={index !== caCertificates.length - 1}\r\n                            >\r\n                              <AddIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                          <div className={classes.overlayAction}>\r\n                            <IconButton\r\n                              size={\"small\"}\r\n                              onClick={() => {\r\n                                dispatch(deleteCaCertificate(keyPair.id));\r\n                              }}\r\n                              disabled={caCertificates.length <= 1}\r\n                            >\r\n                              <RemoveIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Security);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  children: string;\r\n};\r\n\r\nconst SectionH1: React.FC<Props> = ({ children }) => {\r\n  return (\r\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\r\n      {children}\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default SectionH1;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\n\r\nimport FileSelector from \"../../../../Common/FormComponents/FileSelector/FileSelector\";\r\nimport {\r\n  addFileVaultCa,\r\n  addFileVaultCert,\r\n  isPageValid,\r\n  updateAddField,\r\n} from \"../../createTenantSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\nimport { clearValidationError } from \"../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  })\r\n);\r\n\r\nconst VaultKMSAdd = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const vaultEndpoint = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint\r\n  );\r\n  const vaultEngine = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine\r\n  );\r\n  const vaultNamespace = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace\r\n  );\r\n  const vaultPrefix = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix\r\n  );\r\n  const vaultAppRoleEngine = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.vaultAppRoleEngine\r\n  );\r\n  const vaultId = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.vaultId\r\n  );\r\n  const vaultSecret = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret\r\n  );\r\n  const vaultRetry = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry\r\n  );\r\n  const vaultPing = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing\r\n  );\r\n  const vaultCertificate = useSelector(\r\n    (state: AppState) => state.createTenant.certificates.vaultCertificate\r\n  );\r\n  const vaultCA = useSelector(\r\n    (state: AppState) => state.createTenant.certificates.vaultCA\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let encryptionValidation: IValidation[] = [];\r\n\r\n    encryptionValidation = [\r\n      ...encryptionValidation,\r\n      {\r\n        fieldKey: \"vault_endpoint\",\r\n        required: true,\r\n        value: vaultEndpoint,\r\n      },\r\n      {\r\n        fieldKey: \"vault_id\",\r\n        required: true,\r\n        value: vaultId,\r\n      },\r\n      {\r\n        fieldKey: \"vault_secret\",\r\n        required: true,\r\n        value: vaultSecret,\r\n      },\r\n      {\r\n        fieldKey: \"vault_ping\",\r\n        required: false,\r\n        value: vaultPing,\r\n        customValidation: parseInt(vaultPing) < 0,\r\n        customValidationMessage: \"Value needs to be 0 or greater\",\r\n      },\r\n      {\r\n        fieldKey: \"vault_retry\",\r\n        required: false,\r\n        value: vaultRetry,\r\n        customValidation: parseInt(vaultRetry) < 0,\r\n        customValidationMessage: \"Value needs to be 0 or greater\",\r\n      },\r\n    ];\r\n\r\n    const commonVal = commonFormValidation(encryptionValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"encryption\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [\r\n    vaultEndpoint,\r\n    vaultEngine,\r\n    vaultId,\r\n    vaultSecret,\r\n    vaultPing,\r\n    vaultRetry,\r\n    dispatch,\r\n  ]);\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"vault_endpoint\"\r\n          name=\"vault_endpoint\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"vaultEndpoint\", e.target.value);\r\n            cleanValidation(\"vault_endpoint\");\r\n          }}\r\n          label=\"Endpoint\"\r\n          value={vaultEndpoint}\r\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"vault_engine\"\r\n          name=\"vault_engine\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"vaultEngine\", e.target.value);\r\n            cleanValidation(\"vault_engine\");\r\n          }}\r\n          label=\"Engine\"\r\n          value={vaultEngine}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"vault_namespace\"\r\n          name=\"vault_namespace\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"vaultNamespace\", e.target.value);\r\n          }}\r\n          label=\"Namespace\"\r\n          value={vaultNamespace}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"vault_prefix\"\r\n          name=\"vault_prefix\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"vaultPrefix\", e.target.value);\r\n          }}\r\n          label=\"Prefix\"\r\n          value={vaultPrefix}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <fieldset className={classes.fieldGroup}>\r\n          <legend className={classes.descriptionText}>App Role</legend>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"vault_approle_engine\"\r\n              name=\"vault_approle_engine\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"vaultAppRoleEngine\", e.target.value);\r\n              }}\r\n              label=\"Engine\"\r\n              value={vaultAppRoleEngine}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"vault_id\"\r\n              name=\"vault_id\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"vaultId\", e.target.value);\r\n                cleanValidation(\"vault_id\");\r\n              }}\r\n              label=\"AppRole ID\"\r\n              value={vaultId}\r\n              error={validationErrors[\"vault_id\"] || \"\"}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"vault_secret\"\r\n              name=\"vault_secret\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"vaultSecret\", e.target.value);\r\n                cleanValidation(\"vault_secret\");\r\n              }}\r\n              label=\"AppRole Secret\"\r\n              value={vaultSecret}\r\n              error={validationErrors[\"vault_secret\"] || \"\"}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              type=\"number\"\r\n              min=\"0\"\r\n              id=\"vault_retry\"\r\n              name=\"vault_retry\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"vaultRetry\", e.target.value);\r\n                cleanValidation(\"vault_retry\");\r\n              }}\r\n              label=\"Retry (Seconds)\"\r\n              value={vaultRetry}\r\n              error={validationErrors[\"vault_retry\"] || \"\"}\r\n            />\r\n          </Grid>\r\n        </fieldset>\r\n      </Grid>\r\n\r\n      <Grid container className={classes.mutualTlsConfig}>\r\n        <fieldset className={classes.fieldGroup}>\r\n          <legend className={classes.descriptionText}>\r\n            Mutual TLS authentication (optional)\r\n          </legend>\r\n          <FileSelector\r\n            onChange={(encodedValue, fileName) => {\r\n              dispatch(\r\n                addFileVaultCert({\r\n                  key: \"key\",\r\n                  fileName: fileName,\r\n                  value: encodedValue,\r\n                })\r\n              );\r\n              cleanValidation(\"vault_key\");\r\n            }}\r\n            accept=\".key,.pem\"\r\n            id=\"vault_key\"\r\n            name=\"vault_key\"\r\n            label=\"Key\"\r\n            value={vaultCertificate.key}\r\n          />\r\n          <FileSelector\r\n            onChange={(encodedValue, fileName) => {\r\n              dispatch(\r\n                addFileVaultCert({\r\n                  key: \"cert\",\r\n                  fileName: fileName,\r\n                  value: encodedValue,\r\n                })\r\n              );\r\n              cleanValidation(\"vault_cert\");\r\n            }}\r\n            accept=\".cer,.crt,.cert,.pem\"\r\n            id=\"vault_cert\"\r\n            name=\"vault_cert\"\r\n            label=\"Cert\"\r\n            value={vaultCertificate.cert}\r\n          />\r\n          <FileSelector\r\n            onChange={(encodedValue, fileName) => {\r\n              dispatch(\r\n                addFileVaultCa({\r\n                  fileName: fileName,\r\n                  value: encodedValue,\r\n                })\r\n              );\r\n              cleanValidation(\"vault_ca\");\r\n            }}\r\n            accept=\".cer,.crt,.cert,.pem\"\r\n            id=\"vault_ca\"\r\n            name=\"vault_ca\"\r\n            label=\"CA\"\r\n            value={vaultCA.cert}\r\n          />\r\n        </fieldset>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={classes.formFieldRow}\r\n        style={{ marginTop: 15 }}\r\n      >\r\n        <fieldset className={classes.fieldGroup}>\r\n          <legend className={classes.descriptionText}>Status</legend>\r\n          <InputBoxWrapper\r\n            type=\"number\"\r\n            min=\"0\"\r\n            id=\"vault_ping\"\r\n            name=\"vault_ping\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              updateField(\"vaultPing\", e.target.value);\r\n              cleanValidation(\"vault_ping\");\r\n            }}\r\n            label=\"Ping (Seconds)\"\r\n            value={vaultPing}\r\n            error={validationErrors[\"vault_ping\"] || \"\"}\r\n          />\r\n        </fieldset>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default VaultKMSAdd;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\r\nimport { clearValidationError } from \"../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  })\r\n);\r\n\r\nconst AzureKMSAdd = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const azureEndpoint = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint\r\n  );\r\n  const azureTenantID = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID\r\n  );\r\n  const azureClientID = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID\r\n  );\r\n  const azureClientSecret = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let encryptionValidation: IValidation[] = [];\r\n\r\n    encryptionValidation = [\r\n      ...encryptionValidation,\r\n      {\r\n        fieldKey: \"azure_endpoint\",\r\n        required: true,\r\n        value: azureEndpoint,\r\n      },\r\n      {\r\n        fieldKey: \"azure_tenant_id\",\r\n        required: true,\r\n        value: azureTenantID,\r\n      },\r\n      {\r\n        fieldKey: \"azure_client_id\",\r\n        required: true,\r\n        value: azureClientID,\r\n      },\r\n      {\r\n        fieldKey: \"azure_client_secret\",\r\n        required: true,\r\n        value: azureClientSecret,\r\n      },\r\n    ];\r\n\r\n    const commonVal = commonFormValidation(encryptionValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"encryption\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [\r\n    azureEndpoint,\r\n    azureTenantID,\r\n    azureClientID,\r\n    azureClientSecret,\r\n    dispatch,\r\n  ]);\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"azure_endpoint\"\r\n          name=\"azure_endpoint\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"azureEndpoint\", e.target.value);\r\n            cleanValidation(\"azure_endpoint\");\r\n          }}\r\n          label=\"Endpoint\"\r\n          value={azureEndpoint}\r\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <fieldset className={classes.fieldGroup}>\r\n          <legend className={classes.descriptionText}>Credentials</legend>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"azure_tenant_id\"\r\n              name=\"azure_tenant_id\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"azureTenantID\", e.target.value);\r\n                cleanValidation(\"azure_tenant_id\");\r\n              }}\r\n              label=\"Tenant ID\"\r\n              value={azureTenantID}\r\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"azure_client_id\"\r\n              name=\"azure_client_id\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"azureClientID\", e.target.value);\r\n                cleanValidation(\"azure_client_id\");\r\n              }}\r\n              label=\"Client ID\"\r\n              value={azureClientID}\r\n              error={validationErrors[\"azure_client_id\"] || \"\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"azure_client_secret\"\r\n              name=\"azure_client_secret\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"azureClientSecret\", e.target.value);\r\n                cleanValidation(\"azure_client_secret\");\r\n              }}\r\n              label=\"Client Secret\"\r\n              value={azureClientSecret}\r\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\r\n            />\r\n          </Grid>\r\n        </fieldset>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AzureKMSAdd;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { updateAddField } from \"../../createTenantSlice\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  })\r\n);\r\n\r\nconst GCPKMSAdd = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const gcpProjectID = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\r\n  );\r\n  const gcpEndpoint = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\r\n  );\r\n  const gcpClientEmail = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\r\n  );\r\n  const gcpClientID = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\r\n  );\r\n  const gcpPrivateKeyID = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\r\n  );\r\n  const gcpPrivateKey = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\r\n  );\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"gcp_project_id\"\r\n          name=\"gcp_project_id\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"gcpProjectID\", e.target.value);\r\n          }}\r\n          label=\"Project ID\"\r\n          value={gcpProjectID}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"gcp_endpoint\"\r\n          name=\"gcp_endpoint\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"gcpEndpoint\", e.target.value);\r\n          }}\r\n          label=\"Endpoint\"\r\n          value={gcpEndpoint}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <fieldset className={classes.fieldGroup}>\r\n          <legend className={classes.descriptionText}>Credentials</legend>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"gcp_client_email\"\r\n              name=\"gcp_client_email\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"gcpClientEmail\", e.target.value);\r\n              }}\r\n              label=\"Client Email\"\r\n              value={gcpClientEmail}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"gcp_client_id\"\r\n              name=\"gcp_client_id\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"gcpClientID\", e.target.value);\r\n              }}\r\n              label=\"Client ID\"\r\n              value={gcpClientID}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"gcp_private_key_id\"\r\n              name=\"gcp_private_key_id\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"gcpPrivateKeyID\", e.target.value);\r\n              }}\r\n              label=\"Private Key ID\"\r\n              value={gcpPrivateKeyID}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"gcp_private_key\"\r\n              name=\"gcp_private_key\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"gcpPrivateKey\", e.target.value);\r\n              }}\r\n              label=\"Private Key\"\r\n              value={gcpPrivateKey}\r\n            />\r\n          </Grid>\r\n        </fieldset>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GCPKMSAdd;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport FileSelector from \"../../../../Common/FormComponents/FileSelector/FileSelector\";\r\nimport {\r\n  addFileGemaltoCa,\r\n  isPageValid,\r\n  updateAddField,\r\n} from \"../../createTenantSlice\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\nimport { clearValidationError } from \"../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  })\r\n);\r\n\r\nconst GemaltoKMSAdd = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const gemaltoCA = useSelector(\r\n    (state: AppState) => state.createTenant.certificates.gemaltoCA\r\n  );\r\n  const gemaltoEndpoint = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint\r\n  );\r\n  const gemaltoToken = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken\r\n  );\r\n  const gemaltoDomain = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain\r\n  );\r\n  const gemaltoRetry = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let encryptionValidation: IValidation[] = [];\r\n\r\n    encryptionValidation = [\r\n      ...encryptionValidation,\r\n      {\r\n        fieldKey: \"gemalto_endpoint\",\r\n        required: true,\r\n        value: gemaltoEndpoint,\r\n      },\r\n      {\r\n        fieldKey: \"gemalto_token\",\r\n        required: true,\r\n        value: gemaltoToken,\r\n      },\r\n      {\r\n        fieldKey: \"gemalto_domain\",\r\n        required: true,\r\n        value: gemaltoDomain,\r\n      },\r\n      {\r\n        fieldKey: \"gemalto_retry\",\r\n        required: false,\r\n        value: gemaltoRetry,\r\n        customValidation: parseInt(gemaltoRetry) < 0,\r\n        customValidationMessage: \"Value needs to be 0 or greater\",\r\n      },\r\n    ];\r\n\r\n    const commonVal = commonFormValidation(encryptionValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"encryption\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [gemaltoEndpoint, gemaltoToken, gemaltoDomain, gemaltoRetry, dispatch]);\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"gemalto_endpoint\"\r\n          name=\"gemalto_endpoint\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"gemaltoEndpoint\", e.target.value);\r\n            cleanValidation(\"gemalto_endpoint\");\r\n          }}\r\n          label=\"Endpoint\"\r\n          value={gemaltoEndpoint}\r\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          marginBottom: 15,\r\n        }}\r\n      >\r\n        <fieldset className={classes.fieldGroup}>\r\n          <legend className={classes.descriptionText}>Credentials</legend>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"gemalto_token\"\r\n              name=\"gemalto_token\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"gemaltoToken\", e.target.value);\r\n                cleanValidation(\"gemalto_token\");\r\n              }}\r\n              label=\"Token\"\r\n              value={gemaltoToken}\r\n              error={validationErrors[\"gemalto_token\"] || \"\"}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"gemalto_domain\"\r\n              name=\"gemalto_domain\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"gemaltoDomain\", e.target.value);\r\n                cleanValidation(\"gemalto_domain\");\r\n              }}\r\n              label=\"Domain\"\r\n              value={gemaltoDomain}\r\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              type=\"number\"\r\n              min=\"0\"\r\n              id=\"gemalto_retry\"\r\n              name=\"gemalto_retry\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"gemaltoRetry\", e.target.value);\r\n                cleanValidation(\"gemalto_retry\");\r\n              }}\r\n              label=\"Retry (seconds)\"\r\n              value={gemaltoRetry}\r\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\r\n            />\r\n          </Grid>\r\n        </fieldset>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          marginBottom: 15,\r\n        }}\r\n      >\r\n        <fieldset className={classes.fieldGroup}>\r\n          <legend className={classes.descriptionText}>\r\n            Custom CA Root certificate verification\r\n          </legend>\r\n\r\n          <FileSelector\r\n            onChange={(encodedValue, fileName) => {\r\n              dispatch(\r\n                addFileGemaltoCa({\r\n                  fileName: fileName,\r\n                  value: encodedValue,\r\n                })\r\n              );\r\n              cleanValidation(\"gemalto_ca\");\r\n            }}\r\n            accept=\".cer,.crt,.cert,.pem\"\r\n            id=\"gemalto_ca\"\r\n            name=\"gemalto_ca\"\r\n            label=\"CA\"\r\n            value={gemaltoCA.cert}\r\n          />\r\n        </fieldset>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GemaltoKMSAdd;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../../utils/validationFunctions\";\r\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\r\nimport { clearValidationError } from \"../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  })\r\n);\r\n\r\nconst AWSKMSAdd = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const awsEndpoint = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint\r\n  );\r\n  const awsRegion = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion\r\n  );\r\n  const awsKMSKey = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey\r\n  );\r\n  const awsAccessKey = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey\r\n  );\r\n  const awsSecretKey = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey\r\n  );\r\n  const awsToken = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.awsToken\r\n  );\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let encryptionValidation: IValidation[] = [];\r\n\r\n    encryptionValidation = [\r\n      ...encryptionValidation,\r\n      {\r\n        fieldKey: \"aws_endpoint\",\r\n        required: true,\r\n        value: awsEndpoint,\r\n      },\r\n      {\r\n        fieldKey: \"aws_region\",\r\n        required: true,\r\n        value: awsRegion,\r\n      },\r\n      {\r\n        fieldKey: \"aws_accessKey\",\r\n        required: true,\r\n        value: awsAccessKey,\r\n      },\r\n      {\r\n        fieldKey: \"aws_secretKey\",\r\n        required: true,\r\n        value: awsSecretKey,\r\n      },\r\n    ];\r\n\r\n    const commonVal = commonFormValidation(encryptionValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"encryption\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [awsEndpoint, awsRegion, awsSecretKey, awsAccessKey, dispatch]);\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"aws_endpoint\"\r\n          name=\"aws_endpoint\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"awsEndpoint\", e.target.value);\r\n            cleanValidation(\"aws_endpoint\");\r\n          }}\r\n          label=\"Endpoint\"\r\n          value={awsEndpoint}\r\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"aws_region\"\r\n          name=\"aws_region\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"awsRegion\", e.target.value);\r\n            cleanValidation(\"aws_region\");\r\n          }}\r\n          label=\"Region\"\r\n          value={awsRegion}\r\n          error={validationErrors[\"aws_region\"] || \"\"}\r\n          required\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.formFieldRow}>\r\n        <InputBoxWrapper\r\n          id=\"aws_kmsKey\"\r\n          name=\"aws_kmsKey\"\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateField(\"awsKMSKey\", e.target.value);\r\n          }}\r\n          label=\"KMS Key\"\r\n          value={awsKMSKey}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <fieldset className={classes.fieldGroup}>\r\n          <legend className={classes.descriptionText}>Credentials</legend>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"aws_accessKey\"\r\n              name=\"aws_accessKey\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"awsAccessKey\", e.target.value);\r\n                cleanValidation(\"aws_accessKey\");\r\n              }}\r\n              label=\"Access Key\"\r\n              value={awsAccessKey}\r\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"aws_secretKey\"\r\n              name=\"aws_secretKey\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"awsSecretKey\", e.target.value);\r\n                cleanValidation(\"aws_secretKey\");\r\n              }}\r\n              label=\"Secret Key\"\r\n              value={awsSecretKey}\r\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"aws_token\"\r\n              name=\"aws_token\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"awsToken\", e.target.value);\r\n              }}\r\n              label=\"Token\"\r\n              value={awsToken}\r\n            />\r\n          </Grid>\r\n        </fieldset>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AWSKMSAdd;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../Common/FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../../store\";\r\nimport { clearValidationError } from \"../../utils\";\r\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\r\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../utils/validationFunctions\";\r\nimport SectionH1 from \"../../../Common/SectionH1\";\r\nimport {\r\n  addFileClientCert,\r\n  addFileServerCert,\r\n  isPageValid,\r\n  updateAddField,\r\n} from \"../createTenantSlice\";\r\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\r\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\r\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\r\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\r\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\r\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\n\r\ninterface IEncryptionProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    encryptionTypeOptions: {\r\n      marginBottom: 15,\r\n    },\r\n    mutualTlsConfig: {\r\n      marginTop: 15,\r\n      \"& fieldset\": {\r\n        flex: 1,\r\n      },\r\n    },\r\n    rightSpacer: {\r\n      marginRight: 15,\r\n    },\r\n    responsiveContainer: {\r\n      \"@media (max-width: 900px)\": {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n      },\r\n    },\r\n    ...createTenantCommon,\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst Encryption = ({ classes }: IEncryptionProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const replicas = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.replicas\r\n  );\r\n  const enableEncryption = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption\r\n  );\r\n  const encryptionType = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType\r\n  );\r\n\r\n  const gcpProjectID = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\r\n  );\r\n  const gcpEndpoint = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\r\n  );\r\n  const gcpClientEmail = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\r\n  );\r\n  const gcpClientID = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\r\n  );\r\n  const gcpPrivateKeyID = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\r\n  );\r\n  const gcpPrivateKey = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\r\n  );\r\n  const enableCustomCertsForKES = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.encryption.enableCustomCertsForKES\r\n  );\r\n  const enableAutoCert = useSelector(\r\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\r\n  );\r\n  const enableTLS = useSelector(\r\n    (state: AppState) => state.createTenant.fields.security.enableTLS\r\n  );\r\n  const minioServerCertificates = useSelector(\r\n    (state: AppState) => state.createTenant.certificates.minioServerCertificates\r\n  );\r\n  const serverCertificate = useSelector(\r\n    (state: AppState) => state.createTenant.certificates.serverCertificate\r\n  );\r\n  const clientCertificate = useSelector(\r\n    (state: AppState) => state.createTenant.certificates.clientCertificate\r\n  );\r\n\r\n  const enableCustomCerts = useSelector(\r\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\r\n  );\r\n  const kesSecurityContext = useSelector(\r\n    (state: AppState) => state.createTenant.fields.encryption.kesSecurityContext\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  let encryptionAvailable = false;\r\n  if (\r\n    enableTLS &&\r\n    (enableAutoCert ||\r\n      (minioServerCertificates &&\r\n        minioServerCertificates.filter(\r\n          (item) => item.encoded_key && item.encoded_cert\r\n        ).length > 0))\r\n  ) {\r\n    encryptionAvailable = true;\r\n  }\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let encryptionValidation: IValidation[] = [];\r\n\r\n    if (enableEncryption) {\r\n      encryptionValidation = [\r\n        ...encryptionValidation,\r\n        {\r\n          fieldKey: \"replicas\",\r\n          required: true,\r\n          value: replicas,\r\n          customValidation: parseInt(replicas) < 1,\r\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\r\n        },\r\n        {\r\n          fieldKey: \"kes_securityContext_runAsUser\",\r\n          required: true,\r\n          value: kesSecurityContext.runAsUser,\r\n          customValidation:\r\n            kesSecurityContext.runAsUser === \"\" ||\r\n            parseInt(kesSecurityContext.runAsUser) < 0,\r\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"kes_securityContext_runAsGroup\",\r\n          required: true,\r\n          value: kesSecurityContext.runAsGroup,\r\n          customValidation:\r\n            kesSecurityContext.runAsGroup === \"\" ||\r\n            parseInt(kesSecurityContext.runAsGroup) < 0,\r\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"kes_securityContext_fsGroup\",\r\n          required: true,\r\n          value: kesSecurityContext.fsGroup,\r\n          customValidation:\r\n            kesSecurityContext.fsGroup === \"\" ||\r\n            parseInt(kesSecurityContext.fsGroup) < 0,\r\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\r\n        },\r\n      ];\r\n\r\n      if (enableCustomCerts) {\r\n        encryptionValidation = [\r\n          ...encryptionValidation,\r\n          {\r\n            fieldKey: \"serverKey\",\r\n            required: !enableAutoCert,\r\n            value: serverCertificate.encoded_key,\r\n          },\r\n          {\r\n            fieldKey: \"serverCert\",\r\n            required: !enableAutoCert,\r\n            value: serverCertificate.encoded_cert,\r\n          },\r\n          {\r\n            fieldKey: \"clientKey\",\r\n            required: !enableAutoCert,\r\n            value: clientCertificate.encoded_key,\r\n          },\r\n          {\r\n            fieldKey: \"clientCert\",\r\n            required: !enableAutoCert,\r\n            value: clientCertificate.encoded_cert,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    const commonVal = commonFormValidation(encryptionValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"encryption\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [\r\n    enableEncryption,\r\n    encryptionType,\r\n    gcpProjectID,\r\n    gcpEndpoint,\r\n    gcpClientEmail,\r\n    gcpClientID,\r\n    gcpPrivateKeyID,\r\n    gcpPrivateKey,\r\n    dispatch,\r\n    enableAutoCert,\r\n    enableCustomCerts,\r\n    serverCertificate.encoded_key,\r\n    serverCertificate.encoded_cert,\r\n    clientCertificate.encoded_key,\r\n    clientCertificate.encoded_cert,\r\n    kesSecurityContext,\r\n    replicas,\r\n  ]);\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <Grid container alignItems={\"center\"}>\r\n        <Grid item xs>\r\n          <SectionH1>Encryption</SectionH1>\r\n        </Grid>\r\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\r\n          <FormSwitchWrapper\r\n            label={\"\"}\r\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\r\n            checked={enableEncryption}\r\n            value={\"tenant_encryption\"}\r\n            id=\"tenant-encryption\"\r\n            name=\"tenant-encryption\"\r\n            onChange={(e) => {\r\n              const targetD = e.target;\r\n              const checked = targetD.checked;\r\n\r\n              updateField(\"enableEncryption\", checked);\r\n            }}\r\n            description=\"\"\r\n            disabled={!encryptionAvailable}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <span className={classes.descriptionText}>\r\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\r\n            operations, allowing clients to take advantage of server processing\r\n            power to secure objects at the storage layer (encryption-at-rest).\r\n            SSE also provides key functionality to regulatory and compliance\r\n            requirements around secure locking and erasure.\r\n          </span>\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <hr className={classes.hrClass} />\r\n        </Grid>\r\n\r\n        {enableEncryption && (\r\n          <Fragment>\r\n            <Grid item xs={12} className={classes.encryptionTypeOptions}>\r\n              <RadioGroupSelector\r\n                currentSelection={encryptionType}\r\n                id=\"encryptionType\"\r\n                name=\"encryptionType\"\r\n                label=\"Encryption Options\"\r\n                onChange={(e) => {\r\n                  updateField(\"encryptionType\", e.target.value);\r\n                }}\r\n                selectorOptions={[\r\n                  { label: \"Vault\", value: \"vault\" },\r\n                  { label: \"AWS\", value: \"aws\" },\r\n                  { label: \"Gemalto\", value: \"gemalto\" },\r\n                  { label: \"GCP\", value: \"gcp\" },\r\n                  { label: \"Azure\", value: \"azure\" },\r\n                ]}\r\n              />\r\n            </Grid>\r\n            {encryptionType === \"vault\" && <VaultKMSAdd />}\r\n            {encryptionType === \"azure\" && <AzureKMSAdd />}\r\n            {encryptionType === \"gcp\" && <GCPKMSAdd />}\r\n            {encryptionType === \"aws\" && <AWSKMSAdd />}\r\n            {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\r\n            <div className={classes.headerElement}>\r\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\r\n            </div>\r\n            <Grid item xs={12}>\r\n              <FormSwitchWrapper\r\n                value=\"enableCustomCertsForKES\"\r\n                id=\"enableCustomCertsForKES\"\r\n                name=\"enableCustomCertsForKES\"\r\n                checked={enableCustomCertsForKES || !enableAutoCert}\r\n                onChange={(e) => {\r\n                  const targetD = e.target;\r\n                  const checked = targetD.checked;\r\n\r\n                  updateField(\"enableCustomCertsForKES\", checked);\r\n                }}\r\n                label={\"Custom Certificates\"}\r\n                disabled={!enableAutoCert}\r\n              />\r\n            </Grid>\r\n            {(enableCustomCertsForKES || !enableAutoCert) && (\r\n              <Fragment>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\r\n                    <fieldset className={classes.fieldGroup}>\r\n                      <legend className={classes.descriptionText}>\r\n                        Encryption Service Certificates\r\n                      </legend>\r\n                      <FileSelector\r\n                        onChange={(encodedValue, fileName) => {\r\n                          dispatch(\r\n                            addFileServerCert({\r\n                              key: \"key\",\r\n                              fileName: fileName,\r\n                              value: encodedValue,\r\n                            })\r\n                          );\r\n                          cleanValidation(\"serverKey\");\r\n                        }}\r\n                        accept=\".key,.pem\"\r\n                        id=\"serverKey\"\r\n                        name=\"serverKey\"\r\n                        label=\"Key\"\r\n                        error={validationErrors[\"serverKey\"] || \"\"}\r\n                        value={serverCertificate.key}\r\n                        required={!enableAutoCert}\r\n                      />\r\n                      <FileSelector\r\n                        onChange={(encodedValue, fileName) => {\r\n                          dispatch(\r\n                            addFileServerCert({\r\n                              key: \"cert\",\r\n                              fileName: fileName,\r\n                              value: encodedValue,\r\n                            })\r\n                          );\r\n                          cleanValidation(\"serverCert\");\r\n                        }}\r\n                        accept=\".cer,.crt,.cert,.pem\"\r\n                        id=\"serverCert\"\r\n                        name=\"serverCert\"\r\n                        label=\"Cert\"\r\n                        error={validationErrors[\"serverCert\"] || \"\"}\r\n                        value={serverCertificate.cert}\r\n                        required={!enableAutoCert}\r\n                      />\r\n                    </fieldset>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container style={{ marginBottom: 15 }}>\r\n                  <Grid item xs={12}>\r\n                    <fieldset className={classes.fieldGroup}>\r\n                      <legend className={classes.descriptionText}>\r\n                        Mutual TLS authentication with MinIO\r\n                      </legend>\r\n                      <FileSelector\r\n                        onChange={(encodedValue, fileName) => {\r\n                          dispatch(\r\n                            addFileClientCert({\r\n                              key: \"key\",\r\n                              fileName: fileName,\r\n                              value: encodedValue,\r\n                            })\r\n                          );\r\n                          cleanValidation(\"clientKey\");\r\n                        }}\r\n                        accept=\".key,.pem\"\r\n                        id=\"clientKey\"\r\n                        name=\"clientKey\"\r\n                        label=\"Key\"\r\n                        error={validationErrors[\"clientKey\"] || \"\"}\r\n                        value={clientCertificate.key}\r\n                        required={!enableAutoCert}\r\n                      />\r\n                      <FileSelector\r\n                        onChange={(encodedValue, fileName) => {\r\n                          dispatch(\r\n                            addFileClientCert({\r\n                              key: \"cert\",\r\n                              fileName: fileName,\r\n                              value: encodedValue,\r\n                            })\r\n                          );\r\n                          cleanValidation(\"clientCert\");\r\n                        }}\r\n                        accept=\".cer,.crt,.cert,.pem\"\r\n                        id=\"clientCert\"\r\n                        name=\"clientCert\"\r\n                        label=\"Cert\"\r\n                        error={validationErrors[\"clientCert\"] || \"\"}\r\n                        value={clientCertificate.cert}\r\n                        required={!enableAutoCert}\r\n                      />\r\n                    </fieldset>\r\n                  </Grid>\r\n                </Grid>\r\n              </Fragment>\r\n            )}\r\n            <Grid item xs={12}>\r\n              <Grid item xs={12} classes={classes.formFieldRow}>\r\n                <InputBoxWrapper\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  id=\"replicas\"\r\n                  name=\"replicas\"\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    updateField(\"replicas\", e.target.value);\r\n                    cleanValidation(\"replicas\");\r\n                  }}\r\n                  label=\"Replicas\"\r\n                  value={replicas}\r\n                  required\r\n                  error={validationErrors[\"replicas\"] || \"\"}\r\n                />\r\n              </Grid>\r\n\r\n              <fieldset\r\n                className={classes.fieldGroup}\r\n                style={{ marginTop: 15 }}\r\n              >\r\n                <legend className={classes.descriptionText}>\r\n                  SecurityContext for KES pods\r\n                </legend>\r\n                <Grid item xs={12} className={classes.kesSecurityContext}>\r\n                  <div\r\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\r\n                  >\r\n                    <div\r\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\r\n                    >\r\n                      <InputBoxWrapper\r\n                        type=\"number\"\r\n                        id=\"kes_securityContext_runAsUser\"\r\n                        name=\"kes_securityContext_runAsUser\"\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          updateField(\"kesSecurityContext\", {\r\n                            ...kesSecurityContext,\r\n                            runAsUser: e.target.value,\r\n                          });\r\n                          cleanValidation(\"kes_securityContext_runAsUser\");\r\n                        }}\r\n                        label=\"Run As User\"\r\n                        value={kesSecurityContext.runAsUser}\r\n                        required\r\n                        error={\r\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\r\n                          \"\"\r\n                        }\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\r\n                    >\r\n                      <InputBoxWrapper\r\n                        type=\"number\"\r\n                        id=\"kes_securityContext_runAsGroup\"\r\n                        name=\"kes_securityContext_runAsGroup\"\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          updateField(\"kesSecurityContext\", {\r\n                            ...kesSecurityContext,\r\n                            runAsGroup: e.target.value,\r\n                          });\r\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\r\n                        }}\r\n                        label=\"Run As Group\"\r\n                        value={kesSecurityContext.runAsGroup}\r\n                        required\r\n                        error={\r\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\r\n                          \"\"\r\n                        }\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n                <br />\r\n                <Grid item xs={12} className={classes.kesSecurityContext}>\r\n                  <div\r\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\r\n                  >\r\n                    <div\r\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\r\n                    >\r\n                      <InputBoxWrapper\r\n                        type=\"number\"\r\n                        id=\"kes_securityContext_fsGroup\"\r\n                        name=\"kes_securityContext_fsGroup\"\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          updateField(\"kesSecurityContext\", {\r\n                            ...kesSecurityContext,\r\n                            fsGroup: e.target.value,\r\n                          });\r\n                          cleanValidation(\"kes_securityContext_fsGroup\");\r\n                        }}\r\n                        label=\"FsGroup\"\r\n                        value={kesSecurityContext.fsGroup}\r\n                        required\r\n                        error={\r\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\r\n                        }\r\n                        min=\"0\"\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\r\n                    >\r\n                      <SelectWrapper\r\n                        label=\"FsGroupChangePolicy\"\r\n                        id=\"securityContext_fsGroupChangePolicy\"\r\n                        name=\"securityContext_fsGroupChangePolicy\"\r\n                        value={kesSecurityContext.fsGroupChangePolicy}\r\n                        onChange={(e: SelectChangeEvent<string>) => {\r\n                          updateField(\"kesSecurityContext\", {\r\n                            ...kesSecurityContext,\r\n                            fsGroupChangePolicy: e.target.value,\r\n                          });\r\n                        }}\r\n                        options={[\r\n                          {\r\n                            label: \"Always\",\r\n                            value: \"Always\",\r\n                          },\r\n                          {\r\n                            label: \"OnRootMismatch\",\r\n                            value: \"OnRootMismatch\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n                <br />\r\n                <Grid item xs={12}>\r\n                  <div className={classes.multiContainer}>\r\n                    <FormSwitchWrapper\r\n                      value=\"kesSecurityContextRunAsNonRoot\"\r\n                      id=\"kes_securityContext_runAsNonRoot\"\r\n                      name=\"kes_securityContext_runAsNonRoot\"\r\n                      checked={kesSecurityContext.runAsNonRoot}\r\n                      onChange={(e) => {\r\n                        const targetD = e.target;\r\n                        const checked = targetD.checked;\r\n                        updateField(\"kesSecurityContext\", {\r\n                          ...kesSecurityContext,\r\n                          runAsNonRoot: checked,\r\n                        });\r\n                      }}\r\n                      label={\"Do not run as Root\"}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </fieldset>\r\n            </Grid>\r\n          </Fragment>\r\n        )}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Encryption);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\r\nimport { AppState, useAppDispatch } from \"../../../../../store\";\r\n\r\nimport {\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../Common/FormComponents/common/styleLibrary\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../utils/validationFunctions\";\r\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\r\nimport { LabelKeyPair } from \"../../types\";\r\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\r\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport api from \"../../../../../common/api\";\r\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport AddIcon from \"../../../../../icons/AddIcon\";\r\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\r\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\r\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\r\nimport {\r\n  addNewToleration,\r\n  isPageValid,\r\n  removeToleration,\r\n  setKeyValuePairs,\r\n  setTolerationInfo,\r\n  updateAddField,\r\n} from \"../createTenantSlice\";\r\n\r\ninterface IAffinityProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    overlayAction: {\r\n      marginLeft: 10,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& svg\": {\r\n        maxWidth: 15,\r\n        maxHeight: 15,\r\n      },\r\n      \"& button\": {\r\n        background: \"#EAEAEA\",\r\n      },\r\n    },\r\n    affinityConfigField: {\r\n      display: \"flex\",\r\n    },\r\n    affinityFieldLabel: {\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      flex: 1,\r\n    },\r\n    radioField: {\r\n      display: \"flex\",\r\n      alignItems: \"flex-start\",\r\n      marginTop: 10,\r\n      \"& div:first-child\": {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"baseline\",\r\n        textAlign: \"left !important\",\r\n      },\r\n    },\r\n    affinityLabelKey: {\r\n      \"& div:first-child\": {\r\n        marginBottom: 0,\r\n      },\r\n    },\r\n    affinityLabelValue: {\r\n      marginLeft: 10,\r\n      \"& div:first-child\": {\r\n        marginBottom: 0,\r\n      },\r\n    },\r\n    rowActions: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    affinityRow: {\r\n      marginBottom: 10,\r\n      display: \"flex\",\r\n    },\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\ninterface OptionPair {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst Affinity = ({ classes }: IAffinityProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const podAffinity = useSelector(\r\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity\r\n  );\r\n  const nodeSelectorLabels = useSelector(\r\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels\r\n  );\r\n  const withPodAntiAffinity = useSelector(\r\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity\r\n  );\r\n  const keyValuePairs = useSelector(\r\n    (state: AppState) => state.createTenant.nodeSelectorPairs\r\n  );\r\n  const tolerations = useSelector(\r\n    (state: AppState) => state.createTenant.tolerations\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\r\n    {}\r\n  );\r\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({\r\n          pageName: \"affinity\",\r\n          field: field,\r\n          value: value,\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\r\n        .then((res: { [key: string]: string[] }) => {\r\n          setLoading(false);\r\n          setKeyValueMap(res);\r\n          let keys: OptionPair[] = [];\r\n          for (let k in res) {\r\n            keys.push({\r\n              label: k,\r\n              value: k,\r\n            });\r\n          }\r\n          setKeyOptions(keys);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setLoading(false);\r\n          dispatch(setModalErrorSnackMessage(err));\r\n          setKeyValueMap({});\r\n        });\r\n    }\r\n  }, [dispatch, loading]);\r\n\r\n  useEffect(() => {\r\n    if (keyValuePairs) {\r\n      const vlr = keyValuePairs\r\n        .filter((kvp) => kvp.key !== \"\")\r\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\r\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\r\n      const vl = vlr.join(\"&\");\r\n      updateField(\"nodeSelectorLabels\", vl);\r\n    }\r\n  }, [keyValuePairs, updateField]);\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customAccountValidation: IValidation[] = [];\r\n\r\n    if (podAffinity === \"nodeSelector\") {\r\n      let valid = true;\r\n\r\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\r\n\r\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\r\n        valid = false;\r\n      }\r\n\r\n      splittedLabels.forEach((item: string, index: number) => {\r\n        const splitItem = item.split(\"=\");\r\n\r\n        if (splitItem.length !== 2) {\r\n          valid = false;\r\n        }\r\n\r\n        if (index + 1 !== splittedLabels.length) {\r\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\r\n            valid = false;\r\n          }\r\n        }\r\n      });\r\n\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        {\r\n          fieldKey: \"labels\",\r\n          required: true,\r\n          value: nodeSelectorLabels,\r\n          customValidation: !valid,\r\n          customValidationMessage:\r\n            \"You need to add at least one label key-pair\",\r\n        },\r\n      ];\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customAccountValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"affinity\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\r\n\r\n  const updateToleration = (index: number, field: string, value: any) => {\r\n    const alterToleration = { ...tolerations[index], [field]: value };\r\n\r\n    dispatch(\r\n      setTolerationInfo({\r\n        index: index,\r\n        tolerationValue: alterToleration,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <div className={classes.headerElement}>\r\n        <h3 className={classes.h3Section}>Pod Placement</h3>\r\n        <span className={classes.descriptionText}>\r\n          Configure how pods will be assigned to nodes\r\n        </span>\r\n      </div>\r\n      <Grid item xs={12} className={classes.affinityConfigField}>\r\n        <Grid item className={classes.affinityFieldLabel}>\r\n          <div className={classes.label}>Type</div>\r\n          <div\r\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\r\n          >\r\n            MinIO supports multiple configurations for Pod Affinity\r\n          </div>\r\n          <Grid item className={classes.radioField}>\r\n            <RadioGroupSelector\r\n              currentSelection={podAffinity}\r\n              id=\"affinity-options\"\r\n              name=\"affinity-options\"\r\n              label={\" \"}\r\n              onChange={(e) => {\r\n                updateField(\"podAffinity\", e.target.value);\r\n              }}\r\n              selectorOptions={[\r\n                { label: \"None\", value: \"none\" },\r\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\r\n                { label: \"Node Selector\", value: \"nodeSelector\" },\r\n              ]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {podAffinity === \"nodeSelector\" && (\r\n        <Fragment>\r\n          <br />\r\n          <Grid item xs={12}>\r\n            <FormSwitchWrapper\r\n              value=\"with_pod_anti_affinity\"\r\n              id=\"with_pod_anti_affinity\"\r\n              name=\"with_pod_anti_affinity\"\r\n              checked={withPodAntiAffinity}\r\n              onChange={(e) => {\r\n                const targetD = e.target;\r\n                const checked = targetD.checked;\r\n\r\n                updateField(\"withPodAntiAffinity\", checked);\r\n              }}\r\n              label={\"With Pod Anti-Affinity\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h3>Labels</h3>\r\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\r\n            <Grid container>\r\n              {keyValuePairs &&\r\n                keyValuePairs.map((kvp, i) => {\r\n                  return (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      className={classes.affinityRow}\r\n                      key={`affinity-keyVal-${i.toString()}`}\r\n                    >\r\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\r\n                        {keyOptions.length > 0 && (\r\n                          <SelectWrapper\r\n                            onChange={(e: SelectChangeEvent<string>) => {\r\n                              const newKey = e.target.value as string;\r\n                              const newLKP: LabelKeyPair = {\r\n                                key: newKey,\r\n                                value: keyValueMap[newKey][0],\r\n                              };\r\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\r\n                              arrCp[i] = newLKP;\r\n                              dispatch(setKeyValuePairs(arrCp));\r\n                            }}\r\n                            id=\"select-access-policy\"\r\n                            name=\"select-access-policy\"\r\n                            label={\"\"}\r\n                            value={kvp.key}\r\n                            options={keyOptions}\r\n                          />\r\n                        )}\r\n                        {keyOptions.length === 0 && (\r\n                          <InputBoxWrapper\r\n                            id={`nodeselector-key-${i.toString()}`}\r\n                            label={\"\"}\r\n                            name={`nodeselector-${i.toString()}`}\r\n                            value={kvp.key}\r\n                            onChange={(e) => {\r\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\r\n                              arrCp[i] = {\r\n                                key: arrCp[i].key,\r\n                                value: e.target.value as string,\r\n                              };\r\n                              dispatch(setKeyValuePairs(arrCp));\r\n                            }}\r\n                            index={i}\r\n                            placeholder={\"Key\"}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\r\n                        {keyOptions.length > 0 && (\r\n                          <SelectWrapper\r\n                            onChange={(e: SelectChangeEvent<string>) => {\r\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\r\n                              arrCp[i] = {\r\n                                key: arrCp[i].key,\r\n                                value: e.target.value as string,\r\n                              };\r\n                              dispatch(setKeyValuePairs(arrCp));\r\n                            }}\r\n                            id=\"select-access-policy\"\r\n                            name=\"select-access-policy\"\r\n                            label={\"\"}\r\n                            value={kvp.value}\r\n                            options={\r\n                              keyValueMap[kvp.key]\r\n                                ? keyValueMap[kvp.key].map((v) => {\r\n                                    return { label: v, value: v };\r\n                                  })\r\n                                : []\r\n                            }\r\n                          />\r\n                        )}\r\n                        {keyOptions.length === 0 && (\r\n                          <InputBoxWrapper\r\n                            id={`nodeselector-value-${i.toString()}`}\r\n                            label={\"\"}\r\n                            name={`nodeselector-${i.toString()}`}\r\n                            value={kvp.value}\r\n                            onChange={(e) => {\r\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\r\n                              arrCp[i] = {\r\n                                key: arrCp[i].key,\r\n                                value: e.target.value as string,\r\n                              };\r\n                              dispatch(setKeyValuePairs(arrCp));\r\n                            }}\r\n                            index={i}\r\n                            placeholder={\"value\"}\r\n                          />\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item xs={2} className={classes.rowActions}>\r\n                        <div className={classes.overlayAction}>\r\n                          <IconButton\r\n                            size={\"small\"}\r\n                            onClick={() => {\r\n                              const arrCp = [...keyValuePairs];\r\n                              if (keyOptions.length > 0) {\r\n                                arrCp.push({\r\n                                  key: keyOptions[0].value,\r\n                                  value: keyValueMap[keyOptions[0].value][0],\r\n                                });\r\n                              } else {\r\n                                arrCp.push({ key: \"\", value: \"\" });\r\n                              }\r\n\r\n                              dispatch(setKeyValuePairs(arrCp));\r\n                            }}\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                        {keyValuePairs.length > 1 && (\r\n                          <div className={classes.overlayAction}>\r\n                            <IconButton\r\n                              size={\"small\"}\r\n                              onClick={() => {\r\n                                const arrCp = keyValuePairs.filter(\r\n                                  (item, index) => index !== i\r\n                                );\r\n                                dispatch(setKeyValuePairs(arrCp));\r\n                              }}\r\n                            >\r\n                              <RemoveIcon />\r\n                            </IconButton>\r\n                          </div>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      )}\r\n      <Grid item xs={12} className={classes.affinityConfigField}>\r\n        <Grid item className={classes.affinityFieldLabel}>\r\n          <h3>Tolerations</h3>\r\n          <span className={classes.error}>\r\n            {validationErrors[\"tolerations\"]}\r\n          </span>\r\n          <Grid container>\r\n            {tolerations &&\r\n              tolerations.map((tol, i) => {\r\n                return (\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    className={classes.affinityRow}\r\n                    key={`affinity-keyVal-${i.toString()}`}\r\n                  >\r\n                    <TolerationSelector\r\n                      effect={tol.effect}\r\n                      onEffectChange={(value) => {\r\n                        updateToleration(i, \"effect\", value);\r\n                      }}\r\n                      tolerationKey={tol.key}\r\n                      onTolerationKeyChange={(value) => {\r\n                        updateToleration(i, \"key\", value);\r\n                      }}\r\n                      operator={tol.operator}\r\n                      onOperatorChange={(value) => {\r\n                        updateToleration(i, \"operator\", value);\r\n                      }}\r\n                      value={tol.value}\r\n                      onValueChange={(value) => {\r\n                        updateToleration(i, \"value\", value);\r\n                      }}\r\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\r\n                      onSecondsChange={(value) => {\r\n                        updateToleration(i, \"tolerationSeconds\", {\r\n                          seconds: value,\r\n                        });\r\n                      }}\r\n                      index={i}\r\n                    />\r\n                    <div className={classes.overlayAction}>\r\n                      <IconButton\r\n                        size={\"small\"}\r\n                        onClick={() => {\r\n                          dispatch(addNewToleration());\r\n                        }}\r\n                        disabled={i !== tolerations.length - 1}\r\n                      >\r\n                        <AddIcon />\r\n                      </IconButton>\r\n                    </div>\r\n\r\n                    <div className={classes.overlayAction}>\r\n                      <IconButton\r\n                        size={\"small\"}\r\n                        onClick={() => dispatch(removeToleration(i))}\r\n                        disabled={tolerations.length <= 1}\r\n                      >\r\n                        <RemoveIcon />\r\n                      </IconButton>\r\n                    </div>\r\n                  </Grid>\r\n                );\r\n              })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Affinity);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid, Paper } from \"@mui/material\";\r\nimport {\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../Common/FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../../store\";\r\nimport { clearValidationError } from \"../../utils\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../utils/validationFunctions\";\r\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\r\n\r\ninterface IImagesProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst Images = ({ classes }: IImagesProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const customImage = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.customImage\r\n  );\r\n  const imageName = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.imageName\r\n  );\r\n  const customDockerhub = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub\r\n  );\r\n  const imageRegistry = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry\r\n  );\r\n  const imageRegistryUsername = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.imageRegistryUsername\r\n  );\r\n  const imageRegistryPassword = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.imageRegistryPassword\r\n  );\r\n\r\n  const prometheusCustom = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\r\n  );\r\n  const tenantCustom = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\r\n  );\r\n  const logSearchCustom = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\r\n  );\r\n  const logSearchVolumeSize = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\r\n  );\r\n\r\n  const prometheusVolumeSize = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.prometheusVolumeSize\r\n  );\r\n\r\n  const logSearchSelectedStorageClass = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\r\n  );\r\n  const logSearchImage = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\r\n  );\r\n  const kesImage = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.kesImage\r\n  );\r\n  const logSearchPostgresImage = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.logSearchPostgresImage\r\n  );\r\n  const logSearchPostgresInitImage = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.logSearchPostgresInitImage\r\n  );\r\n  const prometheusSelectedStorageClass = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\r\n  );\r\n  const prometheusImage = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\r\n  );\r\n  const prometheusSidecarImage = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.prometheusSidecarImage\r\n  );\r\n  const prometheusInitImage = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"configure\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customAccountValidation: IValidation[] = [];\r\n\r\n    if (prometheusCustom) {\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        {\r\n          fieldKey: \"prometheus_storage_class\",\r\n          required: true,\r\n          value: prometheusSelectedStorageClass,\r\n          customValidation: prometheusSelectedStorageClass === \"\",\r\n          customValidationMessage: \"Field cannot be empty\",\r\n        },\r\n        {\r\n          fieldKey: \"prometheus_volume_size\",\r\n          required: true,\r\n          value: prometheusVolumeSize,\r\n          customValidation:\r\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\r\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\r\n        },\r\n      ];\r\n    }\r\n    if (logSearchCustom) {\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        {\r\n          fieldKey: \"log_search_storage_class\",\r\n          required: true,\r\n          value: logSearchSelectedStorageClass,\r\n          customValidation: logSearchSelectedStorageClass === \"\",\r\n          customValidationMessage: \"Field cannot be empty\",\r\n        },\r\n        {\r\n          fieldKey: \"log_search_volume_size\",\r\n          required: true,\r\n          value: logSearchVolumeSize,\r\n          customValidation:\r\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\r\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\r\n        },\r\n      ];\r\n    }\r\n\r\n    if (customImage) {\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        {\r\n          fieldKey: \"image\",\r\n          required: false,\r\n          value: imageName,\r\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\r\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\r\n        },\r\n        {\r\n          fieldKey: \"logSearchImage\",\r\n          required: false,\r\n          value: logSearchImage,\r\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\r\n          customPatternMessage:\r\n            \"Format must be of form: 'minio/operator:VERSION'\",\r\n        },\r\n        {\r\n          fieldKey: \"kesImage\",\r\n          required: false,\r\n          value: kesImage,\r\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\r\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\r\n        },\r\n        {\r\n          fieldKey: \"logSearchPostgresImage\",\r\n          required: false,\r\n          value: logSearchPostgresImage,\r\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\r\n          customPatternMessage:\r\n            \"Format must be of form: 'library/postgres:VERSION'\",\r\n        },\r\n        {\r\n          fieldKey: \"logSearchPostgresInitImage\",\r\n          required: false,\r\n          value: logSearchPostgresInitImage,\r\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\r\n          customPatternMessage:\r\n            \"Format must be of form: 'library/busybox:VERSION'\",\r\n        },\r\n        {\r\n          fieldKey: \"prometheusImage\",\r\n          required: false,\r\n          value: prometheusImage,\r\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\r\n          customPatternMessage:\r\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\r\n        },\r\n        {\r\n          fieldKey: \"prometheusSidecarImage\",\r\n          required: false,\r\n          value: prometheusSidecarImage,\r\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\r\n          customPatternMessage:\r\n            \"Format must be of form: 'project/container:VERSION'\",\r\n        },\r\n        {\r\n          fieldKey: \"prometheusInitImage\",\r\n          required: false,\r\n          value: prometheusInitImage,\r\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\r\n          customPatternMessage:\r\n            \"Format must be of form: 'library/busybox:VERSION'\",\r\n        },\r\n      ];\r\n      if (customDockerhub) {\r\n        customAccountValidation = [\r\n          ...customAccountValidation,\r\n          {\r\n            fieldKey: \"registry\",\r\n            required: true,\r\n            value: imageRegistry,\r\n          },\r\n          {\r\n            fieldKey: \"registryUsername\",\r\n            required: true,\r\n            value: imageRegistryUsername,\r\n          },\r\n          {\r\n            fieldKey: \"registryPassword\",\r\n            required: true,\r\n            value: imageRegistryPassword,\r\n          },\r\n        ];\r\n      }\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customAccountValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"configure\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [\r\n    customImage,\r\n    imageName,\r\n    logSearchImage,\r\n    kesImage,\r\n    logSearchPostgresImage,\r\n    logSearchPostgresInitImage,\r\n    prometheusImage,\r\n    prometheusSidecarImage,\r\n    prometheusInitImage,\r\n    customDockerhub,\r\n    imageRegistry,\r\n    imageRegistryUsername,\r\n    imageRegistryPassword,\r\n    dispatch,\r\n    prometheusCustom,\r\n    tenantCustom,\r\n    logSearchCustom,\r\n    prometheusSelectedStorageClass,\r\n    prometheusVolumeSize,\r\n    logSearchSelectedStorageClass,\r\n    logSearchVolumeSize,\r\n  ]);\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <div className={classes.headerElement}>\r\n        <h3 className={classes.h3Section}>Container Images</h3>\r\n        <span className={classes.descriptionText}>\r\n          Specify the container images used by the Tenant and it's features.\r\n        </span>\r\n      </div>\r\n\r\n      <Fragment>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <InputBoxWrapper\r\n            id=\"image\"\r\n            name=\"image\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              updateField(\"imageName\", e.target.value);\r\n              cleanValidation(\"image\");\r\n            }}\r\n            label=\"MinIO\"\r\n            value={imageName}\r\n            error={validationErrors[\"image\"] || \"\"}\r\n            placeholder=\"minio/minio:RELEASE.2022-02-26T02-54-46Z\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <InputBoxWrapper\r\n            id=\"kesImage\"\r\n            name=\"kesImage\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              updateField(\"kesImage\", e.target.value);\r\n              cleanValidation(\"kesImage\");\r\n            }}\r\n            label=\"KES\"\r\n            value={kesImage}\r\n            error={validationErrors[\"kesImage\"] || \"\"}\r\n            placeholder=\"minio/kes:v0.17.6\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <h4>Log Search</h4>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <InputBoxWrapper\r\n            id=\"logSearchImage\"\r\n            name=\"logSearchImage\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              updateField(\"logSearchImage\", e.target.value);\r\n              cleanValidation(\"logSearchImage\");\r\n            }}\r\n            label=\"API\"\r\n            value={logSearchImage}\r\n            error={validationErrors[\"logSearchImage\"] || \"\"}\r\n            placeholder=\"minio/operator:v4.4.22\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <InputBoxWrapper\r\n            id=\"logSearchPostgresImage\"\r\n            name=\"logSearchPostgresImage\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              updateField(\"logSearchPostgresImage\", e.target.value);\r\n              cleanValidation(\"logSearchPostgresImage\");\r\n            }}\r\n            label=\"PostgreSQL\"\r\n            value={logSearchPostgresImage}\r\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\r\n            placeholder=\"library/postgres:13\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <InputBoxWrapper\r\n            id=\"logSearchPostgresInitImage\"\r\n            name=\"logSearchPostgresInitImage\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\r\n              cleanValidation(\"logSearchPostgresInitImage\");\r\n            }}\r\n            label=\"PostgreSQL Init\"\r\n            value={logSearchPostgresInitImage}\r\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\r\n            placeholder=\"library/busybox:1.33.1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <h4>Monitoring</h4>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <InputBoxWrapper\r\n            id=\"prometheusImage\"\r\n            name=\"prometheusImage\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              updateField(\"prometheusImage\", e.target.value);\r\n              cleanValidation(\"prometheusImage\");\r\n            }}\r\n            label=\"Prometheus\"\r\n            value={prometheusImage}\r\n            error={validationErrors[\"prometheusImage\"] || \"\"}\r\n            placeholder=\"quay.io/prometheus/prometheus:latest\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <InputBoxWrapper\r\n            id=\"prometheusSidecarImage\"\r\n            name=\"prometheusSidecarImage\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              updateField(\"prometheusSidecarImage\", e.target.value);\r\n              cleanValidation(\"prometheusSidecarImage\");\r\n            }}\r\n            label=\"Prometheus Sidecar\"\r\n            value={prometheusSidecarImage}\r\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\r\n            placeholder=\"library/alpine:latest\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.formFieldRow}>\r\n          <InputBoxWrapper\r\n            id=\"prometheusInitImage\"\r\n            name=\"prometheusInitImage\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              updateField(\"prometheusInitImage\", e.target.value);\r\n              cleanValidation(\"prometheusInitImage\");\r\n            }}\r\n            label=\"Prometheus Init\"\r\n            value={prometheusInitImage}\r\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\r\n            placeholder=\"library/busybox:1.33.1\"\r\n          />\r\n        </Grid>\r\n      </Fragment>\r\n\r\n      {customImage && (\r\n        <Fragment>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <h4>Custom Container Registry</h4>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <FormSwitchWrapper\r\n              value=\"custom_docker_hub\"\r\n              id=\"custom_docker_hub\"\r\n              name=\"custom_docker_hub\"\r\n              checked={customDockerhub}\r\n              onChange={(e) => {\r\n                const targetD = e.target;\r\n                const checked = targetD.checked;\r\n\r\n                updateField(\"customDockerhub\", checked);\r\n              }}\r\n              label={\"Use a private container registry\"}\r\n            />\r\n          </Grid>\r\n        </Fragment>\r\n      )}\r\n      {customDockerhub && (\r\n        <Fragment>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"registry\"\r\n              name=\"registry\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"imageRegistry\", e.target.value);\r\n              }}\r\n              label=\"Endpoint\"\r\n              value={imageRegistry}\r\n              error={validationErrors[\"registry\"] || \"\"}\r\n              placeholder=\"https://index.docker.io/v1/\"\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"registryUsername\"\r\n              name=\"registryUsername\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"imageRegistryUsername\", e.target.value);\r\n              }}\r\n              label=\"Username\"\r\n              value={imageRegistryUsername}\r\n              error={validationErrors[\"registryUsername\"] || \"\"}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.formFieldRow}>\r\n            <InputBoxWrapper\r\n              id=\"registryPassword\"\r\n              name=\"registryPassword\"\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                updateField(\"imageRegistryPassword\", e.target.value);\r\n              }}\r\n              label=\"Password\"\r\n              value={imageRegistryPassword}\r\n              error={validationErrors[\"registryPassword\"] || \"\"}\r\n              required\r\n            />\r\n          </Grid>\r\n        </Fragment>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Images);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { AppState } from \"../../../../../store\";\r\nimport {\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../Common/FormComponents/common/styleLibrary\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { niceBytes } from \"../../../../../common/utils\";\r\n\r\nimport { Divider } from \"@mui/material\";\r\n\r\ninterface ISizePreviewProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 4,\r\n    },\r\n    table: {\r\n      \"& .MuiTableCell-root\": {\r\n        fontSize: 13,\r\n      },\r\n    },\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\r\n  const nodes = useSelector(\r\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes\r\n  );\r\n  const memoryNode = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest\r\n  );\r\n  const ecParity = useSelector(\r\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity\r\n  );\r\n\r\n  const distribution = useSelector(\r\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution\r\n  );\r\n  const ecParityCalc = useSelector(\r\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc\r\n  );\r\n\r\n  const cpuToUse = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.tenantSize.resourcesCPURequest\r\n  );\r\n  const integrationSelection = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.tenantSize.integrationSelection\r\n  );\r\n\r\n  const usableInformation = ecParityCalc.storageFactors.find(\r\n    (element) => element.erasureCode === ecParity\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h4>Resource Allocation</h4>\r\n      <Divider />\r\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell scope=\"row\">Number of Servers</TableCell>\r\n            <TableCell align=\"right\">\r\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\r\n            </TableCell>\r\n          </TableRow>\r\n          {integrationSelection.typeSelection === \"\" &&\r\n            integrationSelection.storageClass === \"\" && (\r\n              <Fragment>\r\n                <TableRow>\r\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {distribution ? distribution.disks : \"-\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </Fragment>\r\n            )}\r\n\r\n          <TableRow>\r\n            <TableCell scope=\"row\">Total Volumes</TableCell>\r\n            <TableCell align=\"right\">\r\n              {distribution ? distribution.persistentVolumes : \"-\"}\r\n            </TableCell>\r\n          </TableRow>\r\n          {integrationSelection.typeSelection === \"\" &&\r\n            integrationSelection.storageClass === \"\" && (\r\n              <Fragment>\r\n                <TableRow>\r\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\r\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\r\n                    CPU Selection\r\n                  </TableCell>\r\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\r\n                    {cpuToUse}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </Fragment>\r\n            )}\r\n        </TableBody>\r\n      </Table>\r\n      {ecParityCalc.error === 0 && usableInformation && (\r\n        <Fragment>\r\n          <h4>Erasure Code Configuration</h4>\r\n          <Divider />\r\n          <Table\r\n            className={classes.table}\r\n            aria-label=\"simple table\"\r\n            size={\"small\"}\r\n          >\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell scope=\"row\">EC Parity</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {ecParity !== \"\" ? ecParity : \"-\"}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {niceBytes(ecParityCalc.rawCapacity)}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {niceBytes(usableInformation.maxCapacity)}\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\r\n                  Server Failures Tolerated\r\n                </TableCell>\r\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\r\n                  {distribution\r\n                    ? Math.floor(\r\n                        usableInformation.maxFailureTolerations /\r\n                          distribution.disks\r\n                      )\r\n                    : \"-\"}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Fragment>\r\n      )}\r\n      {integrationSelection.typeSelection !== \"\" &&\r\n        integrationSelection.storageClass !== \"\" && (\r\n          <Fragment>\r\n            <h4>Single Instance Configuration</h4>\r\n            <Divider />\r\n            <Table\r\n              className={classes.table}\r\n              aria-label=\"simple table\"\r\n              size={\"small\"}\r\n            >\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell scope=\"row\">CPU</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {integrationSelection.CPU !== 0\r\n                      ? integrationSelection.CPU\r\n                      : \"-\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell scope=\"row\">Memory</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {integrationSelection.memory !== 0\r\n                      ? `${integrationSelection.memory} Gi`\r\n                      : \"-\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {integrationSelection.drivesPerServer !== 0\r\n                      ? `${integrationSelection.drivesPerServer}`\r\n                      : \"-\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\r\n                    Drive Size\r\n                  </TableCell>\r\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\r\n                    {integrationSelection.driveSize.driveSize}\r\n                    {integrationSelection.driveSize.sizeUnit}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </Fragment>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SizePreview);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  modalBasic,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\r\nimport { ConfirmModalIcon } from \"../../../../../../icons\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport { closeAddNSModal } from \"../../createTenantSlice\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    wrapText: {\r\n      maxWidth: \"200px\",\r\n      whiteSpace: \"normal\",\r\n      wordWrap: \"break-word\",\r\n    },\r\n    ...modalBasic,\r\n    ...deleteDialogStyles,\r\n  })\r\n);\r\n\r\nconst AddNamespaceModal = () => {\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const namespace = useSelector(\r\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\r\n  );\r\n  const addNamespaceLoading = useSelector(\r\n    (state: AppState) => state.createTenant.addNSLoading\r\n  );\r\n  const addNamespaceOpen = useSelector(\r\n    (state: AppState) => state.createTenant.addNSOpen\r\n  );\r\n\r\n  return (\r\n    <ConfirmDialog\r\n      title={`New namespace`}\r\n      confirmText={\"Create\"}\r\n      confirmButtonProps={{\r\n        color: \"primary\",\r\n        variant: \"contained\",\r\n      }}\r\n      isOpen={addNamespaceOpen}\r\n      titleIcon={<ConfirmModalIcon />}\r\n      isLoading={addNamespaceLoading}\r\n      onConfirm={() => {\r\n        dispatch(createNamespaceAsync());\r\n      }}\r\n      onClose={() => {\r\n        dispatch(closeAddNSModal());\r\n      }}\r\n      confirmationContent={\r\n        <React.Fragment>\r\n          {addNamespaceLoading && <LinearProgress />}\r\n          <DialogContentText>\r\n            Are you sure you want to add a namespace called\r\n            <br />\r\n            <b className={classes.wrapText}>{namespace}</b>?\r\n          </DialogContentText>\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddNamespaceModal;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useMemo } from \"react\";\r\nimport AddIcon from \"../../../../../../icons/AddIcon\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\r\nimport debounce from \"lodash/debounce\";\r\nimport { IMkEnvs } from \"./utils\";\r\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\r\n\r\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const namespace = useSelector(\r\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\r\n  );\r\n\r\n  const showNSCreateButton = useSelector(\r\n    (state: AppState) => state.createTenant.showNSCreateButton\r\n  );\r\n\r\n  const namespaceError = useSelector(\r\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"]\r\n  );\r\n  const openAddNSConfirm = useSelector(\r\n    (state: AppState) => state.createTenant.addNSOpen\r\n  );\r\n\r\n  const debounceNamespace = useMemo(\r\n    () =>\r\n      debounce(() => {\r\n        dispatch(validateNamespaceAsync());\r\n      }, 500),\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (namespace !== \"\") {\r\n      debounceNamespace();\r\n      // Cancel previous debounce calls during useEffect cleanup.\r\n      return debounceNamespace.cancel;\r\n    }\r\n  }, [debounceNamespace, namespace]);\r\n\r\n  const addNamespace = () => {\r\n    dispatch(openAddNSModal());\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {openAddNSConfirm && <AddNamespaceModal />}\r\n      <InputBoxWrapper\r\n        id=\"namespace\"\r\n        name=\"namespace\"\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n          dispatch(setNamespace(e.target.value));\r\n        }}\r\n        label=\"Namespace\"\r\n        value={namespace}\r\n        error={namespaceError || \"\"}\r\n        overlayId={\"add-namespace\"}\r\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\r\n        overlayAction={addNamespace}\r\n        required\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default NamespaceSelector;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport get from \"lodash/get\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {\r\n  formFieldStyles,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\r\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport SizePreview from \"../SizePreview\";\r\nimport TenantSize from \"./TenantSize\";\r\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\r\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\r\nimport {\r\n  isPageValid,\r\n  setStorageType,\r\n  setTenantName,\r\n  updateAddField,\r\n} from \"../../createTenantSlice\";\r\nimport { selFeatures } from \"../../../../consoleSlice\";\r\nimport NamespaceSelector from \"./NamespaceSelector\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    sizePreview: {\r\n      position: \"fixed\",\r\n      marginLeft: 10,\r\n      background: \"#FFFFFF\",\r\n      border: \"1px solid #EAEAEA\",\r\n      padding: 2,\r\n    },\r\n    ...formFieldStyles,\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst NameTenantField = () => {\r\n  const dispatch = useAppDispatch();\r\n  const tenantName = useSelector(\r\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName\r\n  );\r\n\r\n  const tenantNameError = useSelector(\r\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"]\r\n  );\r\n\r\n  return (\r\n    <InputBoxWrapper\r\n      id=\"tenant-name\"\r\n      name=\"tenant-name\"\r\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setTenantName(e.target.value));\r\n      }}\r\n      label=\"Name\"\r\n      value={tenantName}\r\n      required\r\n      error={tenantNameError || \"\"}\r\n    />\r\n  );\r\n};\r\n\r\ninterface INameTenantMainScreen {\r\n  classes: any;\r\n  formToRender?: IMkEnvs;\r\n}\r\n\r\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const selectedStorageClass = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.nameTenant.selectedStorageClass\r\n  );\r\n  const selectedStorageType = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.nameTenant.selectedStorageType\r\n  );\r\n  const storageClasses = useSelector(\r\n    (state: AppState) => state.createTenant.storageClasses\r\n  );\r\n  const features = useSelector(selFeatures);\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: string) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    const isValid =\r\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\r\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\r\n\r\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\r\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid container>\r\n        <Grid item xs={8} md={9}>\r\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <div className={classes.headerElement}>\r\n                  <h3 className={classes.h3Section}>Name</h3>\r\n                  <span className={classes.descriptionText}>\r\n                    How would you like to name this new tenant?\r\n                  </span>\r\n                </div>\r\n                <div className={classes.formFieldRow}>\r\n                  <NameTenantField />\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.formFieldRow}>\r\n                <NamespaceSelector formToRender={formToRender} />\r\n              </Grid>\r\n              {formToRender === IMkEnvs.default ? (\r\n                <Grid item xs={12} className={classes.formFieldRow}>\r\n                  <SelectWrapper\r\n                    id=\"storage_class\"\r\n                    name=\"storage_class\"\r\n                    onChange={(e: SelectChangeEvent<string>) => {\r\n                      updateField(\r\n                        \"selectedStorageClass\",\r\n                        e.target.value as string\r\n                      );\r\n                    }}\r\n                    label=\"Storage Class\"\r\n                    value={selectedStorageClass}\r\n                    options={storageClasses}\r\n                    disabled={storageClasses.length < 1}\r\n                  />\r\n                </Grid>\r\n              ) : (\r\n                <Grid item xs={12} className={classes.formFieldRow}>\r\n                  <SelectWrapper\r\n                    id=\"storage_type\"\r\n                    name=\"storage_type\"\r\n                    onChange={(e: SelectChangeEvent<string>) => {\r\n                      dispatch(\r\n                        setStorageType({\r\n                          storageType: e.target.value as string,\r\n                          features: features,\r\n                        })\r\n                      );\r\n                    }}\r\n                    label={get(\r\n                      mkPanelConfigurations,\r\n                      `${formToRender}.variantSelectorLabel`,\r\n                      \"Storage Type\"\r\n                    )}\r\n                    value={selectedStorageType}\r\n                    options={get(\r\n                      mkPanelConfigurations,\r\n                      `${formToRender}.variantSelectorValues`,\r\n                      []\r\n                    )}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {formToRender === IMkEnvs.default ? (\r\n                <TenantSize />\r\n              ) : (\r\n                get(\r\n                  mkPanelConfigurations,\r\n                  `${formToRender}.sizingComponent`,\r\n                  null\r\n                )\r\n              )}\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4} md={3}>\r\n          <div className={classes.sizePreview}>\r\n            <SizePreview />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(NameTenantMain);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport get from \"lodash/get\";\r\nimport NameTenantMain from \"./NameTenantMain\";\r\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\r\nimport { selFeatures } from \"../../../../consoleSlice\";\r\n\r\nconst TenantResources = () => {\r\n  const features = useSelector(selFeatures);\r\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\r\n\r\n  useEffect(() => {\r\n    let setConfiguration = IMkEnvs.default;\r\n\r\n    if (features && features.length !== 0) {\r\n      const possibleVariables = Object.keys(resourcesConfigurations);\r\n\r\n      possibleVariables.forEach((element) => {\r\n        if (features.includes(element)) {\r\n          setConfiguration = get(\r\n            resourcesConfigurations,\r\n            element,\r\n            IMkEnvs.default\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    setFormRender(setConfiguration);\r\n  }, [features]);\r\n\r\n  if (formRender === null) {\r\n    return null;\r\n  }\r\n\r\n  return <NameTenantMain formToRender={formRender} />;\r\n};\r\n\r\nexport default TenantResources;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\r\nimport {\r\n  createTenantCommon,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../Common/FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../../store\";\r\nimport { clearValidationError } from \"../../utils\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../utils/validationFunctions\";\r\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\r\nimport SectionH1 from \"../../../Common/SectionH1\";\r\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\r\n\r\ninterface IConfigureProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    configSectionItem: {\r\n      marginRight: 15,\r\n\r\n      \"& .multiContainer\": {\r\n        border: \"1px solid red\",\r\n      },\r\n    },\r\n    fieldGroup: {\r\n      ...createTenantCommon.fieldGroup,\r\n      paddingTop: 15,\r\n      marginBottom: 25,\r\n    },\r\n    responsiveSectionItem: {\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n        alignItems: \"flex-start\",\r\n\r\n        \"& div > div\": {\r\n          marginBottom: 5,\r\n          marginRight: 0,\r\n        },\r\n      },\r\n    },\r\n\r\n    logSearchEnabledFields: {\r\n      marginLeft: 20, // 2nd Level(15+15)\r\n      padding: 10,\r\n      width: \"90%\",\r\n      margin: \"auto\",\r\n    },\r\n    fieldSpaceTop: {\r\n      marginTop: 15,\r\n    },\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst ConfigLogSearch = ({ classes }: IConfigureProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const storageClasses = useSelector(\r\n    (state: AppState) => state.createTenant.storageClasses\r\n  );\r\n  const logSearchEnabled = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\r\n  );\r\n  const logSearchVolumeSize = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\r\n  );\r\n  const logSearchSelectedStorageClass = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\r\n  );\r\n  const logSearchImage = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\r\n  );\r\n  const logSearchPostgresImage = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.logSearchPostgresImage\r\n  );\r\n  const logSearchPostgresInitImage = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.logSearchPostgresInitImage\r\n  );\r\n  const selectedStorageClass = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.nameTenant.selectedStorageClass\r\n  );\r\n  const tenantSecurityContext = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.tenantSecurityContext\r\n  );\r\n  const logSearchSecurityContext = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.logSearchSecurityContext\r\n  );\r\n  const logSearchPostgresSecurityContext = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.logSearchPostgresSecurityContext\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  const configureSTClasses = [\r\n    { label: \"Default\", value: \"default\" },\r\n    ...storageClasses,\r\n  ];\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"configure\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customAccountValidation: IValidation[] = [];\r\n\r\n    if (logSearchEnabled) {\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        {\r\n          fieldKey: \"log_search_storage_class\",\r\n          required: true,\r\n          value: logSearchSelectedStorageClass,\r\n          customValidation: logSearchSelectedStorageClass === \"\",\r\n          customValidationMessage: \"Field cannot be empty\",\r\n        },\r\n        {\r\n          fieldKey: \"log_search_volume_size\",\r\n          required: true,\r\n          value: logSearchVolumeSize,\r\n          customValidation:\r\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\r\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\r\n        },\r\n        {\r\n          fieldKey: \"logSearch_securityContext_runAsUser\",\r\n          required: true,\r\n          value: logSearchSecurityContext.runAsUser,\r\n          customValidation:\r\n            logSearchSecurityContext.runAsUser === \"\" ||\r\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\r\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\r\n          required: true,\r\n          value: logSearchSecurityContext.runAsGroup,\r\n          customValidation:\r\n            logSearchSecurityContext.runAsGroup === \"\" ||\r\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\r\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"logSearch_securityContext_fsGroup\",\r\n          required: true,\r\n          value: logSearchSecurityContext.fsGroup,\r\n          customValidation:\r\n            logSearchSecurityContext.fsGroup === \"\" ||\r\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\r\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"postgres_securityContext_runAsUser\",\r\n          required: true,\r\n          value: logSearchPostgresSecurityContext.runAsUser,\r\n          customValidation:\r\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\r\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\r\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"postgres_securityContext_runAsGroup\",\r\n          required: true,\r\n          value: logSearchSecurityContext.runAsGroup,\r\n          customValidation:\r\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\r\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\r\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"postgres_securityContext_fsGroup\",\r\n          required: true,\r\n          value: logSearchPostgresSecurityContext.fsGroup,\r\n          customValidation:\r\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\r\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\r\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\r\n        },\r\n      ];\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customAccountValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"configure\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [\r\n    logSearchImage,\r\n    logSearchPostgresImage,\r\n    logSearchPostgresInitImage,\r\n    dispatch,\r\n    logSearchEnabled,\r\n    logSearchSelectedStorageClass,\r\n    logSearchVolumeSize,\r\n    tenantSecurityContext,\r\n    logSearchSecurityContext,\r\n    logSearchPostgresSecurityContext,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // New default values in current selection is invalid\r\n    if (storageClasses.length > 0) {\r\n      const filterLogSearch = storageClasses.filter(\r\n        (item: any) => item.value === logSearchSelectedStorageClass\r\n      );\r\n      if (filterLogSearch.length === 0) {\r\n        updateField(\"logSearchSelectedStorageClass\", \"default\");\r\n      }\r\n    }\r\n  }, [\r\n    logSearchSelectedStorageClass,\r\n    selectedStorageClass,\r\n    storageClasses,\r\n    updateField,\r\n  ]);\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <Grid container alignItems={\"center\"}>\r\n        <Grid item xs>\r\n          <SectionH1>Audit Log</SectionH1>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormSwitchWrapper\r\n            value=\"enableLogging\"\r\n            id=\"enableLogging\"\r\n            name=\"enableLogging\"\r\n            checked={logSearchEnabled}\r\n            onChange={(e) => {\r\n              const targetD = e.target;\r\n              const checked = targetD.checked;\r\n\r\n              updateField(\"logSearchEnabled\", checked);\r\n            }}\r\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <span className={classes.descriptionText}>\r\n            Deploys a small PostgreSQL database and stores access logs of all\r\n            calls into the tenant.\r\n          </span>\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <hr className={classes.hrClass} />\r\n        </Grid>\r\n        {logSearchEnabled && (\r\n          <Fragment>\r\n            <Grid item xs={12}>\r\n              <SelectWrapper\r\n                id=\"log_search_storage_class\"\r\n                name=\"log_search_storage_class\"\r\n                onChange={(e: SelectChangeEvent<string>) => {\r\n                  updateField(\r\n                    \"logSearchSelectedStorageClass\",\r\n                    e.target.value as string\r\n                  );\r\n                }}\r\n                label=\"Log Search Storage Class\"\r\n                value={logSearchSelectedStorageClass}\r\n                options={configureSTClasses}\r\n                disabled={configureSTClasses.length < 1}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div className={classes.multiContainer}>\r\n                <InputBoxWrapper\r\n                  type=\"number\"\r\n                  id=\"log_search_volume_size\"\r\n                  name=\"log_search_volume_size\"\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    updateField(\"logSearchVolumeSize\", e.target.value);\r\n                    cleanValidation(\"log_search_volume_size\");\r\n                  }}\r\n                  label=\"Storage Size\"\r\n                  overlayObject={\r\n                    <InputUnitMenu\r\n                      id={\"size-unit\"}\r\n                      onUnitChange={() => {}}\r\n                      unitSelected={\"Gi\"}\r\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\r\n                      disabled={true}\r\n                    />\r\n                  }\r\n                  value={logSearchVolumeSize}\r\n                  required\r\n                  error={validationErrors[\"log_search_volume_size\"] || \"\"}\r\n                  min=\"0\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n\r\n            <fieldset\r\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\r\n            >\r\n              <legend className={classes.descriptionText}>\r\n                SecurityContext for LogSearch\r\n              </legend>\r\n\r\n              <Grid item xs={12}>\r\n                <div\r\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\r\n                >\r\n                  <div className={classes.configSectionItem}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"logSearch_securityContext_runAsUser\"\r\n                      name=\"logSearch_securityContext_runAsUser\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        updateField(\"logSearchSecurityContext\", {\r\n                          ...logSearchSecurityContext,\r\n                          runAsUser: e.target.value,\r\n                        });\r\n                        cleanValidation(\"logSearch_securityContext_runAsUser\");\r\n                      }}\r\n                      label=\"Run As User\"\r\n                      value={logSearchSecurityContext.runAsUser}\r\n                      required\r\n                      error={\r\n                        validationErrors[\r\n                          \"logSearch_securityContext_runAsUser\"\r\n                        ] || \"\"\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                  <div className={classes.configSectionItem}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"logSearch_securityContext_runAsGroup\"\r\n                      name=\"logSearch_securityContext_runAsGroup\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        updateField(\"logSearchSecurityContext\", {\r\n                          ...logSearchSecurityContext,\r\n                          runAsGroup: e.target.value,\r\n                        });\r\n                        cleanValidation(\"logSearch_securityContext_runAsGroup\");\r\n                      }}\r\n                      label=\"Run As Group\"\r\n                      value={logSearchSecurityContext.runAsGroup}\r\n                      required\r\n                      error={\r\n                        validationErrors[\r\n                          \"logSearch_securityContext_runAsGroup\"\r\n                        ] || \"\"\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <br />\r\n              <Grid item xs={12}>\r\n                <div\r\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\r\n                >\r\n                  <div className={classes.configSectionItem}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"logSearch_securityContext_fsGroup\"\r\n                      name=\"logSearch_securityContext_fsGroup\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        updateField(\"logSearchSecurityContext\", {\r\n                          ...logSearchSecurityContext,\r\n                          fsGroup: e.target.value,\r\n                        });\r\n                        cleanValidation(\"logSearch_securityContext_fsGroup\");\r\n                      }}\r\n                      label=\"FsGroup\"\r\n                      value={logSearchSecurityContext.fsGroup}\r\n                      required\r\n                      error={\r\n                        validationErrors[\"logSearch_securityContext_fsGroup\"] ||\r\n                        \"\"\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                  <div className={classes.configSectionItem}>\r\n                    <SelectWrapper\r\n                      label=\"FsGroupChangePolicy\"\r\n                      id=\"securityContext_fsGroupChangePolicy\"\r\n                      name=\"securityContext_fsGroupChangePolicy\"\r\n                      value={logSearchSecurityContext.fsGroupChangePolicy}\r\n                      onChange={(e: SelectChangeEvent<string>) => {\r\n                        updateField(\"logSearchSecurityContext\", {\r\n                          ...logSearchSecurityContext,\r\n                          fsGroupChangePolicy: e.target.value,\r\n                        });\r\n                      }}\r\n                      options={[\r\n                        {\r\n                          label: \"Always\",\r\n                          value: \"Always\",\r\n                        },\r\n                        {\r\n                          label: \"OnRootMismatch\",\r\n                          value: \"OnRootMismatch\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <br />\r\n              <Grid item xs={12}>\r\n                <div className={classes.multiContainer}>\r\n                  <FormSwitchWrapper\r\n                    value=\"logSearchSecurityContextRunAsNonRoot\"\r\n                    id=\"logSearch_securityContext_runAsNonRoot\"\r\n                    name=\"logSearch_securityContext_runAsNonRoot\"\r\n                    checked={logSearchSecurityContext.runAsNonRoot}\r\n                    onChange={(e) => {\r\n                      const targetD = e.target;\r\n                      const checked = targetD.checked;\r\n                      updateField(\"logSearchSecurityContext\", {\r\n                        ...logSearchSecurityContext,\r\n                        runAsNonRoot: checked,\r\n                      });\r\n                    }}\r\n                    label={\"Do not run as Root\"}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            </fieldset>\r\n            <fieldset className={classes.fieldGroup}>\r\n              <legend className={classes.descriptionText}>\r\n                SecurityContext for PostgreSQL\r\n              </legend>\r\n\r\n              <Grid item xs={12}>\r\n                <div\r\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\r\n                >\r\n                  <div className={classes.configSectionItem}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"postgres_securityContext_runAsUser\"\r\n                      name=\"postgres_securityContext_runAsUser\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        updateField(\"logSearchPostgresSecurityContext\", {\r\n                          ...logSearchPostgresSecurityContext,\r\n                          runAsUser: e.target.value,\r\n                        });\r\n                        cleanValidation(\"postgres_securityContext_runAsUser\");\r\n                      }}\r\n                      label=\"Run As User\"\r\n                      value={logSearchPostgresSecurityContext.runAsUser}\r\n                      required\r\n                      error={\r\n                        validationErrors[\r\n                          \"postgres_securityContext_runAsUser\"\r\n                        ] || \"\"\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                  <div className={classes.configSectionItem}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"postgres_securityContext_runAsGroup\"\r\n                      name=\"postgres_securityContext_runAsGroup\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        updateField(\"logSearchPostgresSecurityContext\", {\r\n                          ...logSearchPostgresSecurityContext,\r\n                          runAsGroup: e.target.value,\r\n                        });\r\n                        cleanValidation(\"postgres_securityContext_runAsGroup\");\r\n                      }}\r\n                      label=\"Run As Group\"\r\n                      value={logSearchPostgresSecurityContext.runAsGroup}\r\n                      required\r\n                      error={\r\n                        validationErrors[\r\n                          \"postgres_securityContext_runAsGroup\"\r\n                        ] || \"\"\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <br />\r\n              <Grid item xs={12}>\r\n                <div\r\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\r\n                >\r\n                  <div className={classes.configSectionItem}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"postgres_securityContext_fsGroup\"\r\n                      name=\"postgres_securityContext_fsGroup\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        updateField(\"logSearchPostgresSecurityContext\", {\r\n                          ...logSearchPostgresSecurityContext,\r\n                          fsGroup: e.target.value,\r\n                        });\r\n                        cleanValidation(\"postgres_securityContext_fsGroup\");\r\n                      }}\r\n                      label=\"FsGroup\"\r\n                      value={logSearchPostgresSecurityContext.fsGroup}\r\n                      required\r\n                      error={\r\n                        validationErrors[\"postgres_securityContext_fsGroup\"] ||\r\n                        \"\"\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                  <div className={classes.configSectionItem}>\r\n                    <SelectWrapper\r\n                      label=\"FsGroupChangePolicy\"\r\n                      id=\"securityContext_fsGroupChangePolicy\"\r\n                      name=\"securityContext_fsGroupChangePolicy\"\r\n                      value={\r\n                        logSearchPostgresSecurityContext.fsGroupChangePolicy\r\n                      }\r\n                      onChange={(e: SelectChangeEvent<string>) => {\r\n                        updateField(\"logSearchPostgresSecurityContext\", {\r\n                          ...logSearchPostgresSecurityContext,\r\n                          fsGroupChangePolicy: e.target.value,\r\n                        });\r\n                      }}\r\n                      options={[\r\n                        {\r\n                          label: \"Always\",\r\n                          value: \"Always\",\r\n                        },\r\n                        {\r\n                          label: \"OnRootMismatch\",\r\n                          value: \"OnRootMismatch\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <br />\r\n              <Grid item xs={12}>\r\n                <div className={classes.multiContainer}>\r\n                  <FormSwitchWrapper\r\n                    value=\"postgresSecurityContextRunAsNonRoot\"\r\n                    id=\"postgres_securityContext_runAsNonRoot\"\r\n                    name=\"postgres_securityContext_runAsNonRoot\"\r\n                    checked={logSearchPostgresSecurityContext.runAsNonRoot}\r\n                    onChange={(e) => {\r\n                      const targetD = e.target;\r\n                      const checked = targetD.checked;\r\n                      updateField(\"logSearchPostgresSecurityContext\", {\r\n                        ...logSearchPostgresSecurityContext,\r\n                        runAsNonRoot: checked,\r\n                      });\r\n                    }}\r\n                    label={\"Do not run as Root\"}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            </fieldset>\r\n          </Fragment>\r\n        )}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ConfigLogSearch);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\r\nimport {\r\n  createTenantCommon,\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { AppState, useAppDispatch } from \"../../../../../store\";\r\nimport { clearValidationError } from \"../../utils\";\r\nimport {\r\n  commonFormValidation,\r\n  IValidation,\r\n} from \"../../../../../utils/validationFunctions\";\r\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\r\nimport SectionH1 from \"../../../Common/SectionH1\";\r\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\r\n\r\ninterface IConfigureProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    configSectionItem: {\r\n      marginRight: 15,\r\n\r\n      \"& .multiContainer\": {\r\n        border: \"1px solid red\",\r\n      },\r\n    },\r\n    fieldGroup: {\r\n      ...createTenantCommon.fieldGroup,\r\n      paddingTop: 15,\r\n      marginBottom: 25,\r\n    },\r\n    responsiveSectionItem: {\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n        alignItems: \"flex-start\",\r\n\r\n        \"& div > div\": {\r\n          marginBottom: 5,\r\n          marginRight: 0,\r\n        },\r\n      },\r\n    },\r\n    fieldSpaceTop: {\r\n      marginTop: 15,\r\n    },\r\n    prometheusEnabledFields: {\r\n      marginLeft: 20, // 2nd Level(15+15)\r\n      padding: 10,\r\n      width: \"90%\",\r\n      margin: \"auto\",\r\n    },\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst ConfigPrometheus = ({ classes }: IConfigureProps) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const storageClasses = useSelector(\r\n    (state: AppState) => state.createTenant.storageClasses\r\n  );\r\n  const prometheusEnabled = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\r\n  );\r\n  const prometheusVolumeSize = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.prometheusVolumeSize\r\n  );\r\n  const prometheusSelectedStorageClass = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\r\n  );\r\n  const prometheusImage = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\r\n  );\r\n  const prometheusSidecarImage = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.prometheusSidecarImage\r\n  );\r\n  const prometheusInitImage = useSelector(\r\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\r\n  );\r\n  const selectedStorageClass = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.nameTenant.selectedStorageClass\r\n  );\r\n  const tenantSecurityContext = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.tenantSecurityContext\r\n  );\r\n  const prometheusSecurityContext = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.configure.prometheusSecurityContext\r\n  );\r\n\r\n  const [validationErrors, setValidationErrors] = useState<any>({});\r\n\r\n  const configureSTClasses = [\r\n    { label: \"Default\", value: \"default\" },\r\n    ...storageClasses,\r\n  ];\r\n\r\n  // Common\r\n  const updateField = useCallback(\r\n    (field: string, value: any) => {\r\n      dispatch(\r\n        updateAddField({ pageName: \"configure\", field: field, value: value })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  // Validation\r\n  useEffect(() => {\r\n    let customAccountValidation: IValidation[] = [];\r\n\r\n    if (prometheusEnabled) {\r\n      customAccountValidation = [\r\n        ...customAccountValidation,\r\n        {\r\n          fieldKey: \"prometheus_storage_class\",\r\n          required: true,\r\n          value: prometheusSelectedStorageClass,\r\n          customValidation: prometheusSelectedStorageClass === \"\",\r\n          customValidationMessage: \"Field cannot be empty\",\r\n        },\r\n        {\r\n          fieldKey: \"prometheus_volume_size\",\r\n          required: true,\r\n          value: prometheusVolumeSize,\r\n          customValidation:\r\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\r\n          customValidationMessage: `Volume size must be present and be greater than 0`,\r\n        },\r\n        {\r\n          fieldKey: \"prometheus_securityContext_runAsUser\",\r\n          required: true,\r\n          value: prometheusSecurityContext.runAsUser,\r\n          customValidation:\r\n            prometheusSecurityContext.runAsUser === \"\" ||\r\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\r\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\r\n          required: true,\r\n          value: prometheusSecurityContext.runAsGroup,\r\n          customValidation:\r\n            prometheusSecurityContext.runAsGroup === \"\" ||\r\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\r\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\r\n        },\r\n        {\r\n          fieldKey: \"prometheus_securityContext_fsGroup\",\r\n          required: true,\r\n          value: prometheusSecurityContext.fsGroup,\r\n          customValidation:\r\n            prometheusSecurityContext.fsGroup === \"\" ||\r\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\r\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\r\n        },\r\n      ];\r\n    }\r\n\r\n    const commonVal = commonFormValidation(customAccountValidation);\r\n\r\n    dispatch(\r\n      isPageValid({\r\n        pageName: \"configure\",\r\n        valid: Object.keys(commonVal).length === 0,\r\n      })\r\n    );\r\n\r\n    setValidationErrors(commonVal);\r\n  }, [\r\n    prometheusImage,\r\n    prometheusSidecarImage,\r\n    prometheusInitImage,\r\n    dispatch,\r\n    prometheusEnabled,\r\n    prometheusSelectedStorageClass,\r\n    prometheusVolumeSize,\r\n    tenantSecurityContext,\r\n    prometheusSecurityContext,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // New default values in current selection is invalid\r\n    if (storageClasses.length > 0) {\r\n      const filterPrometheus = storageClasses.filter(\r\n        (item: any) => item.value === prometheusSelectedStorageClass\r\n      );\r\n      if (filterPrometheus.length === 0) {\r\n        updateField(\"prometheusSelectedStorageClass\", \"default\");\r\n      }\r\n    }\r\n  }, [\r\n    prometheusSelectedStorageClass,\r\n    selectedStorageClass,\r\n    storageClasses,\r\n    updateField,\r\n  ]);\r\n\r\n  const cleanValidation = (fieldName: string) => {\r\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paperWrapper}>\r\n      <Grid container alignItems={\"center\"}>\r\n        <Grid item xs>\r\n          <SectionH1>Monitoring</SectionH1>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormSwitchWrapper\r\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\r\n            checked={prometheusEnabled}\r\n            value={\"monitoring_status\"}\r\n            id=\"monitoring-status\"\r\n            name=\"monitoring-status\"\r\n            onChange={(e) => {\r\n              const targetD = e.target;\r\n              const checked = targetD.checked;\r\n\r\n              updateField(\"prometheusEnabled\", checked);\r\n            }}\r\n            description=\"\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <span className={classes.descriptionText}>\r\n          A small Prometheus will be deployed to keep metrics about the tenant.\r\n        </span>\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <hr className={classes.hrClass} />\r\n      </Grid>\r\n      <Grid container spacing={1}>\r\n        {prometheusEnabled && (\r\n          <Fragment>\r\n            <Grid item xs={12}>\r\n              <SelectWrapper\r\n                id=\"prometheus_storage_class\"\r\n                name=\"prometheus_storage_class\"\r\n                onChange={(e: SelectChangeEvent<string>) => {\r\n                  updateField(\r\n                    \"prometheusSelectedStorageClass\",\r\n                    e.target.value as string\r\n                  );\r\n                }}\r\n                label=\"Storage Class\"\r\n                value={prometheusSelectedStorageClass}\r\n                options={configureSTClasses}\r\n                disabled={configureSTClasses.length < 1}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div className={classes.multiContainer}>\r\n                <InputBoxWrapper\r\n                  type=\"number\"\r\n                  id=\"prometheus_volume_size\"\r\n                  name=\"prometheus_volume_size\"\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    updateField(\"prometheusVolumeSize\", e.target.value);\r\n                    cleanValidation(\"prometheus_volume_size\");\r\n                  }}\r\n                  label=\"Storage Size\"\r\n                  overlayObject={\r\n                    <InputUnitMenu\r\n                      id={\"size-unit\"}\r\n                      onUnitChange={() => {}}\r\n                      unitSelected={\"Gi\"}\r\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\r\n                      disabled={true}\r\n                    />\r\n                  }\r\n                  value={prometheusVolumeSize}\r\n                  required\r\n                  error={validationErrors[\"prometheus_volume_size\"] || \"\"}\r\n                  min=\"0\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <fieldset\r\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\r\n            >\r\n              <legend className={classes.descriptionText}>\r\n                SecurityContext\r\n              </legend>\r\n              <Grid item xs={12} className={classes.configSectionItem}>\r\n                <div\r\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\r\n                >\r\n                  <div className={classes.configSectionItem}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"prometheus_securityContext_runAsUser\"\r\n                      name=\"prometheus_securityContext_runAsUser\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        updateField(\"prometheusSecurityContext\", {\r\n                          ...prometheusSecurityContext,\r\n                          runAsUser: e.target.value,\r\n                        });\r\n                        cleanValidation(\"prometheus_securityContext_runAsUser\");\r\n                      }}\r\n                      label=\"Run As User\"\r\n                      value={prometheusSecurityContext.runAsUser}\r\n                      required\r\n                      error={\r\n                        validationErrors[\r\n                          \"prometheus_securityContext_runAsUser\"\r\n                        ] || \"\"\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                  <div className={classes.configSectionItem}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"prometheus_securityContext_runAsGroup\"\r\n                      name=\"prometheus_securityContext_runAsGroup\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        updateField(\"prometheusSecurityContext\", {\r\n                          ...prometheusSecurityContext,\r\n                          runAsGroup: e.target.value,\r\n                        });\r\n                        cleanValidation(\r\n                          \"prometheus_securityContext_runAsGroup\"\r\n                        );\r\n                      }}\r\n                      label=\"Run As Group\"\r\n                      value={prometheusSecurityContext.runAsGroup}\r\n                      required\r\n                      error={\r\n                        validationErrors[\r\n                          \"prometheus_securityContext_runAsGroup\"\r\n                        ] || \"\"\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <br />\r\n              <Grid item xs={12} className={classes.configSectionItem}>\r\n                <div\r\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\r\n                >\r\n                  <div className={classes.configSectionItem}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"prometheus_securityContext_fsGroup\"\r\n                      name=\"prometheus_securityContext_fsGroup\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        updateField(\"prometheusSecurityContext\", {\r\n                          ...prometheusSecurityContext,\r\n                          fsGroup: e.target.value,\r\n                        });\r\n                        cleanValidation(\"prometheus_securityContext_fsGroup\");\r\n                      }}\r\n                      label=\"FsGroup\"\r\n                      value={prometheusSecurityContext.fsGroup}\r\n                      required\r\n                      error={\r\n                        validationErrors[\r\n                          \"prometheus_securityContext_fsGroup\"\r\n                        ] || \"\"\r\n                      }\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                  <div className={classes.configSectionItem}>\r\n                    <SelectWrapper\r\n                      label=\"FsGroupChangePolicy\"\r\n                      id=\"securityContext_fsGroupChangePolicy\"\r\n                      name=\"securityContext_fsGroupChangePolicy\"\r\n                      value={prometheusSecurityContext.fsGroupChangePolicy}\r\n                      onChange={(e: SelectChangeEvent<string>) => {\r\n                        updateField(\"prometheusSecurityContext\", {\r\n                          ...prometheusSecurityContext,\r\n                          fsGroupChangePolicy: e.target.value,\r\n                        });\r\n                      }}\r\n                      options={[\r\n                        {\r\n                          label: \"Always\",\r\n                          value: \"Always\",\r\n                        },\r\n                        {\r\n                          label: \"OnRootMismatch\",\r\n                          value: \"OnRootMismatch\",\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <br />\r\n              <Grid item xs={12} className={classes.configSectionItem}>\r\n                <div\r\n                  className={`${classes.multiContainer} ${classes.fieldSpaceTop}`}\r\n                >\r\n                  <FormSwitchWrapper\r\n                    value=\"prometheusSecurityContextRunAsNonRoot\"\r\n                    id=\"prometheus_securityContext_runAsNonRoot\"\r\n                    name=\"prometheus_securityContext_runAsNonRoot\"\r\n                    checked={prometheusSecurityContext.runAsNonRoot}\r\n                    onChange={(e) => {\r\n                      const targetD = e.target;\r\n                      const checked = targetD.checked;\r\n                      updateField(\"prometheusSecurityContext\", {\r\n                        ...prometheusSecurityContext,\r\n                        runAsNonRoot: checked,\r\n                      });\r\n                    }}\r\n                    label={\"Do not run as Root\"}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            </fieldset>\r\n          </Fragment>\r\n        )}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ConfigPrometheus);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nexport const requiredPages = [\r\n  \"nameTenant\",\r\n  \"tenantSize\",\r\n  \"configure\",\r\n  \"affinity\",\r\n  \"identityProvider\",\r\n  \"security\",\r\n  \"encryption\",\r\n];\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport { requiredPages } from \"./common\";\r\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\r\n\r\nconst CreateTenantButton = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const addSending = useSelector(\r\n    (state: AppState) => state.createTenant.addingTenant\r\n  );\r\n\r\n  const validPages = useSelector(\r\n    (state: AppState) => state.createTenant.validPages\r\n  );\r\n\r\n  const selectedStorageClass = useSelector(\r\n    (state: AppState) =>\r\n      state.createTenant.fields.nameTenant.selectedStorageClass\r\n  );\r\n\r\n  const enabled =\r\n    !addSending &&\r\n    selectedStorageClass !== \"\" &&\r\n    requiredPages.every((v) => validPages.includes(v));\r\n\r\n  return (\r\n    <Button\r\n      id={\"wizard-button-Create\"}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      size=\"small\"\r\n      onClick={() => {\r\n        dispatch(createTenantAsync());\r\n      }}\r\n      disabled={!enabled}\r\n      key={`button-AddTenant-Create`}\r\n    >\r\n      Create\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CreateTenantButton;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\r\nimport { resetAddTenantForm } from \"./createTenantSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NewTenantCredentials = () => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const showNewCredentials = useSelector(\r\n    (state: AppState) => state.createTenant.showNewCredentials\r\n  );\r\n  const createdAccount = useSelector(\r\n    (state: AppState) => state.createTenant.createdAccount\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {showNewCredentials && (\r\n        <CredentialsPrompt\r\n          newServiceAccount={createdAccount}\r\n          open={showNewCredentials}\r\n          closeModal={() => {\r\n            dispatch(resetAddTenantForm());\r\n            navigate(\"/tenants\");\r\n          }}\r\n          entity=\"Tenant\"\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewTenantCredentials;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { LinearProgress } from \"@mui/material\";\r\n\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport {\r\n  modalBasic,\r\n  settingsCommon,\r\n  wizardCommon,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\r\nimport {\r\n  IWizardButton,\r\n  IWizardElement,\r\n} from \"../../Common/GenericWizard/types\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport Configure from \"./Steps/Configure\";\r\nimport IdentityProvider from \"./Steps/IdentityProvider\";\r\nimport Security from \"./Steps/Security\";\r\nimport Encryption from \"./Steps/Encryption\";\r\nimport Affinity from \"./Steps/Affinity\";\r\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\r\nimport Images from \"./Steps/Images\";\r\nimport PageLayout from \"../../Common/Layout/PageLayout\";\r\nimport BackLink from \"../../../../common/BackLink\";\r\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\r\nimport ConfigLogSearch from \"./Steps/ConfigLogSearch\";\r\nimport ConfigPrometheus from \"./Steps/ConfigPrometheus\";\r\nimport {\r\n  IMkEnvs,\r\n  resourcesConfigurations,\r\n} from \"./Steps/TenantResources/utils\";\r\nimport HelpBox from \"../../../../common/HelpBox\";\r\nimport { StorageIcon } from \"../../../../icons\";\r\nimport { selFeatures } from \"../../consoleSlice\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport { resetAddTenantForm } from \"./createTenantSlice\";\r\nimport CreateTenantButton from \"./CreateTenantButton\";\r\nimport NewTenantCredentials from \"./NewTenantCredentials\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    pageBox: {\r\n      border: \"1px solid #EAEAEA\",\r\n    },\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n    ...settingsCommon,\r\n  })\r\n);\r\n\r\nconst AddTenant = () => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n\r\n  const features = useSelector(selFeatures);\r\n\r\n  // Fields\r\n  const addSending = useSelector(\r\n    (state: AppState) => state.createTenant.addingTenant\r\n  );\r\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\r\n\r\n  useEffect(() => {\r\n    let setConfiguration = IMkEnvs.default;\r\n\r\n    if (features && features.length !== 0) {\r\n      const possibleVariables = Object.keys(resourcesConfigurations);\r\n\r\n      possibleVariables.forEach((element) => {\r\n        if (features.includes(element)) {\r\n          setConfiguration = get(\r\n            resourcesConfigurations,\r\n            element,\r\n            IMkEnvs.default\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    setFormRender(setConfiguration);\r\n  }, [features]);\r\n\r\n  const cancelButton = {\r\n    label: \"Cancel\",\r\n    type: \"other\",\r\n    enabled: true,\r\n    action: () => {\r\n      dispatch(resetAddTenantForm());\r\n      navigate(\"/tenants\");\r\n    },\r\n  };\r\n\r\n  const createButton: IWizardButton = {\r\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\r\n  };\r\n\r\n  const wizardSteps: IWizardElement[] = [\r\n    {\r\n      label: \"Setup\",\r\n      componentRender: <TenantResources />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Configure\",\r\n      advancedOnly: true,\r\n      componentRender: <Configure />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Images\",\r\n      advancedOnly: true,\r\n      componentRender: <Images />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Pod Placement\",\r\n      advancedOnly: true,\r\n      componentRender: <Affinity />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Identity Provider\",\r\n      advancedOnly: true,\r\n      componentRender: <IdentityProvider />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Security\",\r\n      advancedOnly: true,\r\n      componentRender: <Security />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Encryption\",\r\n      advancedOnly: true,\r\n      componentRender: <Encryption />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Audit Log\",\r\n      advancedOnly: true,\r\n      componentRender: <ConfigLogSearch />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n    {\r\n      label: \"Monitoring\",\r\n      advancedOnly: true,\r\n      componentRender: <ConfigPrometheus />,\r\n      buttons: [cancelButton, createButton],\r\n    },\r\n  ];\r\n\r\n  let filteredWizardSteps = wizardSteps;\r\n\r\n  return (\r\n    <Fragment>\r\n      <NewTenantCredentials />\r\n      <PageHeader\r\n        label={\r\n          <BackLink\r\n            to={\"/tenants\"}\r\n            label={\"Tenants\"}\r\n            executeOnClick={() => {\r\n              dispatch(resetAddTenantForm());\r\n            }}\r\n          />\r\n        }\r\n      />\r\n\r\n      <PageLayout>\r\n        {addSending && (\r\n          <Grid item xs={12}>\r\n            <LinearProgress />\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12} className={classes.pageBox}>\r\n          <GenericWizard wizardSteps={filteredWizardSteps} />\r\n        </Grid>\r\n        {formRender === IMkEnvs.aws && (\r\n          <Grid item xs={12} style={{ marginTop: 16 }}>\r\n            <HelpBox\r\n              title={\"EBS Volume Configuration.\"}\r\n              iconComponent={<StorageIcon />}\r\n              help={\r\n                <Fragment>\r\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\r\n                  class class configured at 1,000Mi/s throughput and 16,000\r\n                  IOPS, however the minimum volume size for this type of EBS\r\n                  volume is <b>32Gi</b>.\r\n                  <br />\r\n                  <br />\r\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\r\n                  class, however the minimum volume size for this type of EBS\r\n                  volume is &nbsp;\r\n                  <b>16Ti</b> to unlock their maximum throughput speed of\r\n                  250Mi/s.\r\n                </Fragment>\r\n              }\r\n            />\r\n          </Grid>\r\n        )}\r\n      </PageLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTenant;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { Grid } from \"@mui/material\";\r\nimport LDAPIcon from \"../../../icons/LDAPIcon\";\r\nimport { OIDCIcon } from \"../../../icons\";\r\nimport { UsersIcon } from \"../../../icons\";\r\n\r\nexport const OIDCLogoElement = () => {\r\n  return (\r\n    <Grid container columnGap={1}>\r\n      <Grid>\r\n        <OIDCIcon width={\"16px\"} height={\"16px\"} />\r\n      </Grid>\r\n      <Grid item>Open ID</Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const LDAPLogoElement = () => {\r\n  return (\r\n    <Grid container columnGap={1}>\r\n      <Grid>\r\n        <LDAPIcon width={\"16px\"} height={\"16px\"} />\r\n      </Grid>\r\n      <Grid item>LDAP / Active Directory</Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const BuiltInLogoElement = () => {\r\n  return (\r\n    <Grid container columnGap={1}>\r\n      <Grid>\r\n        <UsersIcon width={\"16px\"} height={\"16px\"} />\r\n      </Grid>\r\n      <Grid item>Built-in</Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Theme } from \"@mui/material/styles\";\r\n\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    errorBlock: {\r\n      color: theme.palette?.error.main || \"#C83B51\",\r\n    },\r\n  });\r\n\r\ninterface IErrorBlockProps {\r\n  classes: any;\r\n  errorMessage: string;\r\n  withBreak?: boolean;\r\n}\r\n\r\nconst ErrorBlock = ({\r\n  classes,\r\n  errorMessage,\r\n  withBreak = true,\r\n}: IErrorBlockProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      {withBreak && <br />}\r\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\r\n        {errorMessage}\r\n      </Typography>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ErrorBlock);\r\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","props","xmlns","fill","viewBox","id","d","transform","clipPath","flexFlow","padding","inputWithCopy","background","inputLabel","fieldBasic","label","value","OutlinedInput","readOnly","endAdornment","InputAdornment","position","text","BoxIconButton","tooltip","onClick","onMouseDown","edge","download","filename","element","document","createElement","setAttribute","style","body","appendChild","click","removeChild","warningBlock","color","margin","credentialTitle","buttonContainer","textAlign","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","titleIcon","Grid","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","WarnIcon","RBIconButton","consoleExtras","itemMap","url","api","path","JSON","stringify","icon","variant","length","allCredentials","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","fileInputField","fileInputStyles","textBoxContainer","onChange","name","disabled","required","error","accept","useState","showFileSelector","setShowSelector","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","placement","HelpIcon","type","e","fileName","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","deleteDialogStyles","content","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","event","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","configSectionItem","tenantCustomizationFields","marginLeft","containerItem","fieldGroup","createTenantCommon","responsiveSectionItem","wrapperContainer","overlayAction","modalBasic","wizardCommon","exposeMinIO","createTenant","fields","configure","exposeConsole","setDomains","consoleDomain","minioDomains","tenantCustom","tenantSecurityContext","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","h3Section","descriptionText","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","copyDomains","updateMinIODomain","addNewMinIODomain","Add","removeMinIODomain","RemoveIcon","multiContainer","min","SelectWrapper","fsGroupChangePolicy","options","runAsNonRoot","useStyles","makeStyles","adUserDnRows","buttonTray","formFieldStyles","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADGroupDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","Fragment","formFieldRow","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","Delete","setIDPADGroupAtIndex","addIDPADGroupAtIndex","removeIDPADGroupAtIndex","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","accessKeys","secretKeys","i","push","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","Casino","protocolRadioOptions","RadioGroupSelector","currentSelection","setIDP","selectorOptions","FeatureItem","description","Box","sx","fontStyle","namespace","nameTenant","tenantName","flex","CertificateIcon","href","rel","minioCertificateRows","justifyContent","borderBottom","fileItem","minWidth","minioCertsContainer","minioCACertsRow","rowActions","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","minioServerCertificates","minioClientCertificates","caCertificates","minioCAsCertificates","spacing","keyPair","FileSelector","encodedValue","addFileToKeyPair","key","cert","addKeyPair","deleteKeyPair","addFileToClientKeyPair","addClientKeyPair","deleteClientKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","vaultEndpoint","encryption","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","vaultCertificate","vaultCA","encryptionValidation","mutualTlsConfig","addFileVaultCert","addFileVaultCa","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","gemaltoCA","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","addFileGemaltoCa","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","rightSpacer","responsiveContainer","replicas","enableEncryption","encryptionType","enableCustomCertsForKES","serverCertificate","clientCertificate","kesSecurityContext","encryptionAvailable","filter","encoded_key","encoded_cert","indicatorLabels","hrClass","addFileServerCert","addFileClientCert","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","setTolerationInfo","tolerationValue","affinityHelpText","newKey","newLKP","arrCp","setKeyValuePairs","v","AddIcon","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","prometheusCustom","prometheusEnabled","logSearchCustom","logSearchEnabled","logSearchVolumeSize","prometheusVolumeSize","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Divider","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","setNamespace","overlayId","overlayIcon","openAddNSModal","NameTenantField","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","md","minHeight","setStorageType","storageType","mkPanelConfigurations","TenantSize","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","logSearchEnabledFields","fieldSpaceTop","logSearchSecurityContext","logSearchPostgresSecurityContext","configureSTClasses","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","prometheusEnabledFields","prometheusSecurityContext","requiredPages","addSending","addingTenant","validPages","enabled","every","Button","createTenantAsync","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","cancelButton","action","createButton","componentRender","filteredWizardSteps","buttons","advancedOnly","PageHeader","BackLink","to","executeOnClick","PageLayout","GenericWizard","wizardSteps","HelpBox","OIDCLogoElement","columnGap","LDAPLogoElement","BuiltInLogoElement","errorBlock","palette","main","withBreak"],"sourceRoot":""}
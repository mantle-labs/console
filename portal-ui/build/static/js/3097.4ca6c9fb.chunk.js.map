{"version":3,"file":"static/js/3097.4ca6c9fb.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/NotificationEndpoints/CustomForms/ResetConfigurationModal.tsx","screens/Console/NotificationEndpoints/CustomForms/EndpointDisplay.tsx","screens/Console/NotificationEndpoints/CustomForms/EditConfiguration.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationForm.tsx","screens/Console/Configurations/ConfigurationPanels/ConfigurationOptions.tsx","screens/Console/Configurations/utils.tsx","screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/NotificationEndpoints/ConfTargetGeneric.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: 14,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#858585\",\n          opacity: 1,\n          fontWeight: 400,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","import React from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"language\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const [value, setValue] = React.useState(selectedTab);\n\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useTranslation } from 'react-i18next';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...deleteDialogStyles,\n  });\n\ninterface IResetConfiguration {\n  classes: any;\n  configurationName: string;\n  closeResetModalAndRefresh: (reloadConfiguration: boolean) => void;\n\n  resetOpen: boolean;\n}\n\nconst ResetConfigurationModal = ({\n  classes,\n  configurationName,\n  closeResetModalAndRefresh,\n  resetOpen,\n}: IResetConfiguration) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const [resetLoading, setResetLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (resetLoading) {\n      api\n        .invoke(\"POST\", `/api/v1/configs/${configurationName}/reset`)\n        .then((res) => {\n          setResetLoading(false);\n          closeResetModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setResetLoading(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [closeResetModalAndRefresh, configurationName, resetLoading, dispatch]);\n\n  const resetConfiguration = () => {\n    setResetLoading(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={t(\"restore_defaults\")}\n      confirmText={t(\"yes_reset_conf\")}\n      isOpen={resetOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={resetLoading}\n      onConfirm={resetConfiguration}\n      onClose={() => {\n        closeResetModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {resetLoading && <LinearProgress />}\n          <DialogContentText>\n            {t(\"are_you_sure_reset_conf\")}\n            <br />\n            <b className={classes.wrapText}>\n              {t(\"note_system_may_not_accessible\")}\n            </b>\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default withStyles(styles)(ResetConfigurationModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  fieldBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...settingsCommon,\n    settingsFormContainer: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      gridGap: \"10px\",\n    },\n  });\n\ninterface IEndpointDisplayProps {\n  // selectedConfiguration: IConfigurationElement;\n  classes: any;\n  configSubsysList: any[];\n  className?: string;\n}\n\nconst EndpointDisplay = ({\n  // selectedConfiguration,\n  classes,\n  configSubsysList,\n  className = \"\",\n}: IEndpointDisplayProps) => {\n  const [configRecords, setConfigRecords] = useState<any>([]);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    let records: any[] = [];\n    if (configSubsysList !== null) {\n      configSubsysList.forEach((config) => {\n        if (config.name !== null && config.key_values !== null) {\n          records.push({\n            name: config.name,\n            endpoint: config.key_values[0][\"value\"],\n          });\n          if (config.key_values[0][\"value\"] === \"off\") {\n            records = [];\n          }\n        }\n      });\n      setConfigRecords(records);\n    }\n  }, [configSubsysList]);\n\n  return (\n    <Fragment>\n      <h3>{t(\"currently_configured_endpoints\")}</h3>\n\n      <TableWrapper\n        columns={[\n          { label: t(\"name\"), elementKey: \"name\" },\n          { label: t(\"endpoint\"), elementKey: \"endpoint\" },\n        ]}\n        idField=\"config-id\"\n        isLoading={false}\n        records={configRecords}\n        classes={classes}\n        entityName=\"endpoints\"\n      />\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(EndpointDisplay);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\n\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Button } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport api from \"../../../../common/api\";\nimport ConfTargetGeneric from \"../ConfTargetGeneric\";\n\nimport {\n  fieldBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport {\n  fieldsConfigurations,\n  removeEmptyFields,\n} from \"../../Configurations/utils\";\nimport {\n  IConfigurationElement,\n  IElementValue,\n} from \"../../Configurations/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ResetConfigurationModal from \"./ResetConfigurationModal\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n  setSnackBarMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport Loader from \"../../Common/Loader/Loader\";\nimport EndpointDisplay from \"./EndpointDisplay\";\nimport { useTranslation } from 'react-i18next';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...settingsCommon,\n    settingsFormContainer: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      gridGap: \"10px\",\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  selectedConfiguration: IConfigurationElement;\n  classes: any;\n  className?: string;\n}\n\nconst EditConfiguration = ({\n  selectedConfiguration,\n  classes,\n  className = \"\",\n}: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const { pathname = \"\" } = useLocation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n\n  //Local States\n  const [valuesObj, setValueObj] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [loadingConfig, setLoadingConfig] = useState<boolean>(true);\n  const [configValues, setConfigValues] = useState<IElementValue[]>([]);\n  const [configSubsysList, setConfigSubsysList] = useState<any>([]);\n  const [resetConfigurationOpen, setResetConfigurationOpen] =\n    useState<boolean>(false);\n  const isLanguage = selConfigTab === \"language\"\n  useEffect(() => {\n    setLoadingConfig(true);\n  }, [selConfigTab]);\n\n  useEffect(() => {\n    if (loadingConfig) {\n      const configId = get(selectedConfiguration, \"configuration_id\", false);\n\n      if (configId && !isLanguage) {\n        api\n          .invoke(\"GET\", `/api/v1/configs/${configId}`)\n          .then((res) => {\n            setConfigSubsysList(res);\n            const keyVals = get(res[0], \"key_values\", []);\n            setConfigValues(keyVals);\n            setLoadingConfig(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoadingConfig(false);\n            dispatch(setErrorSnackMessage(err));\n          });\n\n        return;\n      }\n      setLoadingConfig(false);\n    }\n  }, [loadingConfig, selectedConfiguration, dispatch]);\n\n  useEffect(() => {\n    if (saving && !isLanguage) {\n      const payload = {\n        key_values: removeEmptyFields(valuesObj),\n      };\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/configs/${selectedConfiguration.configuration_id}`,\n          payload\n        )\n        .then((res) => {\n          setSaving(false);\n          dispatch(setServerNeedsRestart(res.restart));\n          if (!res.restart) {\n            dispatch(setSnackBarMessage(t(\"configuration_saved_successfully\")));\n          }\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [saving, dispatch, selectedConfiguration, valuesObj, navigate]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue: IElementValue[]) => {\n      setValueObj(newValue);\n    },\n    [setValueObj]\n  );\n\n  const continueReset = (restart: boolean) => {\n    setResetConfigurationOpen(false);\n    dispatch(setServerNeedsRestart(restart));\n    if (restart) {\n      setLoadingConfig(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      {resetConfigurationOpen && (\n        <ResetConfigurationModal\n          configurationName={selectedConfiguration.configuration_id}\n          closeResetModalAndRefresh={continueReset}\n          resetOpen={resetConfigurationOpen}\n        />\n      )}\n      {loadingConfig ? (\n        <Grid item xs={12} sx={{ textAlign: \"center\", paddingTop: \"15px\" }}>\n          <Loader />\n        </Grid>\n      ) : (\n        <Box\n          sx={{\n            padding: \"15px\",\n            height: \"100%\",\n          }}\n        >\n          <form\n            noValidate\n            onSubmit={submitForm}\n            className={className}\n            style={{\n              height: \"100%\",\n              display: \"flex\",\n              flexFlow: \"column\",\n            }}\n          >\n            <Grid item xs={12} className={classes.settingsFormContainer}>\n              <ConfTargetGeneric\n                fields={\n                  fieldsConfigurations[selectedConfiguration.configuration_id]\n                }\n                onChange={onValueChange}\n                defaultVals={configValues}\n              />\n              {(selectedConfiguration.configuration_id === \"logger_webhook\" ||\n                selectedConfiguration.configuration_id === \"audit_webhook\") && (\n                <EndpointDisplay\n                  classes={classes}\n                  configSubsysList={configSubsysList}\n                />\n              )}\n            </Grid>\n            {!isLanguage?\n             <Grid\n              item\n              xs={12}\n              sx={{\n                paddingTop: \"15px \",\n                textAlign: \"right\" as const,\n                maxHeight: \"60px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"secondary\"\n                sx={{\n                  padding: {\n                    xs: \"3px\", //avoid wrapping on smaller screens\n                    md: \"20px\",\n                  },\n                }}\n                onClick={() => {\n                  setResetConfigurationOpen(true);\n                }}\n              >\n                {t(\"restore_defaults\")}\n              </Button>\n              &nbsp; &nbsp;\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={saving}\n              >\n                {t(\"save\")}\n              </Button>\n            </Grid>: null}\n          </form>\n        </Box>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(EditConfiguration);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport { configurationElements } from \"../utils\";\nimport EditConfiguration from \"../../NotificationEndpoints/CustomForms/EditConfiguration\";\n\nconst ConfigurationsList = () => {\n  const { pathname = \"\" } = useLocation();\n\n  const configName = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n\n  const validActiveConfig = configurationElements.find(\n    (element) => element.configuration_id === configName\n  );\n  const containerClassName = `${configName}`;\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        height: \"100%\",\n        //LDAP and api forms have longer labels\n        \"& .identity_ldap, .api\": {\n          \"& label\": {\n            minWidth: 220,\n            marginRight: 0,\n          },\n        },\n      }}\n    >\n      {validActiveConfig && (\n        <EditConfiguration\n          className={`${containerClassName}`}\n          selectedConfiguration={validActiveConfig}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default ConfigurationsList;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { configurationElements } from \"../utils\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport { SettingsIcon } from \"../../../../icons\";\nimport { Link, Navigate, Route, Routes, useLocation } from \"react-router-dom\";\nimport VerticalTabs from \"../../Common/VerticalTabs/VerticalTabs\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport ScreenTitle from \"../../Common/ScreenTitle/ScreenTitle\";\nimport ConfigurationForm from \"./ConfigurationForm\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\nimport { useTranslation } from 'react-i18next';\n\ninterface IConfigurationOptions {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    settingsOptionsContainer: {\n      display: \"flex\" as const,\n      flexDirection: \"row\" as const,\n      justifyContent: \"flex-start\" as const,\n      flexWrap: \"wrap\" as const,\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 2,\n      backgroundColor: \"#fff\",\n    },\n    ...searchField,\n    ...actionsTray,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst getRoutePath = (path: string) => {\n  return `${IAM_PAGES.SETTINGS}/${path}`;\n};\n\nconst ConfigurationOptions = ({ classes }: IConfigurationOptions) => {\n  const { pathname = \"\" } = useLocation();\n  const { t } = useTranslation();\n\n  let selConfigTab = pathname.substring(pathname.lastIndexOf(\"/\") + 1);\n  selConfigTab = selConfigTab === \"configurations\" ? \"language\" : selConfigTab;\n\n  return (\n    <Fragment>\n      <PageHeader label={t(\"configurations\")} />\n\n      <PageLayout>\n        <Grid item xs={12}>\n          <div\n            id=\"settings-container\"\n            className={classes.settingsOptionsContainer}\n          >\n            <ScreenTitle icon={<SettingsIcon />} title={t(\"configuration\")+\":\"} />\n            <VerticalTabs\n              selectedTab={selConfigTab}\n              isRouteTabs\n              routes={\n                <Routes>\n                  {configurationElements.map((element) => (\n                    <Route\n                      key={`configItem-${element.configuration_label}`}\n                      path={`${element.configuration_id}`}\n                      element={<ConfigurationForm />}\n                    />\n                  ))}\n                  <Route\n                    path={\"/\"}\n                    element={<Navigate to={`${IAM_PAGES.SETTINGS}/language`} />}\n                  />\n                </Routes>\n              }\n            >\n              {configurationElements.map((element) => {\n                const { configuration_id, configuration_label, icon } = element;\n                return {\n                  tabConfig: {\n                    label: configuration_label,\n                    value: configuration_id,\n                    icon: icon,\n                    component: Link,\n                    to: getRoutePath(configuration_id),\n                  },\n                };\n              })}\n            </VerticalTabs>\n          </div>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ConfigurationOptions);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport CompressIcon from \"@mui/icons-material/Compress\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport LanguageIcon from '@mui/icons-material/Language';\nimport { IElement, IElementValue } from \"./types\";\nimport i18next from \"i18next\";\n\n\nexport const configurationElements: IElement[] = [\n  {\n    icon: <LanguageIcon />,\n    configuration_id: \"language\",\n    configuration_label: i18next.t(\"language\"),\n  },\n  /*{\n    icon: <CompressIcon />,\n    configuration_id: \"compression\",\n    configuration_label: i18next.t(\"compression\"),\n  },*/\n  {\n    icon: <LockOpenIcon />,\n    configuration_id: \"identity_openid\",\n    configuration_label: i18next.t(\"identity_openid\"),\n  },\n  {\n    icon: <LoginIcon />,\n    configuration_id: \"identity_ldap\",\n    configuration_label: i18next.t(\"identity_ldap\"),\n  }\n];\n\nexport const fieldsConfigurations: any = {\n\n  language: [\n    {\n      name: \"language\",\n      required: false,\n      label: i18next.t(\"language\"),\n      type: \"dropdown\", \n    } \n  ],\n  compression: [\n    {\n      name: \"extensions\",\n      required: false,\n      label: i18next.t(\"extenstion\"),\n      tooltip:i18next.t(\"extensions_tooltip\"),\n      type: \"csv\",\n      placeholder:i18next.t(\"enter_extention\"),\n      withBorder: true,\n    },\n    {\n      name: \"mime_types\",\n      required: false,\n      label:i18next.t(\"mime_types\"),\n      tooltip:i18next.t(\"mime_types_tooltip\"),\n      type: \"csv\",\n      placeholder:i18next.t(\"enter_mime_type\"),\n      withBorder: true,\n    },\n  ],\n  identity_openid: [\n    {\n      name: \"config_url\",\n      required: false,\n      label: i18next.t(\"config_url\"),\n      tooltip: i18next.t(\"config_url_tooltip\"),\n      type: \"string\",\n      placeholder:\n        \"https://identity-provider-url/.well-known/openid-configuration\",\n    },\n    {\n      name: \"client_id\",\n      required: false,\n      label: i18next.t(\"client_id\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_client_id\"),\n    },\n    {\n      name: \"client_secret\",\n      required: false,\n      label: i18next.t(\"secret_id\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_secret_id\"),\n    },\n    {\n      name: \"claim_name\",\n      required: false,\n      label: i18next.t(\"claim_name\"),\n      tooltip: i18next.t(\"claim_name_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_claim_name\"),\n    },\n    {\n      name: \"claim_prefix\",\n      required: false,\n      label: i18next.t(\"claim_prefix\"),\n      tooltip: i18next.t(\"claim_prefix\"),\n      type: \"string\",\n      placeholder: i18next.t(\"enter_claim_prefix\"),\n    },\n    {\n      name: \"claim_userinfo\",\n      required: false,\n      label: i18next.t(\"claim_userinfo\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"redirect_uri\",\n      required: false,\n      label: i18next.t(\"redirect_uri\"),\n      type: \"string\",\n      placeholder: \"https://console-endpoint-url/oauth_callback\",\n    },\n    {\n      name: \"scopes\",\n      required: false,\n      label: i18next.t(\"scopes\"),\n      type: \"string\",\n      placeholder: i18next.t(\"openid_profil_email\"),\n    },\n  ],\n  identity_ldap: [\n    {\n      name: \"server_addr\",\n      required: true,\n      label: i18next.t(\"server_addr\"),\n      tooltip: i18next.t(\"AD_LDAP_server_address\"),\n      type: \"string\",\n      placeholder: \"myldapserver.com:636\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      required: false,\n      label: i18next.t(\"TLS_slip_verify\"),\n      tooltip:i18next.t(\"TLS_slip_verify_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"server_insecure\",\n      required: false,\n      label: i18next.t(\"server_insecure\"),\n      tooltip:i18next.t(\"server_insecure_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"server_starttls\",\n      required: false,\n      label: i18next.t(\"start_TLS_connection\"),\n      tooltip: i18next.t(\"start_TLS_connection_tooltip\"),\n      type: \"on|off\",\n    },\n    {\n      name: \"lookup_bind_dn\",\n      required: true,\n      label: i18next.t(\"lookup_bind_DN\"),\n      tooltip:i18next.t(\"lookup_bind_DN_tooltip\"),\n      type: \"string\",\n      placeholder: \"cn=admin,dc=min,dc=io\",\n    },\n    {\n      name: \"lookup_bind_password\",\n      required: false,\n      label: i18next.t(\"lookup_bind_password\"),\n      tooltip:i18next.t(\"lookup_bind_password_tooltip\"),\n      type: \"string\",\n      placeholder: i18next.t(\"admin\"),\n    },\n    {\n      name: \"user_dn_search_base_dn\",\n      required: false,\n      label: i18next.t(\"user_DN_search_base_DN\"),\n      tooltip: i18next.t(\"user_DN_search_base_DN_tooltip\"),\n      type: \"csv\",\n      placeholder: \"dc=myldapserver\",\n    },\n    {\n      name: \"user_dn_search_filter\",\n      required: false,\n      label: i18next.t(\"user_DN_filter\"),\n      tooltip: i18next.t(\"user_DN_filter_tooltip\"),\n      type: \"string\",\n      placeholder: \"(sAMAcountName=%s)\",\n    },\n    {\n      name: \"group_search_filter\",\n      required: false,\n      label: i18next.t(\"group_search_filter\"),\n      tooltip:i18next.t(\"group_search_filter_tooltip\"),\n      type: \"string\",\n      placeholder: \"(&(objectclass=groupOfNames)(member=%d))\",\n    },\n    {\n      name: \"group_search_base_dn\",\n      required: false,\n      label: i18next.t(\"group_search_base_DN\"),\n      tooltip: i18next.t(\"group_search_base_DN_tooltip\"),\n      type: \"csv\",\n      placeholder: \"dc=minioad,dc=local\",\n    },\n    {\n      name: \"comment\",\n      required: false,\n      label: i18next.t(\"comment\"),\n      tooltip:i18next.t(\"comment_tooltip\"),\n      type: \"comment\",\n      placeholder: i18next.t(\"enter_custom_notes\"),\n    },\n  ],\n};\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const selectSAs = (\n  e: React.ChangeEvent<HTMLInputElement>,\n  setSelectedSAs: Function,\n  selectedSAs: string[]\n) => {\n  const targetD = e.target;\n  const value = targetD.value;\n  const checked = targetD.checked;\n\n  let elements: string[] = [...selectedSAs]; // We clone the selectedSAs array\n  if (checked) {\n    // If the user has checked this field we need to push this to selectedSAs\n    elements.push(value);\n  } else {\n    // User has unchecked this field, we need to remove it from the list\n    elements = elements.filter((element) => element !== value);\n  }\n  setSelectedSAs(elements);\n  return elements;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) => {\n  return createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n      flex: 1,\n    },\n    inputBoxSpacer: {\n      marginBottom: 7,\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      margin: 0,\n      alignItems: \"flex-start\",\n      paddingTop: \"20px\",\n      minWidth: 162,\n    },\n  });\n};\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  const onChangeCallback = useCallback(\n    (newString: string) => {\n      onChange(newString);\n    },\n    [onChange]\n  );\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChangeCallback(elementsString);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <div\n        className={classes.inputBoxSpacer}\n        key={`csv-multi-${name}-${index.toString()}`}\n      >\n        <InputBoxWrapper\n          id={`${name}-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentElements[index]}\n          onChange={onChangeElement}\n          index={index}\n          key={`csv-${name}-${index.toString()}`}\n          placeholder={commonPlaceholder}\n          overlayIcon={\n            index === currentElements.length - 1 ? <AddIcon /> : null\n          }\n          overlayAction={() => {\n            addEmptyLine(currentElements);\n          }}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(CSVMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IElementValue, KVField } from \"../Configurations/types\";\nimport {\n  formFieldStyles,\n  modalBasic,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\nimport CommentBoxWrapper from \"../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { useTranslation } from 'react-i18next';\nimport i18next from 'i18next'\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    ...modalBasic,\n  });\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[]\n) => {\n  let defValue = type === \"on|off\" ? \"off\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value || \"\";\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  classes,\n}: IConfGenericProps) => {\n  const { t } = useTranslation();\n\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = fields.map((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      return stateInsert;\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const updateLanguage = (event: SelectChangeEvent) => {\n    i18next.changeLanguage(event.target.value)\n    window.location.reload();\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    switch (field.type) {\n      case \"on|off\":\n        const value = valueHolder[item] ? valueHolder[item].value : \"off\";\n\n        return (\n          <FormSwitchWrapper\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"on\" : \"off\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"on\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            elements={valueHolder[item] ? valueHolder[item].value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string) => {\n              setValueElement(field.name, value, item);\n            }}\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n        case \"dropdown\":\n        return (\n          <FormControl fullWidth>\n            <InputLabel>{t(\"language\")}</InputLabel>\n            <Select\n              value={i18next.language}\n              label=\"language\"\n              onChange={updateLanguage}\n            >\n              <MenuItem value=\"en\">English</MenuItem>\n              <MenuItem value=\"fr\">Français</MenuItem>\n            </Select>\n          </FormControl>\n        );\n      default:\n        return (\n          <InputBoxWrapper\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            multiline={!!field.multiline}\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid xs={12} item className={classes.fieldBox}>\n        {fieldsElements.map((field, item) => (\n          <Grid item xs={12} key={field.name} className={classes.formFieldRow}>\n            {fieldDefinition(field, item)}\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfTargetGeneric);\n"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","inputLabel","fontSize","margin","alignItems","paddingTop","flexWrap","display","textBoxContainer","flexGrow","position","cssOutlinedInput","borderColor","padding","rootContainer","minHeight","borderWidth","color","fontWeight","opacity","label","onChange","value","id","name","disabled","tooltip","index","error","required","placeholder","classes","inputProps","item","xs","className","fieldContainer","errorInField","htmlFor","tooltipContainer","title","placement","fullWidth","multiline","rows","helperText","InputLabelProps","shrink","InputProps","notchedOutline","root","variant","tabStripStyle","tabsContainer","height","width","tabsHeaderContainer","background","borderRight","flexFlow","justifyContent","borderBottom","marginRight","marginBottom","tabContentContainer","tabPanel","flexDirection","children","selectedTab","routes","isRouteTabs","React","setValue","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","headerList","contentList","forEach","child","push","tabConfig","content","event","newValue","orientation","scrollButtons","tabList","map","tabHeader","style","disableRipple","disableTouchRipple","focusRipple","wrapText","maxWidth","whiteSpace","wordWrap","deleteDialogStyles","configurationName","closeResetModalAndRefresh","resetOpen","dispatch","useAppDispatch","t","useTranslation","useState","resetLoading","setResetLoading","useEffect","api","then","res","catch","err","setErrorSnackMessage","ConfirmDialog","confirmText","isOpen","titleIcon","isLoading","onConfirm","onClose","confirmationContent","LinearProgress","DialogContentText","settingsCommon","settingsFormContainer","gridTemplateColumns","gridGap","configSubsysList","configRecords","setConfigRecords","records","config","key_values","endpoint","Fragment","TableWrapper","columns","elementKey","idField","entityName","selectedConfiguration","navigate","useNavigate","useLocation","pathname","selConfigTab","substring","lastIndexOf","valuesObj","setValueObj","saving","setSaving","loadingConfig","setLoadingConfig","configValues","setConfigValues","setConfigSubsysList","resetConfigurationOpen","setResetConfigurationOpen","isLanguage","configId","get","keyVals","payload","removeEmptyFields","configuration_id","setServerNeedsRestart","restart","setSnackBarMessage","onValueChange","useCallback","Grid","sx","textAlign","Loader","Box","noValidate","onSubmit","preventDefault","ConfTargetGeneric","fields","fieldsConfigurations","defaultVals","maxHeight","Button","type","md","onClick","configName","validActiveConfig","configurationElements","element","containerClassName","minWidth","settingsOptionsContainer","border","borderRadius","backgroundColor","searchField","actionsTray","containerForHeader","spacing","PageHeader","PageLayout","ScreenTitle","icon","VerticalTabs","path","ConfigurationForm","configuration_label","to","IAM_PAGES","component","Link","i18next","language","compression","withBorder","identity_openid","identity_ldap","formFields","filter","field","selectSAs","e","setSelectedSAs","selectedSAs","targetD","target","checked","elements","inputWithBorder","overflowY","marginTop","flex","inputBoxSpacer","commonPlaceholder","currentElements","setCurrentElements","bottomList","createRef","length","elementsSplit","split","refScroll","current","scrollIntoView","onChangeCallback","newString","firstUpdate","useRef","elementsString","trim","join","onChangeElement","persist","updatedElement","inputs","InputBoxWrapper","toString","overlayIcon","AddIcon","overlayAction","elementsUp","cpList","addEmptyLine","InputLabel","Tooltip","HelpIcon","ref","valueDef","key","defaults","defValue","storedConfig","find","formFieldStyles","formFieldRow","modalBasic","valueHolder","setValueHolder","fieldsElements","defValList","values","setValueElement","valuesDup","updateLanguage","window","location","reload","fieldDefinition","FormSwitchWrapper","CommentBoxWrapper","FormControl","Select","MenuItem","container","fieldBox"],"sourceRoot":""}
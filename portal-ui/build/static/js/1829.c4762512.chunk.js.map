{"version":3,"file":"static/js/1829.c4762512.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Heal/Heal.tsx","utils/wsUtils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #E2E2E2\",\r\n      borderRadius: 2,\r\n      backgroundColor: \"#FBFAFA\",\r\n      paddingLeft: 25,\r\n      paddingTop: 31,\r\n      paddingBottom: 21,\r\n      paddingRight: 30,\r\n    },\r\n    leftItems: {\r\n      fontSize: 16,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 15,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& .min-icon\": {\r\n        marginRight: 15,\r\n        height: 28,\r\n        width: 38,\r\n      },\r\n    },\r\n    helpText: {\r\n      fontSize: 16,\r\n      paddingLeft: 5,\r\n    },\r\n  });\r\n\r\ninterface IHelpBox {\r\n  classes: any;\r\n  iconComponent: any;\r\n  title: string;\r\n  help: any;\r\n}\r\n\r\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.leftItems}>\r\n          {iconComponent}\r\n          {title}\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.helpText}>\r\n          {help}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(HelpBox);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Box, Grid } from \"@mui/material\";\r\nimport HelpBox from \"../../../../common/HelpBox\";\r\n\r\ninterface IDistributedOnly {\r\n  iconComponent: any;\r\n  entity: string;\r\n}\r\n\r\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\r\n  return (\r\n    <Grid container alignItems={\"center\"}>\r\n      <Grid item xs={12}>\r\n        <HelpBox\r\n          title={`${entity} not available`}\r\n          iconComponent={iconComponent}\r\n          help={\r\n            <Box\r\n              sx={{\r\n                fontSize: \"14px\",\r\n                display: \"flex\",\r\n                border: \"none\",\r\n                flexFlow: {\r\n                  xs: \"column\",\r\n                  md: \"row\",\r\n                },\r\n                \"& a\": {\r\n                  color: (theme) => theme.colors.link,\r\n                  textDecoration: \"underline\",\r\n                },\r\n              }}\r\n            >\r\n              <div>This feature is not available for a single-disk setup.</div>\r\n\r\n              <div>\r\n                Please deploy a server in{\" \"}\r\n                <a\r\n                  href=\"https://docs.min.io/minio/baremetal/installation/deploy-minio-distributed.html?ref=con\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  Distributed Mode\r\n                </a>{\" \"}\r\n                to use this feature.\r\n              </div>\r\n            </Box>\r\n          }\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DistributedOnly;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React from \"react\";\r\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  checkboxIcons,\r\n  fieldBasic,\r\n  tooltipHelper,\r\n} from \"../common/styleLibrary\";\r\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\r\n\r\ninterface CheckBoxProps {\r\n  label: string;\r\n  classes: any;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  value: string | boolean;\r\n  id: string;\r\n  name: string;\r\n  disabled?: boolean;\r\n  tooltip?: string;\r\n  overrideLabelClasses?: string;\r\n  overrideCheckboxStyles?: React.CSSProperties;\r\n  index?: number;\r\n  noTopMargin?: boolean;\r\n  checked: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n    ...checkboxIcons,\r\n    fieldContainer: {\r\n      ...fieldBasic.fieldContainer,\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"center\",\r\n      margin: \"15px 0\",\r\n      marginBottom: 0,\r\n      flexBasis: \"initial\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    noTopMargin: {\r\n      marginTop: 0,\r\n    },\r\n  });\r\n\r\nconst CheckboxWrapper = ({\r\n  label,\r\n  onChange,\r\n  value,\r\n  id,\r\n  name,\r\n  checked = false,\r\n  disabled = false,\r\n  noTopMargin = false,\r\n  tooltip = \"\",\r\n  overrideLabelClasses = \"\",\r\n  overrideCheckboxStyles,\r\n  classes,\r\n  className,\r\n}: CheckBoxProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={`${classes.fieldContainer} ${\r\n          noTopMargin ? classes.noTopMargin : \"\"\r\n        } ${className ? className : \"\"}`}\r\n      >\r\n        <div>\r\n          <Checkbox\r\n            name={name}\r\n            id={id}\r\n            value={value}\r\n            color=\"primary\"\r\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n            checked={checked}\r\n            onChange={onChange}\r\n            checkedIcon={<span className={classes.checkedIcon} />}\r\n            icon={<span className={classes.unCheckedIcon} />}\r\n            disabled={disabled}\r\n            disableRipple\r\n            disableFocusRipple\r\n            focusRipple={false}\r\n            centerRipple={false}\r\n            disableTouchRipple\r\n            style={overrideCheckboxStyles || {}}\r\n          />\r\n        </div>\r\n        {label !== \"\" && (\r\n          <InputLabel\r\n            htmlFor={id}\r\n            className={`${classes.noMinWidthLabel} ${overrideLabelClasses}`}\r\n          >\r\n            <span>{label}</span>\r\n            {tooltip !== \"\" && (\r\n              <div className={classes.tooltipContainer}>\r\n                <Tooltip title={tooltip} placement=\"top-start\">\r\n                  <div className={classes.tooltip}>\r\n                    <HelpIcon />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </InputLabel>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CheckboxWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HorizontalBar } from \"react-chartjs-2\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  InputBase,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { IMessageEvent, w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { wsProtocol } from \"../../../utils/wsUtils\";\r\nimport { Bucket, BucketList } from \"../Watch/types\";\r\nimport { colorH, HealStatus } from \"./types\";\r\nimport { niceBytes } from \"../../../common/utils\";\r\nimport {\r\n  actionsTray,\r\n  containerForHeader,\r\n  inlineCheckboxes,\r\n  searchField,\r\n} from \"../Common/FormComponents/common/styleLibrary\";\r\nimport {\r\n  CONSOLE_UI_RESOURCE,\r\n  IAM_SCOPES,\r\n} from \"../../../common/SecureComponent/permissions\";\r\nimport { ErrorResponseHandler } from \"../../../common/types\";\r\nimport { HealIcon } from \"../../../icons\";\r\nimport CheckboxWrapper from \"../Common/FormComponents/CheckboxWrapper/CheckboxWrapper\";\r\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\r\nimport api from \"../../../common/api\";\r\nimport PageLayout from \"../Common/Layout/PageLayout\";\r\nimport { SecureComponent } from \"../../../common/SecureComponent\";\r\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\r\nimport { selDistSet } from \"../../../systemSlice\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    graphContainer: {\r\n      backgroundColor: \"#fff\",\r\n      border: \"#EAEDEE 1px solid\",\r\n      borderRadius: 3,\r\n      padding: \"19px 38px\",\r\n      marginTop: 15,\r\n    },\r\n    scanInfo: {\r\n      marginTop: 20,\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    scanData: {\r\n      fontSize: 13,\r\n    },\r\n    formBox: {\r\n      padding: 15,\r\n      border: \"1px solid #EAEAEA\",\r\n    },\r\n    buttonBar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    bucketField: {\r\n      flex: 1,\r\n    },\r\n    prefixField: {\r\n      ...searchField.searchField,\r\n      marginLeft: 10,\r\n      flex: 1,\r\n    },\r\n    actionsTray: {\r\n      ...actionsTray.actionsTray,\r\n      marginBottom: 0,\r\n    },\r\n    ...inlineCheckboxes,\r\n    ...searchField,\r\n    ...containerForHeader(theme.spacing(4)),\r\n  })\r\n);\r\n\r\nconst SelectStyled = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      lineHeight: \"50px\",\r\n      marginRight: 15,\r\n      \"label + &\": {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      \"& .MuiSelect-select:focus\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n  })\r\n)(InputBase);\r\n\r\nconst Heal = () => {\r\n  const classes = useStyles();\r\n  const distributedSetup = useSelector(selDistSet);\r\n\r\n  const [start, setStart] = useState(false);\r\n  const [bucketName, setBucketName] = useState(\"\");\r\n  const [bucketList, setBucketList] = useState<Bucket[]>([]);\r\n  const [prefix, setPrefix] = useState(\"\");\r\n  const [recursive, setRecursive] = useState(false);\r\n  const [forceStart, setForceStart] = useState(false);\r\n  const [forceStop, setForceStop] = useState(false);\r\n  // healStatus states\r\n  const [hStatus, setHStatus] = useState({\r\n    beforeHeal: [0, 0, 0, 0],\r\n    afterHeal: [0, 0, 0, 0],\r\n    objectsHealed: 0,\r\n    objectsScanned: 0,\r\n    healDuration: 0,\r\n    sizeScanned: \"\",\r\n  });\r\n\r\n  const fetchBucketList = () => {\r\n    api\r\n      .invoke(\"GET\", `/api/v1/buckets`)\r\n      .then((res: BucketList) => {\r\n        let buckets: Bucket[] = [];\r\n        if (res.buckets !== null) {\r\n          buckets = res.buckets;\r\n        }\r\n        setBucketList(buckets);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBucketList();\r\n  }, []);\r\n\r\n  // forceStart and forceStop need to be mutually exclusive\r\n  useEffect(() => {\r\n    if (forceStart === true) {\r\n      setForceStop(false);\r\n    }\r\n  }, [forceStart]);\r\n\r\n  useEffect(() => {\r\n    if (forceStop === true) {\r\n      setForceStart(false);\r\n    }\r\n  }, [forceStop]);\r\n\r\n  const colorHealthArr = (color: colorH) => {\r\n    return [color.Green, color.Yellow, color.Red, color.Grey];\r\n  };\r\n\r\n  useEffect(() => {\r\n    // begin watch if bucketName in bucketList and start pressed\r\n    if (start) {\r\n      // values stored here to update chart\r\n      const cB: colorH = { Green: 0, Yellow: 0, Red: 0, Grey: 0 };\r\n      const cA: colorH = { Green: 0, Yellow: 0, Red: 0, Grey: 0 };\r\n\r\n      const url = new URL(window.location.toString());\r\n      const isDev = process.env.NODE_ENV === \"development\";\r\n      const port = isDev ? \"9090\" : url.port;\r\n\r\n      // check if we are using base path, if not this always is `/`\r\n      const baseLocation = new URL(document.baseURI);\r\n      const baseUrl = baseLocation.pathname;\r\n\r\n      const wsProt = wsProtocol(url.protocol);\r\n      const c = new W3CWebSocket(\r\n        `${wsProt}://${url.hostname}:${port}${baseUrl}ws/heal/${bucketName}?prefix=${prefix}&recursive=${recursive}&force-start=${forceStart}&force-stop=${forceStop}`\r\n      );\r\n\r\n      if (c !== null) {\r\n        c.onopen = () => {\r\n          console.log(\"WebSocket Client Connected\");\r\n          c.send(\"ok\");\r\n        };\r\n        c.onmessage = (message: IMessageEvent) => {\r\n          let m: HealStatus = JSON.parse(message.data.toString());\r\n          // Store percentage per health color\r\n          for (const [key, value] of Object.entries(m.healthAfterCols)) {\r\n            cA[key] = (value * 100) / m.itemsScanned;\r\n          }\r\n          for (const [key, value] of Object.entries(m.healthBeforeCols)) {\r\n            cB[key] = (value * 100) / m.itemsScanned;\r\n          }\r\n          setHStatus({\r\n            beforeHeal: colorHealthArr(cB),\r\n            afterHeal: colorHealthArr(cA),\r\n            objectsHealed: m.objectsHealed,\r\n            objectsScanned: m.objectsScanned,\r\n            healDuration: m.healDuration,\r\n            sizeScanned: niceBytes(m.bytesScanned.toString()),\r\n          });\r\n        };\r\n        c.onclose = () => {\r\n          setStart(false);\r\n          console.log(\"connection closed by server\");\r\n        };\r\n        return () => {\r\n          // close websocket on useEffect cleanup\r\n          c.close(1000);\r\n          console.log(\"closing websockets\");\r\n        };\r\n      }\r\n    }\r\n  }, [start, bucketName, forceStart, forceStop, prefix, recursive]);\r\n\r\n  let data = {\r\n    labels: [\"Green\", \"Yellow\", \"Red\", \"Grey\"],\r\n    datasets: [\r\n      {\r\n        label: \"After Healing\",\r\n        data: hStatus.afterHeal,\r\n        backgroundColor: \"rgba(0, 0, 255, 0.2)\",\r\n        borderColor: \"rgba(54, 162, 235, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n      {\r\n        label: \"Before Healing\",\r\n        data: hStatus.beforeHeal,\r\n        backgroundColor: \"rgba(153, 102, 255, 0.2)\",\r\n        borderColor: \"rgba(153, 102, 255, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const bucketNames = bucketList.map((bucketName) => ({\r\n    label: bucketName.name,\r\n    value: bucketName.name,\r\n  }));\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader label=\"Drives\" />\r\n      <PageLayout>\r\n        {!distributedSetup ? (\r\n          <DistributedOnly entity={\"Heal\"} iconComponent={<HealIcon />} />\r\n        ) : (\r\n          <SecureComponent\r\n            scopes={[IAM_SCOPES.ADMIN_HEAL]}\r\n            resource={CONSOLE_UI_RESOURCE}\r\n          >\r\n            <Grid xs={12} item className={classes.formBox}>\r\n              <Grid item xs={12} className={classes.actionsTray}>\r\n                <FormControl variant=\"outlined\" className={classes.bucketField}>\r\n                  <Select\r\n                    label=\"Bucket\"\r\n                    id=\"bucket-name\"\r\n                    name=\"bucket-name\"\r\n                    value={bucketName}\r\n                    onChange={(e) => {\r\n                      setBucketName(e.target.value as string);\r\n                    }}\r\n                    className={classes.searchField}\r\n                    input={<SelectStyled />}\r\n                    displayEmpty\r\n                  >\r\n                    <MenuItem value=\"\" key={`select-bucket-name-default`}>\r\n                      Select Bucket\r\n                    </MenuItem>\r\n                    {bucketNames.map((option) => (\r\n                      <MenuItem\r\n                        value={option.value}\r\n                        key={`select-bucket-name-${option.label}`}\r\n                      >\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  label=\"Prefix\"\r\n                  className={classes.prefixField}\r\n                  id=\"prefix-resource\"\r\n                  disabled={false}\r\n                  InputProps={{\r\n                    disableUnderline: true,\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setPrefix(e.target.value);\r\n                  }}\r\n                  variant=\"standard\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.inlineCheckboxes}>\r\n                <CheckboxWrapper\r\n                  name=\"recursive\"\r\n                  id=\"recursive\"\r\n                  value=\"recursive\"\r\n                  checked={recursive}\r\n                  onChange={(e) => {\r\n                    setRecursive(e.target.checked);\r\n                  }}\r\n                  disabled={false}\r\n                  label=\"Recursive\"\r\n                />\r\n                <CheckboxWrapper\r\n                  name=\"forceStart\"\r\n                  id=\"forceStart\"\r\n                  value=\"forceStart\"\r\n                  checked={forceStart}\r\n                  onChange={(e) => {\r\n                    setForceStart(e.target.checked);\r\n                  }}\r\n                  disabled={false}\r\n                  label=\"Force Start\"\r\n                />\r\n                <CheckboxWrapper\r\n                  name=\"forceStop\"\r\n                  id=\"forceStop\"\r\n                  value=\"forceStop\"\r\n                  checked={forceStop}\r\n                  onChange={(e) => {\r\n                    setForceStop(e.target.checked);\r\n                  }}\r\n                  disabled={false}\r\n                  label=\"Force Stop\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.buttonBar}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={start}\r\n                  onClick={() => setStart(true)}\r\n                >\r\n                  Start\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.graphContainer}>\r\n              <HorizontalBar\r\n                data={data}\r\n                width={80}\r\n                height={30}\r\n                options={{\r\n                  title: {\r\n                    display: true,\r\n                    text: \"Item's Health Status [%]\",\r\n                    fontSize: 20,\r\n                  },\r\n                  legend: {\r\n                    display: true,\r\n                    position: \"right\",\r\n                  },\r\n                }}\r\n              />\r\n              <Grid item xs={12} className={classes.scanInfo}>\r\n                <div className={classes.scanData}>\r\n                  <strong>Size scanned:</strong> {hStatus.sizeScanned}\r\n                </div>\r\n                <div className={classes.scanData}>\r\n                  <strong>Objects healed:</strong> {hStatus.objectsHealed} /{\" \"}\r\n                  {hStatus.objectsScanned}\r\n                </div>\r\n                <div className={classes.scanData}>\r\n                  <strong>Healing time:</strong> {hStatus.healDuration}s\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </SecureComponent>\r\n        )}\r\n      </PageLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Heal;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n// Close codes for websockets defined in RFC 6455\r\nexport const WSCloseNormalClosure = 1000;\r\nexport const WSCloseCloseGoingAway = 1001;\r\nexport const WSCloseAbnormalClosure = 1006;\r\nexport const WSClosePolicyViolation = 1008;\r\nexport const WSCloseInternalServerErr = 1011;\r\n\r\nexport const wsProtocol = (protocol: string): string => {\r\n  let wsProtocol = \"ws\";\r\n  if (protocol === \"https:\") {\r\n    wsProtocol = \"wss\";\r\n  }\r\n  return wsProtocol;\r\n};\r\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","entity","sx","flexFlow","md","color","colors","link","textDecoration","href","target","rel","fieldBasic","tooltipHelper","checkboxIcons","fieldContainer","justifyContent","margin","flexBasis","flexWrap","noTopMargin","marginTop","label","onChange","value","id","name","checked","disabled","tooltip","overrideLabelClasses","overrideCheckboxStyles","inputProps","checkedIcon","icon","unCheckedIcon","disableRipple","disableFocusRipple","focusRipple","centerRipple","disableTouchRipple","style","htmlFor","noMinWidthLabel","tooltipContainer","placement","useStyles","makeStyles","graphContainer","padding","scanInfo","flexDirection","scanData","formBox","buttonBar","bucketField","flex","prefixField","searchField","marginLeft","actionsTray","inlineCheckboxes","containerForHeader","spacing","SelectStyled","lineHeight","InputBase","distributedSetup","useSelector","selDistSet","useState","start","setStart","bucketName","setBucketName","bucketList","setBucketList","prefix","setPrefix","recursive","setRecursive","forceStart","setForceStart","forceStop","setForceStop","beforeHeal","afterHeal","objectsHealed","objectsScanned","healDuration","sizeScanned","hStatus","setHStatus","useEffect","api","then","res","buckets","catch","err","console","error","colorHealthArr","Green","Yellow","Red","Grey","cB","cA","url","URL","window","location","toString","port","baseUrl","document","baseURI","pathname","wsProt","wsProtocol","protocol","c","W3CWebSocket","hostname","onopen","log","send","onmessage","message","m","JSON","parse","data","Object","entries","healthAfterCols","key","itemsScanned","healthBeforeCols","niceBytes","bytesScanned","onclose","close","labels","datasets","borderColor","borderWidth","bucketNames","map","Fragment","scopes","IAM_SCOPES","resource","CONSOLE_UI_RESOURCE","variant","e","input","displayEmpty","option","InputProps","disableUnderline","type","onClick","options","text","legend","position","WSCloseAbnormalClosure","WSClosePolicyViolation","WSCloseInternalServerErr"],"sourceRoot":""}
{"version":3,"file":"static/js/2113.ba00b3e5.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Buckets/ListBuckets/BucketListItem.tsx","screens/Console/Buckets/ListBuckets/BulkReplicationModal.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Buckets/ListBuckets/BulkLifecycleModal.tsx","screens/Console/Buckets/ListBuckets/ListBuckets.tsx","screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/Components/AutoColorIcon.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Common/VirtualizedList/VirtualizedList.tsx","../node_modules/@mui/icons-material/CheckCircleOutline.js","../node_modules/@mui/icons-material/ErrorOutline.js","../node_modules/@mui/icons-material/Help.js"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      border: \"1px solid #E2E2E2\",\r\n      borderRadius: 2,\r\n      backgroundColor: \"#FBFAFA\",\r\n      paddingLeft: 25,\r\n      paddingTop: 31,\r\n      paddingBottom: 21,\r\n      paddingRight: 30,\r\n    },\r\n    leftItems: {\r\n      fontSize: 16,\r\n      fontWeight: \"bold\",\r\n      marginBottom: 15,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \"& .min-icon\": {\r\n        marginRight: 15,\r\n        height: 28,\r\n        width: 38,\r\n      },\r\n    },\r\n    helpText: {\r\n      fontSize: 16,\r\n      paddingLeft: 5,\r\n    },\r\n  });\r\n\r\ninterface IHelpBox {\r\n  classes: any;\r\n  iconComponent: any;\r\n  title: string;\r\n  help: any;\r\n}\r\n\r\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.leftItems}>\r\n          {iconComponent}\r\n          {title}\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.helpText}>\r\n          {help}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(HelpBox);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { Fragment } from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  ArrowRightIcon,\r\n  BucketsIcon,\r\n  ReportedUsageIcon,\r\n  SettingsIcon,\r\n  TotalObjectsIcon,\r\n} from \"../../../../icons\";\r\nimport { Bucket } from \"../types\";\r\nimport { Box, Grid, Typography } from \"@mui/material\";\r\nimport {\r\n  calculateBytes,\r\n  niceBytes,\r\n  prettyNumber,\r\n} from \"../../../../common/utils\";\r\nimport CheckboxWrapper from \"../../Common/FormComponents/CheckboxWrapper/CheckboxWrapper\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  IAM_PERMISSIONS,\r\n  IAM_ROLES,\r\n} from \"../../../../common/SecureComponent/permissions\";\r\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\r\nimport RBIconButton from \"../BucketDetails/SummaryItems/RBIconButton\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginBottom: 30,\r\n      padding: 20,\r\n      color: theme.palette.secondary.contrastText,\r\n      border: \"#E5E5E5 1px solid\",\r\n      borderRadius: 2,\r\n      \"& .min-icon\": {\r\n        height: 14,\r\n        width: 14,\r\n        marginRight: 4,\r\n      },\r\n      \"& .MuiTypography-body2\": {\r\n        fontSize: 14,\r\n      },\r\n      \"& .MuiCardHeader-content\": {\r\n        wordWrap: \"break-word\",\r\n        overflowWrap: \"break-word\",\r\n        wordBreak: \"break-all\",\r\n        font: \"normal normal bold 24px/27px Lato\",\r\n        color: theme.palette.primary.dark,\r\n\r\n        \"& .MuiTypography-root\": {\r\n          fontSize: 19,\r\n          fontWeight: \"bold\",\r\n          \"& .min-icon\": {\r\n            position: \"relative\",\r\n            top: 4,\r\n            marginRight: 4,\r\n            height: \"24px !important\",\r\n          },\r\n        },\r\n      },\r\n      \"& .MuiCardHeader-root\": {\r\n        background:\r\n          \"transparent linear-gradient(0deg, #EEF1F44E 0%, #FFFFFF 100%) 0% 0% no-repeat padding-box\",\r\n      },\r\n    },\r\n    checkBoxElement: {\r\n      width: 32,\r\n      height: 32,\r\n      float: \"left\",\r\n      overflow: \"hidden\",\r\n      \"& div\": {\r\n        position: \"absolute\",\r\n      },\r\n    },\r\n    manageButton: {\r\n      borderRadius: 4,\r\n      width: 111,\r\n      color: theme.palette.grey[\"700\"],\r\n      textTransform: \"unset\",\r\n      fontSize: 12,\r\n      fontWeight: \"normal\",\r\n      \"& .MuiButton-endIcon\": {\r\n        \"& .min-icon\": {\r\n          fontSize: 18,\r\n        },\r\n      },\r\n    },\r\n    metric: {\r\n      \"& .min-icon\": {\r\n        color: \"#000000\",\r\n        width: 13,\r\n        marginRight: 5,\r\n      },\r\n    },\r\n    metricLabel: {\r\n      fontSize: 14,\r\n      fontWeight: \"bold\",\r\n      color: \"#000000\",\r\n    },\r\n    metricText: {\r\n      fontSize: 24,\r\n      fontWeight: \"bold\",\r\n    },\r\n    unit: {\r\n      fontSize: 12,\r\n      fontWeight: \"normal\",\r\n    },\r\n    bucketName: {\r\n      padding: 0,\r\n      margin: 0,\r\n      fontSize: 22,\r\n    },\r\n    bucketIcon: {\r\n      \"& .min-icon\": {\r\n        height: 48,\r\n        width: 48,\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n    bucketInfo: {\r\n      display: \"flex\",\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column-reverse\",\r\n      },\r\n    },\r\n    bucketStats: {\r\n      marginTop: 15,\r\n      borderTop: \"1px solid rgb(234,234,234, .7)\",\r\n      paddingTop: 14,\r\n    },\r\n    bucketActionButtons: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n\r\n      \"@media (max-width: 900px)\": {\r\n        marginTop: \"-33px\",\r\n      },\r\n    },\r\n  });\r\n\r\ninterface IBucketListItem {\r\n  bucket: Bucket;\r\n  classes: any;\r\n  onSelect: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  selected: boolean;\r\n  bulkSelect: boolean;\r\n  noManage?: boolean;\r\n}\r\n\r\nconst BucketListItem = ({\r\n  classes,\r\n  bucket,\r\n  onSelect,\r\n  selected,\r\n  bulkSelect,\r\n  noManage = false,\r\n}: IBucketListItem) => {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const usage = niceBytes(`${bucket.size}` || \"0\");\r\n  const usageScalar = usage.split(\" \")[0];\r\n  const usageUnit = usage.split(\" \")[1];\r\n\r\n  const quota = get(bucket, \"details.quota.quota\", \"0\");\r\n  const quotaForString = calculateBytes(quota, true, false);\r\n\r\n  const accessToStr = (bucket: Bucket): string => {\r\n    if (bucket.rw_access?.read && !bucket.rw_access?.write) {\r\n      return \"R\";\r\n    } else if (!bucket.rw_access?.read && bucket.rw_access?.write) {\r\n      return \"W\";\r\n    } else if (bucket.rw_access?.read && bucket.rw_access?.write) {\r\n      return \"R/W\";\r\n    }\r\n    return \"\";\r\n  };\r\n  const onCheckboxClick = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onSelect(e);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={clsx(classes.root, \"bucket-item\")}>\r\n      <Grid item xs={12}>\r\n        <Grid container justifyContent={\"space-between\"}>\r\n          <Grid item xs={12} sm={7}>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                {bulkSelect && (\r\n                  <div\r\n                    className={classes.checkBoxElement}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <CheckboxWrapper\r\n                      checked={selected}\r\n                      id={`select-${bucket.name}`}\r\n                      label={\"\"}\r\n                      name={`select-${bucket.name}`}\r\n                      onChange={onCheckboxClick}\r\n                      value={bucket.name}\r\n                    />\r\n                  </div>\r\n                )}\r\n                <h1 className={classes.bucketName}>{bucket.name}</h1>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Grid container className={classes.bucketInfo}>\r\n                  <Grid item xs={12} sm>\r\n                    <Typography variant=\"body2\">\r\n                      {t(\"created\")}: {bucket.creation_date}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm>\r\n                    <Typography variant=\"body2\">\r\n                      {t(\"access\")}: {accessToStr(bucket)}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={5} className={classes.bucketActionButtons}>\r\n            {!noManage && (\r\n              <SecureComponent\r\n                scopes={IAM_PERMISSIONS[IAM_ROLES.BUCKET_ADMIN]}\r\n                resource={bucket.name}\r\n              >\r\n                <RBIconButton\r\n                  tooltip={t(\"manage\")}\r\n                  onClick={() => navigate(`/buckets/${bucket.name}/admin`)}\r\n                  text={t(\"manage\")}\r\n                  icon={<SettingsIcon />}\r\n                  color={\"primary\"}\r\n                  variant={\"outlined\"}\r\n                  id={`manage-${bucket.name}`}\r\n                />\r\n              </SecureComponent>\r\n            )}\r\n            <RBIconButton\r\n              tooltip={t(\"browse\")}\r\n              onClick={() => navigate(`/buckets/${bucket.name}/browse`)}\r\n              text={t(\"browse\")}\r\n              icon={<ArrowRightIcon />}\r\n              color={\"primary\"}\r\n              variant={\"contained\"}\r\n              id={`browse-${bucket.name}`}\r\n            />\r\n            <Box display={{ xs: \"none\", sm: \"block\" }}>\r\n              <div style={{ marginBottom: 10 }} />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} className={classes.bucketStats}>\r\n        <Grid container justifyContent={\"flex-start\"} spacing={4}>\r\n          <Grid item className={classes.bucketIcon}>\r\n            <Link to={`/buckets/${bucket.name}/browse`}>\r\n              <BucketsIcon />\r\n            </Link>\r\n          </Grid>\r\n          <Grid item textAlign={\"left\"} className={classes.metric}>\r\n            <ReportedUsageIcon />\r\n            <span className={classes.metricLabel}>Usage</span>\r\n            <div className={classes.metricText}>\r\n              {usageScalar}\r\n              <span className={classes.unit}>{usageUnit}</span>\r\n              {quota !== \"0\" && (\r\n                <Fragment>\r\n                  {\" \"}\r\n                  / {quotaForString.total}\r\n                  <span className={classes.unit}>{quotaForString.unit}</span>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n          <Grid item textAlign={\"left\"} className={classes.metric}>\r\n            <TotalObjectsIcon />\r\n            <span className={classes.metricLabel}>{t(\"object\")}</span>\r\n            <div className={classes.metricText}>\r\n              {bucket.objects ? prettyNumber(bucket.objects) : 0}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(BucketListItem);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { SelectChangeEvent, Tooltip } from \"@mui/material\";\r\nimport get from \"lodash/get\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\r\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport {\r\n  modalBasic,\r\n  wizardCommon,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { BulkReplicationItem, BulkReplicationResponse } from \"../types\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\r\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\r\nimport api from \"../../../../common/api\";\r\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\r\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport { SelectorTypes } from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\r\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\r\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\ninterface IBulkReplicationModal {\r\n  open: boolean;\r\n  closeModalAndRefresh: (clearSelection: boolean) => any;\r\n  classes: any;\r\n  buckets: string[];\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    remoteBucketList: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"auto auto 45px\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"stretch\",\r\n    },\r\n    errorIcon: {\r\n      color: \"#C72C48\",\r\n    },\r\n    successIcon: {\r\n      color: \"#42C91A\",\r\n    },\r\n    hide: {\r\n      opacity: 0,\r\n      transitionDuration: \"0.3s\",\r\n    },\r\n    ...modalBasic,\r\n    ...wizardCommon,\r\n  });\r\n\r\nconst AddBulkReplicationModal = ({\r\n  open,\r\n  closeModalAndRefresh,\r\n  classes,\r\n  buckets,\r\n}: IBulkReplicationModal) => {\r\n  const dispatch = useAppDispatch();\r\n  const [bucketsToAlter, setBucketsToAlter] = useState<string[]>([]);\r\n  const [addLoading, setAddLoading] = useState<boolean>(false);\r\n  const [externalLoading, setExternalLoading] = useState<boolean>(false);\r\n  const [accessKey, setAccessKey] = useState<string>(\"\");\r\n  const [secretKey, setSecretKey] = useState<string>(\"\");\r\n  const [targetURL, setTargetURL] = useState<string>(\"\");\r\n  const [region, setRegion] = useState<string>(\"\");\r\n  const [useTLS, setUseTLS] = useState<boolean>(true);\r\n  const [replicationMode, setReplicationMode] = useState<string>(\"async\");\r\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\r\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\r\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\r\n  const [relationBuckets, setRelationBuckets] = useState<string[]>([]);\r\n  const [remoteBucketsOpts, setRemoteBucketOpts] = useState<string[]>([]);\r\n  const [responseItem, setResponseItem] = useState<BulkReplicationItem[]>([]);\r\n\r\n  const optionsForBucketsDrop: SelectorTypes[] = remoteBucketsOpts.map(\r\n    (remoteBucketName: string) => {\r\n      return {\r\n        label: remoteBucketName,\r\n        value: remoteBucketName,\r\n      };\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (relationBuckets.length === 0) {\r\n      const bucketsAlter: string[] = [];\r\n      const relationBucketsAlter: string[] = [];\r\n\r\n      buckets.forEach((item: string) => {\r\n        bucketsAlter.push(item);\r\n        relationBucketsAlter.push(\"\");\r\n      });\r\n\r\n      setRelationBuckets(relationBucketsAlter);\r\n      setBucketsToAlter(bucketsAlter);\r\n    }\r\n  }, [buckets, relationBuckets.length]);\r\n\r\n  const addRecord = () => {\r\n    setAddLoading(true);\r\n    const replicate = bucketsToAlter.map((bucketName, index) => {\r\n      return {\r\n        originBucket: bucketName,\r\n        destinationBucket: relationBuckets[index],\r\n      };\r\n    });\r\n\r\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\r\n    const hc = parseInt(healthCheck);\r\n\r\n    const remoteBucketsInfo = {\r\n      accessKey: accessKey,\r\n      secretKey: secretKey,\r\n      targetURL: endURL,\r\n      region: region,\r\n      bucketsRelation: replicate,\r\n      syncMode: replicationMode,\r\n      bandwidth:\r\n        replicationMode === \"async\"\r\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\r\n          : 0,\r\n      healthCheckPeriod: hc,\r\n    };\r\n\r\n    api\r\n      .invoke(\"POST\", \"/api/v1/buckets-replication\", remoteBucketsInfo)\r\n      .then((response: BulkReplicationResponse) => {\r\n        setAddLoading(false);\r\n\r\n        const states = response.replicationState;\r\n        setResponseItem(states);\r\n\r\n        const filterErrors = states.filter(\r\n          (itm) => itm.errorString && itm.errorString !== \"\"\r\n        );\r\n\r\n        if (filterErrors.length === 0) {\r\n          closeModalAndRefresh(true);\r\n        } else {\r\n          setTimeout(() => {\r\n            removeSuccessItems(states);\r\n          }, 500);\r\n        }\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setAddLoading(false);\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  const retrieveRemoteBuckets = (\r\n    wizardPageJump: (page: number | string) => void\r\n  ) => {\r\n    const remoteConnectInfo = {\r\n      accessKey: accessKey,\r\n      secretKey: secretKey,\r\n      targetURL: targetURL,\r\n      useTLS,\r\n    };\r\n    setExternalLoading(true);\r\n\r\n    api\r\n      .invoke(\"POST\", \"/api/v1/list-external-buckets\", remoteConnectInfo)\r\n      .then((dataReturn) => {\r\n        const buckets = get(dataReturn, \"buckets\", []);\r\n\r\n        if (buckets && buckets.length > 0) {\r\n          const arrayReplaceBuckets = buckets.map((element: any) => {\r\n            return element.name;\r\n          });\r\n\r\n          setRemoteBucketOpts(arrayReplaceBuckets);\r\n        }\r\n\r\n        wizardPageJump(\"++\");\r\n        setExternalLoading(false);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setExternalLoading(false);\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  const stateOfItem = (initialBucket: string) => {\r\n    if (responseItem.length > 0) {\r\n      const bucketResponse = responseItem.find(\r\n        (item) => item.originBucket === initialBucket\r\n      );\r\n\r\n      if (bucketResponse) {\r\n        const errString = get(bucketResponse, \"errorString\", \"\");\r\n\r\n        if (errString) {\r\n          return errString;\r\n        }\r\n\r\n        return \"\";\r\n      }\r\n    }\r\n    return \"n/a\";\r\n  };\r\n\r\n  const LogoToShow = ({ errString }: { errString: string }) => {\r\n    switch (errString) {\r\n      case \"\":\r\n        return (\r\n          <div className={classes.successIcon}>\r\n            <CheckCircleOutlineIcon />\r\n          </div>\r\n        );\r\n      case \"n/a\":\r\n        return null;\r\n      default:\r\n        if (errString) {\r\n          return (\r\n            <div className={classes.errorIcon}>\r\n              <Tooltip title={errString} placement=\"top-start\">\r\n                <ErrorOutlineIcon />\r\n              </Tooltip>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const updateItem = (indexItem: number, value: string) => {\r\n    const updatedList = [...relationBuckets];\r\n    updatedList[indexItem] = value;\r\n    setRelationBuckets(updatedList);\r\n  };\r\n\r\n  const itemDisplayBulk = (indexItem: number) => {\r\n    if (remoteBucketsOpts.length > 0) {\r\n      return (\r\n        <Fragment>\r\n          <SelectWrapper\r\n            label=\"\"\r\n            id={`assign-bucket-${indexItem}`}\r\n            name={`assign-bucket-${indexItem}`}\r\n            value={relationBuckets[indexItem]}\r\n            onChange={(e: SelectChangeEvent<string>) => {\r\n              updateItem(indexItem, e.target.value as string);\r\n            }}\r\n            options={optionsForBucketsDrop}\r\n            disabled={addLoading}\r\n          />\r\n        </Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <InputBoxWrapper\r\n          id={`assign-bucket-${indexItem}`}\r\n          name={`assign-bucket-${indexItem}`}\r\n          label=\"\"\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n            updateItem(indexItem, event.target.value);\r\n          }}\r\n          value={relationBuckets[indexItem]}\r\n          disabled={addLoading}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const removeSuccessItems = (responseItem: BulkReplicationItem[]) => {\r\n    let newBucketsToAlter = [...bucketsToAlter];\r\n    let newRelationBuckets = [...relationBuckets];\r\n\r\n    responseItem.forEach((successElement) => {\r\n      const errorString = get(successElement, \"errorString\", \"\");\r\n\r\n      if (!errorString || errorString === \"\") {\r\n        const indexToRemove = newBucketsToAlter.indexOf(\r\n          successElement.originBucket\r\n        );\r\n\r\n        newBucketsToAlter.splice(indexToRemove, 1);\r\n        newRelationBuckets.splice(indexToRemove, 1);\r\n      }\r\n    });\r\n\r\n    setBucketsToAlter(newBucketsToAlter);\r\n    setRelationBuckets(newRelationBuckets);\r\n  };\r\n\r\n  return (\r\n    <ModalWrapper\r\n      modalOpen={open}\r\n      onClose={() => {\r\n        closeModalAndRefresh(false);\r\n      }}\r\n      title=\"Set Multiple Bucket Replication\"\r\n    >\r\n      <GenericWizard\r\n        loadingStep={addLoading || externalLoading}\r\n        wizardSteps={[\r\n          {\r\n            label: \"Remote Configuration\",\r\n            componentRender: (\r\n              <Fragment>\r\n                <Grid item xs={12}>\r\n                  <PredefinedList\r\n                    label=\"Local Buckets to replicate\"\r\n                    content={bucketsToAlter.join(\", \")}\r\n                  />\r\n                </Grid>\r\n                <h4>Remote Endpoint Configuration</h4>\r\n                <span className={classes.descriptionText}>\r\n                  Please avoid the use of root credentials for this feature\r\n                </span>\r\n                <br />\r\n                <br />\r\n                <Grid item xs={12}>\r\n                  <InputBoxWrapper\r\n                    id=\"accessKey\"\r\n                    name=\"accessKey\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setAccessKey(e.target.value);\r\n                    }}\r\n                    label=\"Access Key\"\r\n                    value={accessKey}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <InputBoxWrapper\r\n                    id=\"secretKey\"\r\n                    name=\"secretKey\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setSecretKey(e.target.value);\r\n                    }}\r\n                    label=\"Secret Key\"\r\n                    value={secretKey}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <InputBoxWrapper\r\n                    id=\"targetURL\"\r\n                    name=\"targetURL\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setTargetURL(e.target.value);\r\n                    }}\r\n                    placeholder=\"play.min.io:9000\"\r\n                    label=\"Target URL\"\r\n                    value={targetURL}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormSwitchWrapper\r\n                    checked={useTLS}\r\n                    id=\"useTLS\"\r\n                    name=\"useTLS\"\r\n                    label=\"Use TLS\"\r\n                    onChange={(e) => {\r\n                      setUseTLS(e.target.checked);\r\n                    }}\r\n                    value=\"yes\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <InputBoxWrapper\r\n                    id=\"region\"\r\n                    name=\"region\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setRegion(e.target.value);\r\n                    }}\r\n                    label=\"Region\"\r\n                    value={region}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <SelectWrapper\r\n                    id=\"replication_mode\"\r\n                    name=\"replication_mode\"\r\n                    onChange={(e: SelectChangeEvent<string>) => {\r\n                      setReplicationMode(e.target.value as string);\r\n                    }}\r\n                    label=\"Replication Mode\"\r\n                    value={replicationMode}\r\n                    options={[\r\n                      { label: \"Asynchronous\", value: \"async\" },\r\n                      { label: \"Synchronous\", value: \"sync\" },\r\n                    ]}\r\n                  />\r\n                </Grid>\r\n                {replicationMode === \"async\" && (\r\n                  <Grid item xs={12}>\r\n                    <InputBoxWrapper\r\n                      type=\"number\"\r\n                      id=\"bandwidth_scalar\"\r\n                      name=\"bandwidth_scalar\"\r\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                        if (e.target.validity.valid) {\r\n                          setBandwidthScalar(e.target.value as string);\r\n                        }\r\n                      }}\r\n                      label=\"Bandwidth\"\r\n                      value={bandwidthScalar}\r\n                      min=\"0\"\r\n                      pattern={\"[0-9]*\"}\r\n                      overlayObject={\r\n                        <InputUnitMenu\r\n                          id={\"quota_unit\"}\r\n                          onUnitChange={(newValue) => {\r\n                            setBandwidthUnit(newValue);\r\n                          }}\r\n                          unitSelected={bandwidthUnit}\r\n                          unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\r\n                          disabled={false}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                <Grid item xs={12}>\r\n                  <InputBoxWrapper\r\n                    id=\"healthCheck\"\r\n                    name=\"healthCheck\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setHealthCheck(e.target.value as string);\r\n                    }}\r\n                    label=\"Health Check Duration\"\r\n                    value={healthCheck}\r\n                  />\r\n                </Grid>\r\n              </Fragment>\r\n            ),\r\n            buttons: [\r\n              {\r\n                type: \"custom\",\r\n                label: \"Next\",\r\n                enabled: !externalLoading,\r\n                action: retrieveRemoteBuckets,\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: \"Bucket Assignments\",\r\n            componentRender: (\r\n              <Fragment>\r\n                <h3>Remote Bucket Assignments</h3>\r\n                <span className={classes.descriptionText}>\r\n                  Please select / type the desired remote bucket were you want\r\n                  the local data to be replicated.\r\n                </span>\r\n                <div className={classes.remoteBucketList}>\r\n                  {bucketsToAlter.map((bucketName: string, index: number) => {\r\n                    const errorItem = stateOfItem(bucketName);\r\n                    return (\r\n                      <Fragment\r\n                        key={`buckets-assignation-${index.toString()}-${bucketName}`}\r\n                      >\r\n                        <div className={errorItem === \"\" ? classes.hide : \"\"}>\r\n                          {bucketName}\r\n                        </div>\r\n                        <div className={errorItem === \"\" ? classes.hide : \"\"}>\r\n                          {itemDisplayBulk(index)}\r\n                        </div>\r\n                        <div className={errorItem === \"\" ? classes.hide : \"\"}>\r\n                          {responseItem.length > 0 && (\r\n                            <LogoToShow errString={errorItem} />\r\n                          )}\r\n                        </div>\r\n                      </Fragment>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Fragment>\r\n            ),\r\n            buttons: [\r\n              {\r\n                type: \"back\",\r\n                label: \"Back\",\r\n                enabled: true,\r\n              },\r\n              {\r\n                type: \"next\",\r\n                label: \"Create\",\r\n                enabled: !addLoading,\r\n                action: addRecord,\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n        forModal\r\n      />\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AddBulkReplicationModal);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, {\r\n  ChangeEvent,\r\n  createRef,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport get from \"lodash/get\";\r\nimport debounce from \"lodash/debounce\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport HelpIcon from \"@mui/icons-material/Help\";\r\nimport { InputLabel, Tooltip } from \"@mui/material\";\r\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\r\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\r\nimport AddIcon from \"../../../../../icons/AddIcon\";\r\n\r\ninterface IQueryMultiSelector {\r\n  elements: string;\r\n  name: string;\r\n  label: string;\r\n  tooltip?: string;\r\n  keyPlaceholder?: string;\r\n  valuePlaceholder?: string;\r\n  classes: any;\r\n  withBorder?: boolean;\r\n  onChange: (elements: string) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n    inputWithBorder: {\r\n      border: \"1px solid #EAEAEA\",\r\n      padding: 15,\r\n      height: 150,\r\n      overflowY: \"auto\",\r\n      position: \"relative\",\r\n      marginTop: 15,\r\n    },\r\n    lineInputBoxes: {\r\n      display: \"flex\",\r\n      marginBottom: 10,\r\n    },\r\n    queryDiv: {\r\n      alignSelf: \"center\",\r\n      margin: \"0 4px\",\r\n      fontWeight: 600,\r\n    },\r\n  });\r\n\r\nconst QueryMultiSelector = ({\r\n  elements,\r\n  name,\r\n  label,\r\n  tooltip = \"\",\r\n  keyPlaceholder = \"\",\r\n  valuePlaceholder = \"\",\r\n  onChange,\r\n  withBorder = false,\r\n  classes,\r\n}: IQueryMultiSelector) => {\r\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\r\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\r\n  const bottomList = createRef<HTMLDivElement>();\r\n\r\n  // Use effect to get the initial values from props\r\n  useEffect(() => {\r\n    if (\r\n      currentKeys.length === 1 &&\r\n      currentKeys[0] === \"\" &&\r\n      currentValues.length === 1 &&\r\n      currentValues[0] === \"\" &&\r\n      elements &&\r\n      elements !== \"\"\r\n    ) {\r\n      const elementsSplit = elements.split(\"&\");\r\n      let keys = [];\r\n      let values = [];\r\n\r\n      elementsSplit.forEach((element: string) => {\r\n        const splittedVals = element.split(\"=\");\r\n        if (splittedVals.length === 2) {\r\n          keys.push(splittedVals[0]);\r\n          values.push(splittedVals[1]);\r\n        }\r\n      });\r\n\r\n      keys.push(\"\");\r\n      values.push(\"\");\r\n\r\n      setCurrentKeys(keys);\r\n      setCurrentValues(values);\r\n    }\r\n  }, [currentKeys, currentValues, elements]);\r\n\r\n  // Use effect to send new values to onChange\r\n  useEffect(() => {\r\n    const refScroll = bottomList.current;\r\n    if (refScroll && currentKeys.length > 1) {\r\n      refScroll.scrollIntoView(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentKeys]);\r\n\r\n  // We avoid multiple re-renders / hang issue typing too fast\r\n  const firstUpdate = useRef(true);\r\n  useLayoutEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    debouncedOnChange();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentKeys, currentValues]);\r\n\r\n  // If the last input is not empty, we add a new one\r\n  const addEmptyLine = () => {\r\n    if (\r\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\r\n      currentValues[currentValues.length - 1].trim() !== \"\"\r\n    ) {\r\n      const keysList = [...currentKeys];\r\n      const valuesList = [...currentValues];\r\n\r\n      keysList.push(\"\");\r\n      valuesList.push(\"\");\r\n\r\n      setCurrentKeys(keysList);\r\n      setCurrentValues(valuesList);\r\n    }\r\n  };\r\n\r\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\r\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n\r\n    let updatedElement = [...currentKeys];\r\n    const index = get(e.target, \"dataset.index\", 0);\r\n    updatedElement[index] = e.target.value;\r\n\r\n    setCurrentKeys(updatedElement);\r\n  };\r\n\r\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    e.persist();\r\n\r\n    let updatedElement = [...currentValues];\r\n    const index = get(e.target, \"dataset.index\", 0);\r\n    updatedElement[index] = e.target.value;\r\n\r\n    setCurrentValues(updatedElement);\r\n  };\r\n\r\n  // Debounce for On Change\r\n  const debouncedOnChange = debounce(() => {\r\n    let queryString = \"\";\r\n\r\n    currentKeys.forEach((keyVal, index) => {\r\n      if (currentKeys[index] && currentValues[index]) {\r\n        let insertString = `${keyVal}=${currentValues[index]}`;\r\n        if (index !== 0) {\r\n          insertString = `&${insertString}`;\r\n        }\r\n        queryString = `${queryString}${insertString}`;\r\n      }\r\n    });\r\n\r\n    onChange(queryString);\r\n  }, 500);\r\n\r\n  const inputs = currentValues.map((element, index) => {\r\n    return (\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={classes.lineInputBoxes}\r\n        key={`query-pair-${name}-${index.toString()}`}\r\n      >\r\n        <InputBoxWrapper\r\n          id={`${name}-key-${index.toString()}`}\r\n          label={\"\"}\r\n          name={`${name}-${index.toString()}`}\r\n          value={currentKeys[index]}\r\n          onChange={onChangeKey}\r\n          index={index}\r\n          placeholder={keyPlaceholder}\r\n        />\r\n        <span className={classes.queryDiv}>:</span>\r\n        <InputBoxWrapper\r\n          id={`${name}-value-${index.toString()}`}\r\n          label={\"\"}\r\n          name={`${name}-${index.toString()}`}\r\n          value={currentValues[index]}\r\n          onChange={onChangeValue}\r\n          index={index}\r\n          placeholder={valuePlaceholder}\r\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\r\n          overlayAction={() => {\r\n            addEmptyLine();\r\n          }}\r\n        />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} className={classes.fieldContainer}>\r\n        <InputLabel className={classes.inputLabel}>\r\n          <span>{label}</span>\r\n          {tooltip !== \"\" && (\r\n            <div className={classes.tooltipContainer}>\r\n              <Tooltip title={tooltip} placement=\"top-start\">\r\n                <HelpIcon className={classes.tooltip} />\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n        </InputLabel>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\r\n        >\r\n          {inputs}\r\n          <div ref={bottomList} />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default withStyles(styles)(QueryMultiSelector);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { SelectChangeEvent, Tooltip } from \"@mui/material\";\r\nimport get from \"lodash/get\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\r\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport {\r\n  createTenantCommon,\r\n  formFieldStyles,\r\n  modalStyleUtils,\r\n  spacingUtils,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\r\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\r\nimport api from \"../../../../common/api\";\r\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\r\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\r\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\r\nimport { ITiersDropDown } from \"../BucketDetails/AddLifecycleModal\";\r\nimport {\r\n  ITierElement,\r\n  ITierResponse,\r\n} from \"../../Configurations/TiersConfiguration/types\";\r\nimport { MultiBucketResult } from \"../types\";\r\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\ninterface IBulkReplicationModal {\r\n  open: boolean;\r\n  closeModalAndRefresh: (clearSelection: boolean) => any;\r\n  classes: any;\r\n  buckets: string[];\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    resultGrid: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"45px auto\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"stretch\",\r\n    },\r\n    errorIcon: {\r\n      paddingTop: 5,\r\n      color: \"#C72C48\",\r\n    },\r\n    successIcon: {\r\n      paddingTop: 5,\r\n      color: \"#42C91A\",\r\n    },\r\n    ...spacingUtils,\r\n    ...modalStyleUtils,\r\n    ...formFieldStyles,\r\n    ...createTenantCommon,\r\n  });\r\n\r\nconst AddBulkReplicationModal = ({\r\n  open,\r\n  closeModalAndRefresh,\r\n  classes,\r\n  buckets,\r\n}: IBulkReplicationModal) => {\r\n  const dispatch = useAppDispatch();\r\n  const [addLoading, setAddLoading] = useState<boolean>(false);\r\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\r\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\r\n  const [prefix, setPrefix] = useState(\"\");\r\n  const [tags, setTags] = useState<string>(\"\");\r\n  const [storageClass, setStorageClass] = useState(\"\");\r\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\r\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\r\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\r\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\r\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\r\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\r\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\r\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\r\n  const [results, setResults] = useState<MultiBucketResult | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (loadingTiers) {\r\n      api\r\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\r\n        .then((res: ITierResponse) => {\r\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\r\n\r\n          if (tiersList !== null && tiersList.length >= 1) {\r\n            const objList = tiersList.map((tier: ITierElement) => {\r\n              const tierType = tier.type;\r\n              const value = get(tier, `${tierType}.name`, \"\");\r\n\r\n              return { label: value, value: value };\r\n            });\r\n\r\n            setTiersList(objList);\r\n            if (objList.length > 0) {\r\n              setStorageClass(objList[0].value);\r\n            }\r\n          }\r\n          setLoadingTiers(false);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setLoadingTiers(false);\r\n          dispatch(setModalErrorSnackMessage(err));\r\n        });\r\n    }\r\n  }, [loadingTiers, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let valid = true;\r\n\r\n    if (ilmType !== \"expiry\") {\r\n      if (storageClass === \"\") {\r\n        valid = false;\r\n      }\r\n    }\r\n    setIsFormValid(valid);\r\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\r\n\r\n  const LogoToShow = ({ errString }: { errString: string }) => {\r\n    switch (errString) {\r\n      case \"\":\r\n        return (\r\n          <div className={classes.successIcon}>\r\n            <CheckCircleOutlineIcon />\r\n          </div>\r\n        );\r\n      case \"n/a\":\r\n        return null;\r\n      default:\r\n        if (errString) {\r\n          return (\r\n            <div className={classes.errorIcon}>\r\n              <Tooltip title={errString} placement=\"top-start\">\r\n                <ErrorOutlineIcon />\r\n              </Tooltip>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const createLifecycleRules = (to: any) => {\r\n    let rules = {};\r\n\r\n    if (ilmType === \"expiry\") {\r\n      let expiry = {\r\n        expiry_days: parseInt(expiryDays),\r\n      };\r\n\r\n      rules = {\r\n        ...expiry,\r\n        noncurrentversion_expiration_days: parseInt(NCExpirationDays),\r\n      };\r\n    } else {\r\n      let transition = {\r\n        transition_days: parseInt(transitionDays),\r\n      };\r\n\r\n      rules = {\r\n        ...transition,\r\n        noncurrentversion_transition_days: parseInt(NCTransitionDays),\r\n        noncurrentversion_transition_storage_class: NCTransitionSC,\r\n        storage_class: storageClass,\r\n      };\r\n    }\r\n\r\n    const lifecycleInsert = {\r\n      buckets,\r\n      type: ilmType,\r\n      prefix,\r\n      tags,\r\n      expired_object_delete_marker: expiredObjectDM,\r\n      ...rules,\r\n    };\r\n\r\n    api\r\n      .invoke(\"POST\", `/api/v1/buckets/multi-lifecycle`, lifecycleInsert)\r\n      .then((res: MultiBucketResult) => {\r\n        setAddLoading(false);\r\n        setResults(res);\r\n        to(\"++\");\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setAddLoading(false);\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ModalWrapper\r\n      modalOpen={open}\r\n      onClose={() => {\r\n        closeModalAndRefresh(false);\r\n      }}\r\n      title=\"Set Lifecycle to multiple buckets\"\r\n    >\r\n      <GenericWizard\r\n        loadingStep={addLoading || loadingTiers}\r\n        wizardSteps={[\r\n          {\r\n            label: \"Lifecycle Configuration\",\r\n            componentRender: (\r\n              <Fragment>\r\n                <Grid item xs={12}>\r\n                  <PredefinedList\r\n                    label=\"Local Buckets to replicate\"\r\n                    content={buckets.join(\", \")}\r\n                  />\r\n                </Grid>\r\n                <h4>Remote Endpoint Configuration</h4>\r\n                <Grid container>\r\n                  <Grid item xs={12} className={classes.formScrollable}>\r\n                    <Grid item xs={12} className={classes.formFieldRow}>\r\n                      <fieldset className={classes.fieldGroup}>\r\n                        <legend className={classes.descriptionText}>\r\n                          Lifecycle Configuration\r\n                        </legend>\r\n\r\n                        <Grid item xs={12}>\r\n                          <RadioGroupSelector\r\n                            currentSelection={ilmType}\r\n                            id=\"quota_type\"\r\n                            name=\"quota_type\"\r\n                            label=\"ILM Rule\"\r\n                            onChange={(\r\n                              e: React.ChangeEvent<{ value: unknown }>\r\n                            ) => {\r\n                              setIlmType(e.target.value as string);\r\n                            }}\r\n                            selectorOptions={[\r\n                              { value: \"expiry\", label: \"Expiry\" },\r\n                              { value: \"transition\", label: \"Transition\" },\r\n                            ]}\r\n                          />\r\n                        </Grid>\r\n                        {ilmType === \"expiry\" ? (\r\n                          <Fragment>\r\n                            <Grid item xs={12} className={classes.formFieldRow}>\r\n                              <InputBoxWrapper\r\n                                type=\"number\"\r\n                                id=\"expiry_days\"\r\n                                name=\"expiry_days\"\r\n                                onChange={(\r\n                                  e: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                  setExpiryDays(e.target.value);\r\n                                }}\r\n                                label=\"Expiry Days\"\r\n                                value={expiryDays}\r\n                                min=\"0\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} className={classes.formFieldRow}>\r\n                              <InputBoxWrapper\r\n                                type=\"number\"\r\n                                id=\"noncurrentversion_expiration_days\"\r\n                                name=\"noncurrentversion_expiration_days\"\r\n                                onChange={(\r\n                                  e: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                  setNCExpirationDays(e.target.value);\r\n                                }}\r\n                                label=\"Non-current Expiration Days\"\r\n                                value={NCExpirationDays}\r\n                                min=\"0\"\r\n                              />\r\n                            </Grid>\r\n                          </Fragment>\r\n                        ) : (\r\n                          <Fragment>\r\n                            <Grid item xs={12} className={classes.formFieldRow}>\r\n                              <InputBoxWrapper\r\n                                type=\"number\"\r\n                                id=\"transition_days\"\r\n                                name=\"transition_days\"\r\n                                onChange={(\r\n                                  e: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                  setTransitionDays(e.target.value);\r\n                                }}\r\n                                label=\"Transition Days\"\r\n                                value={transitionDays}\r\n                                min=\"0\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} className={classes.formFieldRow}>\r\n                              <InputBoxWrapper\r\n                                type=\"number\"\r\n                                id=\"noncurrentversion_transition_days\"\r\n                                name=\"noncurrentversion_transition_days\"\r\n                                onChange={(\r\n                                  e: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                  setNCTransitionDays(e.target.value);\r\n                                }}\r\n                                label=\"Non-current Transition Days\"\r\n                                value={NCTransitionDays}\r\n                                min=\"0\"\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} className={classes.formFieldRow}>\r\n                              <InputBoxWrapper\r\n                                id=\"noncurrentversion_t_SC\"\r\n                                name=\"noncurrentversion_t_SC\"\r\n                                onChange={(\r\n                                  e: React.ChangeEvent<HTMLInputElement>\r\n                                ) => {\r\n                                  setNCTransitionSC(e.target.value);\r\n                                }}\r\n                                placeholder=\"Set Non-current Version Transition Storage Class\"\r\n                                label=\"Non-current Version Transition Storage Class\"\r\n                                value={NCTransitionSC}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item xs={12} className={classes.formFieldRow}>\r\n                              <SelectWrapper\r\n                                label=\"Storage Class\"\r\n                                id=\"storage_class\"\r\n                                name=\"storage_class\"\r\n                                value={storageClass}\r\n                                onChange={(e: SelectChangeEvent<string>) => {\r\n                                  setStorageClass(e.target.value as string);\r\n                                }}\r\n                                options={tiersList}\r\n                              />\r\n                            </Grid>\r\n                          </Fragment>\r\n                        )}\r\n                      </fieldset>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.formFieldRow}>\r\n                      <fieldset className={classes.fieldGroup}>\r\n                        <legend className={classes.descriptionText}>\r\n                          File Configuration\r\n                        </legend>\r\n\r\n                        <Grid item xs={12}>\r\n                          <InputBoxWrapper\r\n                            id=\"prefix\"\r\n                            name=\"prefix\"\r\n                            onChange={(\r\n                              e: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                              setPrefix(e.target.value);\r\n                            }}\r\n                            label=\"Prefix\"\r\n                            value={prefix}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <QueryMultiSelector\r\n                            name=\"tags\"\r\n                            label=\"Tags\"\r\n                            elements={tags}\r\n                            onChange={(vl: string) => {\r\n                              setTags(vl);\r\n                            }}\r\n                            keyPlaceholder=\"Tag Key\"\r\n                            valuePlaceholder=\"Tag Value\"\r\n                            withBorder\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <FormSwitchWrapper\r\n                            value=\"expired_delete_marker\"\r\n                            id=\"expired_delete_marker\"\r\n                            name=\"expired_delete_marker\"\r\n                            checked={expiredObjectDM}\r\n                            onChange={(\r\n                              event: React.ChangeEvent<HTMLInputElement>\r\n                            ) => {\r\n                              setExpiredObjectDM(event.target.checked);\r\n                            }}\r\n                            label={\"Expired Object Delete Marker\"}\r\n                          />\r\n                        </Grid>\r\n                      </fieldset>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Fragment>\r\n            ),\r\n            buttons: [\r\n              {\r\n                type: \"custom\",\r\n                label: \"Create Rules\",\r\n                enabled: !loadingTiers && !addLoading && isFormValid,\r\n                action: createLifecycleRules,\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: \"Results\",\r\n            componentRender: (\r\n              <Fragment>\r\n                <h3>Multi Bucket lifecycle Assignments Results</h3>\r\n                <Grid container>\r\n                  <Grid item xs={12} className={classes.formScrollable}>\r\n                    <h4>Buckets Results</h4>\r\n                    {results?.results.map((resultItem) => {\r\n                      return (\r\n                        <div className={classes.resultGrid}>\r\n                          {LogoToShow({ errString: resultItem.error || \"\" })}\r\n                          <span>{resultItem.bucketName}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                </Grid>\r\n              </Fragment>\r\n            ),\r\n            buttons: [\r\n              {\r\n                type: \"custom\",\r\n                label: \"Done\",\r\n                enabled: !addLoading,\r\n                action: () => closeModalAndRefresh(true),\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n        forModal\r\n      />\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AddBulkReplicationModal);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { LinearProgress } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Bucket, BucketList } from \"../types\";\r\nimport {\r\n  AddIcon,\r\n  BucketsIcon,\r\n  LifecycleConfigIcon,\r\n  SelectAllIcon,\r\n} from \"../../../../icons\";\r\nimport {\r\n  containerForHeader,\r\n  searchField,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport api from \"../../../../common/api\";\r\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\r\nimport BucketListItem from \"./BucketListItem\";\r\nimport BulkReplicationModal from \"./BulkReplicationModal\";\r\nimport HelpBox from \"../../../../common/HelpBox\";\r\nimport RefreshIcon from \"../../../../icons/RefreshIcon\";\r\nimport AButton from \"../../Common/AButton/AButton\";\r\nimport MultipleBucketsIcon from \"../../../../icons/MultipleBucketsIcon\";\r\nimport SelectMultipleIcon from \"../../../../icons/SelectMultipleIcon\";\r\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\r\nimport {\r\n  CONSOLE_UI_RESOURCE,\r\n  IAM_PAGES,\r\n  IAM_SCOPES,\r\n} from \"../../../../common/SecureComponent/permissions\";\r\nimport PageLayout from \"../../Common/Layout/PageLayout\";\r\nimport SearchBox from \"../../Common/SearchBox\";\r\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\r\nimport RBIconButton from \"../BucketDetails/SummaryItems/RBIconButton\";\r\nimport BulkLifecycleModal from \"./BulkLifecycleModal\";\r\nimport hasPermission from \"../../../../common/SecureComponent/accessControl\";\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selFeatures } from \"../../consoleSlice\";\r\nimport AutoColorIcon from \"../../Common/Components/AutoColorIcon\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    bulkSelect: {\r\n      marginLeft: 8,\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.main,\r\n      },\r\n      \"&.MuiButton-contained\": {\r\n        backgroundColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n    bucketList: {\r\n      marginTop: 25,\r\n      height: \"calc(100vh - 210px)\",\r\n      \"&.isEmbedded\": {\r\n        height: \"calc(100vh - 128px)\",\r\n      },\r\n    },\r\n    searchField: {\r\n      ...searchField.searchField,\r\n      minWidth: 380,\r\n      \"@media (max-width: 900px)\": {\r\n        minWidth: 220,\r\n      },\r\n    },\r\n    ...containerForHeader(theme.spacing(4)),\r\n  });\r\n\r\ninterface IListBucketsProps {\r\n  classes: any;\r\n}\r\n\r\nconst ListBuckets = ({ classes }: IListBucketsProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [records, setRecords] = useState<Bucket[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [filterBuckets, setFilterBuckets] = useState<string>(\"\");\r\n  const [selectedBuckets, setSelectedBuckets] = useState<string[]>([]);\r\n  const [replicationModalOpen, setReplicationModalOpen] =\r\n    useState<boolean>(false);\r\n  const [lifecycleModalOpen, setLifecycleModalOpen] = useState<boolean>(false);\r\n  const [bulkSelect, setBulkSelect] = useState<boolean>(false);\r\n\r\n  const features = useSelector(selFeatures);\r\n  const obOnly = !!features?.includes(\"object-browser-only\");\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      const fetchRecords = () => {\r\n        setLoading(true);\r\n        api\r\n          .invoke(\"GET\", `/api/v1/buckets`)\r\n          .then((res: BucketList) => {\r\n            setLoading(false);\r\n            setRecords(res.buckets || []);\r\n          })\r\n          .catch((err: ErrorResponseHandler) => {\r\n            setLoading(false);\r\n            dispatch(setErrorSnackMessage(err));\r\n          });\r\n      };\r\n      fetchRecords();\r\n    }\r\n  }, [loading, dispatch]);\r\n\r\n  const filteredRecords = records.filter((b: Bucket) => {\r\n    if (filterBuckets === \"\") {\r\n      return true;\r\n    } else {\r\n      return b.name.indexOf(filterBuckets) >= 0;\r\n    }\r\n  });\r\n\r\n  const selectListBuckets = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const targetD = e.target;\r\n    const value = targetD.value;\r\n    const checked = targetD.checked;\r\n\r\n    let elements: string[] = [...selectedBuckets]; // We clone the selectedBuckets array\r\n\r\n    if (checked) {\r\n      // If the user has checked this field we need to push this to selectedBucketsList\r\n      elements.push(value);\r\n    } else {\r\n      // User has unchecked this field, we need to remove it from the list\r\n      elements = elements.filter((element) => element !== value);\r\n    }\r\n    setSelectedBuckets(elements);\r\n\r\n    return elements;\r\n  };\r\n\r\n  const closeBulkReplicationModal = (unselectAll: boolean) => {\r\n    setReplicationModalOpen(false);\r\n\r\n    if (unselectAll) {\r\n      setSelectedBuckets([]);\r\n    }\r\n  };\r\n\r\n  const closeBulkLifecycleModal = (unselectAll: boolean) => {\r\n    setLifecycleModalOpen(false);\r\n\r\n    if (unselectAll) {\r\n      setSelectedBuckets([]);\r\n    }\r\n  };\r\n\r\n  const renderItemLine = (index: number) => {\r\n    const bucket = filteredRecords[index] || null;\r\n    if (bucket) {\r\n      return (\r\n        <BucketListItem\r\n          bucket={bucket}\r\n          onSelect={selectListBuckets}\r\n          selected={selectedBuckets.includes(bucket.name)}\r\n          bulkSelect={bulkSelect}\r\n          noManage={obOnly}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const selectAllBuckets = () => {\r\n    if (selectedBuckets.length === filteredRecords.length) {\r\n      setSelectedBuckets([]);\r\n      return;\r\n    }\r\n\r\n    const selectAllBuckets = filteredRecords.map((bucket) => {\r\n      return bucket.name;\r\n    });\r\n\r\n    setSelectedBuckets(selectAllBuckets);\r\n  };\r\n  const { t } = useTranslation();\r\n  const canCreateBucket = hasPermission(\"*\", [IAM_SCOPES.S3_CREATE_BUCKET]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {replicationModalOpen && (\r\n        <BulkReplicationModal\r\n          open={replicationModalOpen}\r\n          buckets={selectedBuckets}\r\n          closeModalAndRefresh={closeBulkReplicationModal}\r\n        />\r\n      )}\r\n      {lifecycleModalOpen && (\r\n        <BulkLifecycleModal\r\n          buckets={selectedBuckets}\r\n          closeModalAndRefresh={closeBulkLifecycleModal}\r\n          open={lifecycleModalOpen}\r\n        />\r\n      )}\r\n      {!obOnly && <PageHeader label={\"Buckets\"} />}\r\n      <PageLayout>\r\n        <Grid item xs={12} className={classes.actionsTray} display=\"flex\">\r\n          {obOnly && (\r\n            <Grid item xs>\r\n              <AutoColorIcon marginRight={15} marginTop={10} />\r\n            </Grid>\r\n          )}\r\n          <SearchBox\r\n            onChange={setFilterBuckets}\r\n            placeholder={t(\"search_buckets\")}\r\n            overrideClass={classes.searchField}\r\n            value={filterBuckets}\r\n          />\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={\"flex-end\"}\r\n          >\r\n            {!obOnly && (\r\n              <Fragment>\r\n                <RBIconButton\r\n                  tooltip={\r\n                    bulkSelect ? t(\"unselect_buckets\") : t('select_multiple_buckets')\r\n                  }\r\n                  onClick={() => {\r\n                    setBulkSelect(!bulkSelect);\r\n                    setSelectedBuckets([]);\r\n                  }}\r\n                  text={\"\"}\r\n                  icon={<SelectMultipleIcon />}\r\n                  color={\"primary\"}\r\n                  variant={bulkSelect ? \"contained\" : \"outlined\"}\r\n                />\r\n\r\n                {bulkSelect && (\r\n                  <RBIconButton\r\n                    tooltip={\r\n                      selectedBuckets.length === filteredRecords.length\r\n                        ? t(\"unselect_all_buckets\")\r\n                        : t(\"select_all_buckets\")\r\n                    }\r\n                    onClick={selectAllBuckets}\r\n                    text={\"\"}\r\n                    icon={<SelectAllIcon />}\r\n                    color={\"primary\"}\r\n                    variant={\"outlined\"}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            )}\r\n\r\n            <RBIconButton\r\n              tooltip={t(\"refresh\")}\r\n              onClick={() => {\r\n                setLoading(true);\r\n              }}\r\n              text={\"\"}\r\n              icon={<RefreshIcon />}\r\n              color={\"primary\"}\r\n              variant={\"outlined\"}\r\n            />\r\n\r\n            {!obOnly && (\r\n              <RBIconButton\r\n                tooltip={t('create_bucket')}\r\n                onClick={() => {\r\n                  navigate(IAM_PAGES.ADD_BUCKETS);\r\n                }}\r\n                text={t('create_bucket')}\r\n                icon={<AddIcon />}\r\n                color={\"primary\"}\r\n                variant={\"contained\"}\r\n                disabled={!canCreateBucket}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {loading && <LinearProgress />}\r\n        {!loading && (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            className={`${classes.bucketList} ${obOnly ? \"isEmbedded\" : \"\"}`}\r\n          >\r\n            {filteredRecords.length !== 0 && (\r\n              <VirtualizedList\r\n                rowRenderFunction={renderItemLine}\r\n                totalItems={filteredRecords.length}\r\n              />\r\n            )}\r\n            {filteredRecords.length === 0 && filterBuckets !== \"\" && (\r\n              <Grid\r\n                container\r\n                justifyContent={\"center\"}\r\n                alignContent={\"center\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Grid item xs={8}>\r\n                  <HelpBox\r\n                    iconComponent={<BucketsIcon />}\r\n                    title={t('no_results')}\r\n                    help={\r\n                      <Fragment>\r\n                        {t(\"no_buckets_match\")}\r\n                      </Fragment>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {filteredRecords.length === 0 && filterBuckets === \"\" && (\r\n              <Grid\r\n                container\r\n                justifyContent={\"center\"}\r\n                alignContent={\"center\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Grid item xs={8}>\r\n                  <HelpBox\r\n                    iconComponent={<BucketsIcon />}\r\n                    title={\"Buckets\"}\r\n                    help={\r\n                      <Fragment>\r\n                        {t(\"create_buckets_intro\")}\r\n                        <SecureComponent\r\n                          scopes={[IAM_SCOPES.S3_CREATE_BUCKET]}\r\n                          resource={CONSOLE_UI_RESOURCE}\r\n                        >\r\n                          <br />\r\n                          <br />\r\n                          {t(\"get_started\")}&nbsp;\r\n                          <AButton\r\n                            onClick={() => {\r\n                              navigate(IAM_PAGES.ADD_BUCKETS);\r\n                            }}\r\n                          >\r\n                            {t(\"create_a_bucket\")}\r\n                          </AButton>\r\n                        </SecureComponent>\r\n                      </Fragment>\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </PageLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ListBuckets);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { IconButtonProps } from \"@mui/material\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n      margin: 0,\r\n      border: 0,\r\n      backgroundColor: \"transparent\",\r\n      textDecoration: \"underline\",\r\n      cursor: \"pointer\",\r\n      fontSize: \"inherit\",\r\n      color: theme.palette.info.main,\r\n      fontFamily: \"Lato, sans-serif\",\r\n    },\r\n  });\r\n\r\ninterface IAButton extends IconButtonProps {\r\n  classes: any;\r\n  children: any;\r\n}\r\n\r\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\r\n  return (\r\n    <button {...rest} className={classes.root}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AButton);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { LoginMinIOLogo } from \"../../../../icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState } from \"../../../../store\";\r\n\r\ninterface IAutoColorIcon {\r\n  marginRight: number;\r\n  marginTop: number;\r\n}\r\n\r\nconst AutoColorIcon = ({ marginRight, marginTop }: IAutoColorIcon) => {\r\n  let tinycolor = require(\"tinycolor2\");\r\n\r\n  const colorVariants = useSelector(\r\n    (state: AppState) => state.system.overrideStyles\r\n  );\r\n\r\n  const isDark =\r\n    tinycolor(colorVariants?.backgroundColor || \"#fff\").getBrightness() <= 128;\r\n\r\n  return (\r\n    <LoginMinIOLogo\r\n      style={{\r\n        width: 105,\r\n        marginRight,\r\n        marginTop,\r\n        fill: isDark ? \"#fff\" : \"#081C42\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AutoColorIcon;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React from \"react\";\r\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  checkboxIcons,\r\n  fieldBasic,\r\n  tooltipHelper,\r\n} from \"../common/styleLibrary\";\r\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\r\n\r\ninterface CheckBoxProps {\r\n  label: string;\r\n  classes: any;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  value: string | boolean;\r\n  id: string;\r\n  name: string;\r\n  disabled?: boolean;\r\n  tooltip?: string;\r\n  overrideLabelClasses?: string;\r\n  overrideCheckboxStyles?: React.CSSProperties;\r\n  index?: number;\r\n  noTopMargin?: boolean;\r\n  checked: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n    ...checkboxIcons,\r\n    fieldContainer: {\r\n      ...fieldBasic.fieldContainer,\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      alignItems: \"center\",\r\n      margin: \"15px 0\",\r\n      marginBottom: 0,\r\n      flexBasis: \"initial\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    noTopMargin: {\r\n      marginTop: 0,\r\n    },\r\n  });\r\n\r\nconst CheckboxWrapper = ({\r\n  label,\r\n  onChange,\r\n  value,\r\n  id,\r\n  name,\r\n  checked = false,\r\n  disabled = false,\r\n  noTopMargin = false,\r\n  tooltip = \"\",\r\n  overrideLabelClasses = \"\",\r\n  overrideCheckboxStyles,\r\n  classes,\r\n  className,\r\n}: CheckBoxProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={`${classes.fieldContainer} ${\r\n          noTopMargin ? classes.noTopMargin : \"\"\r\n        } ${className ? className : \"\"}`}\r\n      >\r\n        <div>\r\n          <Checkbox\r\n            name={name}\r\n            id={id}\r\n            value={value}\r\n            color=\"primary\"\r\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n            checked={checked}\r\n            onChange={onChange}\r\n            checkedIcon={<span className={classes.checkedIcon} />}\r\n            icon={<span className={classes.unCheckedIcon} />}\r\n            disabled={disabled}\r\n            disableRipple\r\n            disableFocusRipple\r\n            focusRipple={false}\r\n            centerRipple={false}\r\n            disableTouchRipple\r\n            style={overrideCheckboxStyles || {}}\r\n          />\r\n        </div>\r\n        {label !== \"\" && (\r\n          <InputLabel\r\n            htmlFor={id}\r\n            className={`${classes.noMinWidthLabel} ${overrideLabelClasses}`}\r\n          >\r\n            <span>{label}</span>\r\n            {tooltip !== \"\" && (\r\n              <div className={classes.tooltipContainer}>\r\n                <Tooltip title={tooltip} placement=\"top-start\">\r\n                  <div className={classes.tooltip}>\r\n                    <HelpIcon />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </InputLabel>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CheckboxWrapper);\r\n","import React, { Fragment } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { predefinedList } from \"../common/styleLibrary\";\r\n\r\ninterface IPredefinedList {\r\n  classes: any;\r\n  label?: string;\r\n  content: any;\r\n  multiLine?: boolean;\r\n  actionButton?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...predefinedList,\r\n  });\r\n\r\nconst PredefinedList = ({\r\n  classes,\r\n  label = \"\",\r\n  content,\r\n  multiLine = false,\r\n  actionButton,\r\n}: IPredefinedList) => {\r\n  return (\r\n    <Fragment>\r\n      <Grid className={classes.prefinedContainer}>\r\n        {label !== \"\" && (\r\n          <Grid item xs={12} className={classes.predefinedTitle}>\r\n            {label}\r\n          </Grid>\r\n        )}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          className={`${classes.predefinedList} ${\r\n            actionButton ? classes.includesActionButton : \"\"\r\n          }`}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            className={\r\n              multiLine ? classes.innerContentMultiline : classes.innerContent\r\n            }\r\n          >\r\n            {content}\r\n          </Grid>\r\n          {actionButton && (\r\n            <div className={classes.overlayShareOption}>{actionButton}</div>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(PredefinedList);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport SearchIcon from \"../../../icons/SearchIcon\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    searchField: {\r\n      ...searchField.searchField,\r\n    },\r\n    adornment: {},\r\n  });\r\n\r\ntype SearchBoxProps = {\r\n  placeholder?: string;\r\n  value: string;\r\n  classes: any;\r\n  onChange: (value: string) => void;\r\n  adornmentPosition?: \"start\" | \"end\";\r\n  overrideClass?: any;\r\n};\r\n\r\nconst SearchBox = ({\r\n  placeholder = \"\",\r\n  classes,\r\n  onChange,\r\n  adornmentPosition = \"end\",\r\n  overrideClass,\r\n  value,\r\n}: SearchBoxProps) => {\r\n  const inputProps = {\r\n    disableUnderline: true,\r\n    [`${adornmentPosition}Adornment`]: (\r\n      <InputAdornment\r\n        position={adornmentPosition}\r\n        className={classes.adornment}\r\n      >\r\n        <SearchIcon />\r\n      </InputAdornment>\r\n    ),\r\n  };\r\n  return (\r\n    <TextField\r\n      placeholder={placeholder}\r\n      className={overrideClass ? overrideClass : classes.searchField}\r\n      id=\"search-resource\"\r\n      label=\"\"\r\n      InputProps={inputProps}\r\n      onChange={(e) => {\r\n        onChange(e.target.value);\r\n      }}\r\n      variant=\"standard\"\r\n      value={value}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SearchBox);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, ReactElement } from \"react\";\r\nimport { FixedSizeList as List } from \"react-window\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\nimport { AutoSizer } from \"react-virtualized\";\r\n\r\ninterface IVirtualizedList {\r\n  rowRenderFunction: (index: number) => ReactElement | null;\r\n  totalItems: number;\r\n  defaultHeight?: number;\r\n}\r\n\r\nlet itemStatusMap: any = {};\r\nconst LOADING = 1;\r\nconst LOADED = 2;\r\n\r\nconst VirtualizedList = ({\r\n  rowRenderFunction,\r\n  totalItems,\r\n  defaultHeight,\r\n}: IVirtualizedList) => {\r\n  const isItemLoaded = (index: any) => !!itemStatusMap[index];\r\n\r\n  const loadMoreItems = (startIndex: number, stopIndex: number) => {\r\n    for (let index = startIndex; index <= stopIndex; index++) {\r\n      itemStatusMap[index] = LOADING;\r\n    }\r\n\r\n    for (let index = startIndex; index <= stopIndex; index++) {\r\n      itemStatusMap[index] = LOADED;\r\n    }\r\n  };\r\n\r\n  const RenderItemLine = ({ index, style }: any) => {\r\n    return <div style={style}>{rowRenderFunction(index)}</div>;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <InfiniteLoader\r\n        isItemLoaded={isItemLoaded}\r\n        loadMoreItems={loadMoreItems}\r\n        itemCount={totalItems}\r\n      >\r\n        {({ onItemsRendered, ref }) => (\r\n          // @ts-ignore\r\n          <AutoSizer>\r\n            {({ width, height }) => {\r\n              return (\r\n                <List\r\n                  itemSize={defaultHeight || 220}\r\n                  height={height}\r\n                  itemCount={totalItems}\r\n                  width={width}\r\n                  ref={ref}\r\n                  onItemsRendered={onItemsRendered}\r\n                >\r\n                  {RenderItemLine}\r\n                </List>\r\n              );\r\n            }}\r\n          </AutoSizer>\r\n        )}\r\n      </InfiniteLoader>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default VirtualizedList;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z\"\n}), 'Help');\n\nexports.default = _default;"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","padding","color","palette","secondary","contrastText","wordWrap","overflowWrap","wordBreak","font","primary","dark","position","top","background","checkBoxElement","float","overflow","manageButton","grey","textTransform","metric","metricLabel","metricText","unit","bucketName","margin","bucketIcon","main","bucketInfo","flexFlow","bucketStats","marginTop","borderTop","bucketActionButtons","justifyContent","bucket","onSelect","selected","bulkSelect","noManage","navigate","useNavigate","t","useTranslation","usage","niceBytes","size","usageScalar","split","usageUnit","quota","get","quotaForString","calculateBytes","Grid","clsx","sm","onClick","e","stopPropagation","CheckboxWrapper","checked","id","name","label","onChange","value","Typography","variant","creation_date","rw_access","read","write","accessToStr","SecureComponent","scopes","IAM_PERMISSIONS","IAM_ROLES","resource","RBIconButton","tooltip","text","icon","Box","style","spacing","to","textAlign","Fragment","total","objects","prettyNumber","remoteBucketList","gridTemplateColumns","errorIcon","successIcon","hide","opacity","transitionDuration","modalBasic","wizardCommon","open","closeModalAndRefresh","buckets","dispatch","useAppDispatch","useState","bucketsToAlter","setBucketsToAlter","addLoading","setAddLoading","externalLoading","setExternalLoading","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","region","setRegion","useTLS","setUseTLS","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","relationBuckets","setRelationBuckets","remoteBucketsOpts","setRemoteBucketOpts","responseItem","setResponseItem","optionsForBucketsDrop","map","remoteBucketName","useEffect","length","bucketsAlter","relationBucketsAlter","forEach","push","LogoToShow","errString","CheckCircleOutline","Tooltip","placement","ErrorOutline","updateItem","indexItem","updatedList","removeSuccessItems","newBucketsToAlter","newRelationBuckets","successElement","errorString","indexToRemove","indexOf","originBucket","splice","ModalWrapper","modalOpen","onClose","GenericWizard","loadingStep","wizardSteps","componentRender","PredefinedList","content","join","descriptionText","InputBoxWrapper","target","placeholder","FormSwitchWrapper","SelectWrapper","options","type","validity","valid","min","pattern","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","disabled","buttons","enabled","action","wizardPageJump","remoteConnectInfo","api","then","dataReturn","arrayReplaceBuckets","element","catch","err","setModalErrorSnackMessage","index","errorItem","initialBucket","bucketResponse","find","stateOfItem","event","toString","replicate","destinationBucket","endURL","hc","parseInt","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","response","states","replicationState","filter","itm","setTimeout","forModal","fieldBasic","tooltipHelper","inputWithBorder","overflowY","lineInputBoxes","queryDiv","alignSelf","elements","keyPlaceholder","valuePlaceholder","withBorder","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","keys","values","splittedVals","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","overlayIcon","AddIcon","overlayAction","trim","keysList","valuesList","addEmptyLine","fieldContainer","InputLabel","inputLabel","tooltipContainer","Help","ref","resultGrid","spacingUtils","modalStyleUtils","formFieldStyles","createTenantCommon","loadingTiers","setLoadingTiers","tiersList","setTiersList","prefix","setPrefix","tags","setTags","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","results","setResults","res","objList","tier","tierType","formScrollable","formFieldRow","fieldGroup","RadioGroupSelector","currentSelection","selectorOptions","vl","rules","expiry","expiry_days","noncurrentversion_expiration_days","transition","transition_days","noncurrentversion_transition_days","noncurrentversion_transition_storage_class","storage_class","lifecycleInsert","expired_object_delete_marker","resultItem","error","marginLeft","bucketList","searchField","minWidth","containerForHeader","records","setRecords","loading","setLoading","filterBuckets","setFilterBuckets","selectedBuckets","setSelectedBuckets","replicationModalOpen","setReplicationModalOpen","lifecycleModalOpen","setLifecycleModalOpen","setBulkSelect","features","useSelector","selFeatures","obOnly","includes","setErrorSnackMessage","filteredRecords","b","selectListBuckets","targetD","canCreateBucket","hasPermission","IAM_SCOPES","BulkReplicationModal","unselectAll","BulkLifecycleModal","PageHeader","PageLayout","actionsTray","AutoColorIcon","SearchBox","overrideClass","SelectMultipleIcon","selectAllBuckets","RefreshIcon","IAM_PAGES","LinearProgress","VirtualizedList","rowRenderFunction","totalItems","alignContent","HelpBox","CONSOLE_UI_RESOURCE","AButton","textDecoration","cursor","info","fontFamily","children","rest","tinycolor","require","colorVariants","state","system","overrideStyles","isDark","getBrightness","fill","checkboxIcons","flexBasis","flexWrap","noTopMargin","overrideLabelClasses","overrideCheckboxStyles","inputProps","checkedIcon","unCheckedIcon","disableRipple","disableFocusRipple","focusRipple","centerRipple","disableTouchRipple","htmlFor","noMinWidthLabel","predefinedList","multiLine","actionButton","prefinedContainer","predefinedTitle","includesActionButton","innerContentMultiline","innerContent","overlayShareOption","deleteDialogStyles","customDialogSize","maxWidth","snackBarCommon","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","modalSnackMessage","modalSnackBar","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","adornment","adornmentPosition","disableUnderline","InputProps","itemStatusMap","defaultHeight","RenderItemLine","isItemLoaded","loadMoreItems","startIndex","stopIndex","itemCount","onItemsRendered","itemSize","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
{"version":3,"file":"static/js/4335.c9054391.chunk.js","mappings":"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MAAO,QAASU,MAAO,eACzB,CAAEV,MAAO,YAAaU,MAAO,mBAC7B,CAAEV,MAAO,UAAWU,MAAO,mBAC3B,CAAEV,MAAO,SAAUU,MAAO,wBAC1B,CAAEV,MAAO,YAAaU,MAAO,yBCiS/B,EA9SoC,CAClC,CACEV,MAAO,OACPU,MAAO,QAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,YACPU,MAAO,aAET,CACEV,MAAO,oBACPU,MAAO,oBAET,CACEV,MAAO,sBACPU,MAAO,qBAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,sBACPU,MAAO,sBAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,mBACPU,MAAO,mBAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,gBACPU,MAAO,gBAET,CACEV,MAAO,aACPU,MAAO,aAET,CACEV,MAAO,qBACPU,MAAO,kBAET,CACEV,MAAO,kBACPU,MAAO,iBAET,CACEV,MAAO,YACPU,MAAO,YAET,CACEV,MAAO,oBACPU,MAAO,iBAET,CACEV,MAAO,UACPU,MAAO,UAET,CACEV,MAAO,kBACPU,MAAO,eAET,CACEV,MAAO,YACPU,MAAO,WAET,CACEV,MAAO,oBACPU,MAAO,gBAET,CACEV,MAAO,iBACPU,MAAO,eAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,UACPU,MAAO,WAET,CACEV,MAAO,gBACPU,MAAO,gBAET,CACEV,MAAO,uBACPU,MAAO,sBAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,QACPU,MAAO,SAET,CACEV,MAAO,QACPU,MAAO,SAET,CACEV,MAAO,aACPU,MAAO,aAET,CACEV,MAAO,aACPU,MAAO,aAET,CACEV,MAAO,oBACPU,MAAO,mBAET,CACEV,MAAO,iBACPU,MAAO,gBAET,CACEV,MAAO,QACPU,MAAO,SAET,CACEV,MAAO,gBACPU,MAAO,gBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,mBACPU,MAAO,kBAET,CACEV,MAAO,2BACPU,MAAO,uBAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,qBACPU,MAAO,oBAET,CACEV,MAAO,oBACPU,MAAO,mBAET,CACEV,MAAO,mBACPU,MAAO,kBAET,CACEV,MAAO,2BACPU,MAAO,uBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,yBACPU,MAAO,sBAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,cACPU,MAAO,eAET,CACEV,MAAO,oBACPU,MAAO,oBAET,CACEV,MAAO,mBACPU,MAAO,mBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,YACPU,MAAO,YAET,CACEV,MAAO,WACPU,MAAO,WAET,CACEV,MAAO,UACPU,MAAO,UAET,CACEV,MAAO,uBACPU,MAAO,OAET,CACEV,MAAO,iBACPU,MAAO,MAET,CACEV,MAAO,gBACPU,MAAO,gBAET,CACEV,MAAO,qBACPU,MAAO,oBAET,CACEV,MAAO,kBACPU,MAAO,iBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,aACPU,MAAO,aAET,CACEV,MAAO,UACPU,MAAO,UAET,CACEV,MAAO,kBACPU,MAAO,eAET,CACEV,MAAO,YACPU,MAAO,WAET,CACEV,MAAO,oBACPU,MAAO,gBAET,CACEV,MAAO,YACPU,MAAO,Y,WC/JX,EAxHqB,SAAC,GAQf,IAPLmB,EAOI,EAPJA,KACA3B,EAMI,EANJA,SACA4D,EAKI,EALJA,WAMMC,EAvBW,SAAClC,GAClB,MAAa,OAATA,EACKmC,EAEI,QAATnC,EACKoC,EAEI,UAATpC,EACKqC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","sources":["screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Configurations/TiersConfiguration/s3-regions.tsx","screens/Console/Configurations/TiersConfiguration/gcs-regions.ts","screens/Console/Configurations/TiersConfiguration/azure-regions.ts","screens/Console/Configurations/TiersConfiguration/RegionSelect.tsx","screens/Console/Configurations/TiersConfiguration/RegionSelectWrapper.tsx","screens/Console/Configurations/TiersConfiguration/AddTierConfiguration.tsx","screens/Console/Configurations/TiersConfiguration/utils.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState } from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  fieldBasic,\r\n  fileInputStyles,\r\n  tooltipHelper,\r\n} from \"../common/styleLibrary\";\r\nimport { fileProcess } from \"./utils\";\r\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\r\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\r\n\r\ninterface InputBoxProps {\r\n  label: string;\r\n  classes: any;\r\n  onChange: (e: string, i: string) => void;\r\n  id: string;\r\n  name: string;\r\n  disabled?: boolean;\r\n  tooltip?: string;\r\n  required?: boolean;\r\n  error?: string;\r\n  accept?: string;\r\n  value?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n    valueString: {\r\n      maxWidth: 350,\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      marginTop: 2,\r\n    },\r\n    fileInputField: {\r\n      margin: \"13px 0\",\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n      },\r\n    },\r\n    ...fileInputStyles,\r\n    inputLabel: {\r\n      ...fieldBasic.inputLabel,\r\n      fontWeight: \"normal\",\r\n    },\r\n    textBoxContainer: {\r\n      ...fieldBasic.textBoxContainer,\r\n      maxWidth: \"100%\",\r\n      border: \"1px solid #eaeaea\",\r\n      paddingLeft: \"15px\",\r\n    },\r\n  });\r\n\r\nconst FileSelector = ({\r\n  label,\r\n  classes,\r\n  onChange,\r\n  id,\r\n  name,\r\n  disabled = false,\r\n  tooltip = \"\",\r\n  required,\r\n  error = \"\",\r\n  accept = \"\",\r\n  value = \"\",\r\n}: InputBoxProps) => {\r\n  const [showFileSelector, setShowSelector] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\r\n          classes.fieldContainer\r\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\r\n      >\r\n        {label !== \"\" && (\r\n          <InputLabel\r\n            htmlFor={id}\r\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\r\n              classes.inputLabel\r\n            }`}\r\n          >\r\n            <span>\r\n              {label}\r\n              {required ? \"*\" : \"\"}\r\n            </span>\r\n            {tooltip !== \"\" && (\r\n              <div className={classes.tooltipContainer}>\r\n                <Tooltip title={tooltip} placement=\"top-start\">\r\n                  <div className={classes.tooltip}>\r\n                    <HelpIcon />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </InputLabel>\r\n        )}\r\n\r\n        {showFileSelector || value === \"\" ? (\r\n          <div className={classes.textBoxContainer}>\r\n            <input\r\n              type=\"file\"\r\n              name={name}\r\n              onChange={(e) => {\r\n                const fileName = get(e, \"target.files[0].name\", \"\");\r\n                fileProcess(e, (data: any) => {\r\n                  onChange(data, fileName);\r\n                });\r\n              }}\r\n              accept={accept}\r\n              required={required}\r\n              disabled={disabled}\r\n              className={classes.fileInputField}\r\n            />\r\n\r\n            {value !== \"\" && (\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                onClick={() => {\r\n                  setShowSelector(false);\r\n                }}\r\n                disableRipple={false}\r\n                disableFocusRipple={false}\r\n                size=\"small\"\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n            )}\r\n\r\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\r\n          </div>\r\n        ) : (\r\n          <div className={classes.fileReselect}>\r\n            <div className={classes.valueString}>{value}</div>\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n              onClick={() => {\r\n                setShowSelector(true);\r\n              }}\r\n              disableRipple={false}\r\n              disableFocusRipple={false}\r\n              size=\"small\"\r\n            >\r\n              <AttachFileIcon />\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(FileSelector);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nexport const fileProcess = (evt: any, callback: any) => {\r\n  const file = evt.target.files[0];\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(file);\r\n\r\n  reader.onload = () => {\r\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\r\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\r\n    const fileBase64 = reader.result;\r\n    if (fileBase64) {\r\n      const fileArray = fileBase64.toString().split(\"base64,\");\r\n\r\n      if (fileArray.length === 2) {\r\n        callback(fileArray[1]);\r\n      }\r\n    }\r\n  };\r\n};\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { RegionEntry } from \"./types\";\r\n\r\nconst s3Regions: RegionEntry[] = [\r\n  { label: \"US East (Ohio)\", value: \"us-east-2\" },\r\n  { label: \"US East (N. Virginia)\", value: \"us-east-1\" },\r\n  { label: \"US West (N. California)\", value: \"us-west-1\" },\r\n  { label: \"US West (Oregon)\", value: \"us-west-2\" },\r\n  { label: \"Africa (Cape Town)\", value: \"af-south-1\" },\r\n  { label: \"Asia Pacific (Hong Kong)***\", value: \"ap-east-1\" },\r\n  { label: \"Asia Pacific (Jakarta)\", value: \"ap-southeast-3\" },\r\n  { label: \"Asia Pacific (Mumbai)\", value: \"ap-south-1\" },\r\n  { label: \"Asia Pacific (Osaka)\", value: \"ap-northeast-3\" },\r\n  { label: \"Asia Pacific (Seoul)\", value: \"ap-northeast-2\" },\r\n  { label: \"Asia Pacific (Singapore)\", value: \"ap-southeast-1\" },\r\n  { label: \"Asia Pacific (Sydney)\", value: \"ap-southeast-2\" },\r\n  { label: \"Asia Pacific (Tokyo)\", value: \"ap-northeast-1\" },\r\n  { label: \"Canada (Central)\", value: \"ca-central-1\" },\r\n  { label: \"China (Beijing)\", value: \"cn-north-1\" },\r\n  { label: \"China (Ningxia)\", value: \"cn-northwest-1\" },\r\n  { label: \"Europe (Frankfurt)\", value: \"eu-central-1\" },\r\n  { label: \"Europe (Ireland)\", value: \"eu-west-1\" },\r\n  { label: \"Europe (London)\", value: \"eu-west-2\" },\r\n  { label: \"Europe (Milan)\", value: \"eu-south-1\" },\r\n  { label: \"Europe (Paris)\", value: \"eu-west-3\" },\r\n  { label: \"Europe (Stockholm)\", value: \"eu-north-1\" },\r\n  { label: \"South America (São Paulo)\", value: \"sa-east-1\" },\r\n  { label: \"Middle East (Bahrain)\", value: \"me-south-1\" },\r\n  { label: \"AWS GovCloud (US-East)\", value: \"us-gov-east-1\" },\r\n  { label: \"AWS GovCloud (US-West)\", value: \"us-gov-west-1\" },\r\n];\r\n\r\nexport default s3Regions;\r\n","import { RegionEntry } from \"./types\";\r\n\r\nconst gcsRegions: RegionEntry[] = [\r\n  { label: \"Montréal\", value: \"NORTHAMERICA-NORTHEAST1\" },\r\n  { label: \"Toronto\", value: \"NORTHAMERICA-NORTHEAST2\" },\r\n  { label: \"Iowa\", value: \"US-CENTRAL1\" },\r\n  { label: \"South Carolina\", value: \"US-EAST1\" },\r\n  { label: \"Northern Virginia\", value: \"US-EAST4\" },\r\n  { label: \"Oregon\", value: \"US-WEST1\" },\r\n  { label: \"Los Angeles\", value: \"US-WEST2\" },\r\n  { label: \"Salt Lake City\", value: \"US-WEST3\" },\r\n  { label: \"Las Vegas\", value: \"US-WEST4\" },\r\n  { label: \"São Paulo\", value: \"SOUTHAMERICA-EAST1\" },\r\n  { label: \"Santiago\", value: \"SOUTHAMERICA-WEST1\" },\r\n  { label: \"Warsaw\", value: \"EUROPE-CENTRAL2\" },\r\n  { label: \"Finland\", value: \"EUROPE-NORTH1\" },\r\n  { label: \"Belgium\", value: \"EUROPE-WEST1\" },\r\n  { label: \"London\", value: \"EUROPE-WEST2\" },\r\n  { label: \"Frankfurt\", value: \"EUROPE-WEST3\" },\r\n  { label: \"Netherlands\", value: \"EUROPE-WEST4\" },\r\n  { label: \"Zürich\", value: \"EUROPE-WEST6\" },\r\n  { label: \"Taiwan\", value: \"ASIA-EAST1\" },\r\n  { label: \"Hong Kong\", value: \"ASIA-EAST2\" },\r\n  { label: \"Tokyo\", value: \"ASIA-NORTHEAST1\" },\r\n  { label: \"Osaka\", value: \"ASIA-NORTHEAST2\" },\r\n  { label: \"Seoul\", value: \"ASIA-NORTHEAST3\" },\r\n  { label: \"Mumbai\", value: \"ASIA-SOUTH1\" },\r\n  { label: \"Delhi\", value: \"ASIA-SOUTH2\" },\r\n  { label: \"Singapore\", value: \"ASIA-SOUTHEAST1\" },\r\n  { label: \"Jakarta\", value: \"ASIA-SOUTHEAST2\" },\r\n  { label: \"Sydney\", value: \"AUSTRALIA-SOUTHEAST1\" },\r\n  { label: \"Melbourne\", value: \"AUSTRALIA-SOUTHEAST2\" },\r\n];\r\n\r\nexport default gcsRegions;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport { RegionEntry } from \"./types\";\r\n\r\nconst azureRegions: RegionEntry[] = [\r\n  {\r\n    label: \"Asia\",\r\n    value: \"asia\",\r\n  },\r\n  {\r\n    label: \"Asia Pacific\",\r\n    value: \"asiapacific\",\r\n  },\r\n  {\r\n    label: \"Australia\",\r\n    value: \"australia\",\r\n  },\r\n  {\r\n    label: \"Australia Central\",\r\n    value: \"australiacentral\",\r\n  },\r\n  {\r\n    label: \"Australia Central 2\",\r\n    value: \"australiacentral2\",\r\n  },\r\n  {\r\n    label: \"Australia East\",\r\n    value: \"australiaeast\",\r\n  },\r\n  {\r\n    label: \"Australia Southeast\",\r\n    value: \"australiasoutheast\",\r\n  },\r\n  {\r\n    label: \"Brazil\",\r\n    value: \"brazil\",\r\n  },\r\n  {\r\n    label: \"Brazil South\",\r\n    value: \"brazilsouth\",\r\n  },\r\n  {\r\n    label: \"Brazil Southeast\",\r\n    value: \"brazilsoutheast\",\r\n  },\r\n  {\r\n    label: \"Canada\",\r\n    value: \"canada\",\r\n  },\r\n  {\r\n    label: \"Canada Central\",\r\n    value: \"canadacentral\",\r\n  },\r\n  {\r\n    label: \"Canada East\",\r\n    value: \"canadaeast\",\r\n  },\r\n  {\r\n    label: \"Central India\",\r\n    value: \"centralindia\",\r\n  },\r\n  {\r\n    label: \"Central US\",\r\n    value: \"centralus\",\r\n  },\r\n  {\r\n    label: \"Central US (Stage)\",\r\n    value: \"centralusstage\",\r\n  },\r\n  {\r\n    label: \"Central US EUAP\",\r\n    value: \"centraluseuap\",\r\n  },\r\n  {\r\n    label: \"East Asia\",\r\n    value: \"eastasia\",\r\n  },\r\n  {\r\n    label: \"East Asia (Stage)\",\r\n    value: \"eastasiastage\",\r\n  },\r\n  {\r\n    label: \"East US\",\r\n    value: \"eastus\",\r\n  },\r\n  {\r\n    label: \"East US (Stage)\",\r\n    value: \"eastusstage\",\r\n  },\r\n  {\r\n    label: \"East US 2\",\r\n    value: \"eastus2\",\r\n  },\r\n  {\r\n    label: \"East US 2 (Stage)\",\r\n    value: \"eastus2stage\",\r\n  },\r\n  {\r\n    label: \"East US 2 EUAP\",\r\n    value: \"eastus2euap\",\r\n  },\r\n  {\r\n    label: \"Europe\",\r\n    value: \"europe\",\r\n  },\r\n  {\r\n    label: \"France\",\r\n    value: \"france\",\r\n  },\r\n  {\r\n    label: \"France Central\",\r\n    value: \"francecentral\",\r\n  },\r\n  {\r\n    label: \"France South\",\r\n    value: \"francesouth\",\r\n  },\r\n  {\r\n    label: \"Germany\",\r\n    value: \"germany\",\r\n  },\r\n  {\r\n    label: \"Germany North\",\r\n    value: \"germanynorth\",\r\n  },\r\n  {\r\n    label: \"Germany West Central\",\r\n    value: \"germanywestcentral\",\r\n  },\r\n  {\r\n    label: \"Global\",\r\n    value: \"global\",\r\n  },\r\n  {\r\n    label: \"India\",\r\n    value: \"india\",\r\n  },\r\n  {\r\n    label: \"Japan\",\r\n    value: \"japan\",\r\n  },\r\n  {\r\n    label: \"Japan East\",\r\n    value: \"japaneast\",\r\n  },\r\n  {\r\n    label: \"Japan West\",\r\n    value: \"japanwest\",\r\n  },\r\n  {\r\n    label: \"Jio India Central\",\r\n    value: \"jioindiacentral\",\r\n  },\r\n  {\r\n    label: \"Jio India West\",\r\n    value: \"jioindiawest\",\r\n  },\r\n  {\r\n    label: \"Korea\",\r\n    value: \"korea\",\r\n  },\r\n  {\r\n    label: \"Korea Central\",\r\n    value: \"koreacentral\",\r\n  },\r\n  {\r\n    label: \"Korea South\",\r\n    value: \"koreasouth\",\r\n  },\r\n  {\r\n    label: \"North Central US\",\r\n    value: \"northcentralus\",\r\n  },\r\n  {\r\n    label: \"North Central US (Stage)\",\r\n    value: \"northcentralusstage\",\r\n  },\r\n  {\r\n    label: \"North Europe\",\r\n    value: \"northeurope\",\r\n  },\r\n  {\r\n    label: \"Norway\",\r\n    value: \"norway\",\r\n  },\r\n  {\r\n    label: \"Norway East\",\r\n    value: \"norwayeast\",\r\n  },\r\n  {\r\n    label: \"Norway West\",\r\n    value: \"norwaywest\",\r\n  },\r\n  {\r\n    label: \"South Africa\",\r\n    value: \"southafrica\",\r\n  },\r\n  {\r\n    label: \"South Africa North\",\r\n    value: \"southafricanorth\",\r\n  },\r\n  {\r\n    label: \"South Africa West\",\r\n    value: \"southafricawest\",\r\n  },\r\n  {\r\n    label: \"South Central US\",\r\n    value: \"southcentralus\",\r\n  },\r\n  {\r\n    label: \"South Central US (Stage)\",\r\n    value: \"southcentralusstage\",\r\n  },\r\n  {\r\n    label: \"South India\",\r\n    value: \"southindia\",\r\n  },\r\n  {\r\n    label: \"Southeast Asia\",\r\n    value: \"southeastasia\",\r\n  },\r\n  {\r\n    label: \"Southeast Asia (Stage)\",\r\n    value: \"southeastasiastage\",\r\n  },\r\n  {\r\n    label: \"Sweden Central\",\r\n    value: \"swedencentral\",\r\n  },\r\n  {\r\n    label: \"Switzerland\",\r\n    value: \"switzerland\",\r\n  },\r\n  {\r\n    label: \"Switzerland North\",\r\n    value: \"switzerlandnorth\",\r\n  },\r\n  {\r\n    label: \"Switzerland West\",\r\n    value: \"switzerlandwest\",\r\n  },\r\n  {\r\n    label: \"UAE Central\",\r\n    value: \"uaecentral\",\r\n  },\r\n  {\r\n    label: \"UAE North\",\r\n    value: \"uaenorth\",\r\n  },\r\n  {\r\n    label: \"UK South\",\r\n    value: \"uksouth\",\r\n  },\r\n  {\r\n    label: \"UK West\",\r\n    value: \"ukwest\",\r\n  },\r\n  {\r\n    label: \"United Arab Emirates\",\r\n    value: \"uae\",\r\n  },\r\n  {\r\n    label: \"United Kingdom\",\r\n    value: \"uk\",\r\n  },\r\n  {\r\n    label: \"United States\",\r\n    value: \"unitedstates\",\r\n  },\r\n  {\r\n    label: \"United States EUAP\",\r\n    value: \"unitedstateseuap\",\r\n  },\r\n  {\r\n    label: \"West Central US\",\r\n    value: \"westcentralus\",\r\n  },\r\n  {\r\n    label: \"West Europe\",\r\n    value: \"westeurope\",\r\n  },\r\n  {\r\n    label: \"West India\",\r\n    value: \"westindia\",\r\n  },\r\n  {\r\n    label: \"West US\",\r\n    value: \"westus\",\r\n  },\r\n  {\r\n    label: \"West US (Stage)\",\r\n    value: \"westusstage\",\r\n  },\r\n  {\r\n    label: \"West US 2\",\r\n    value: \"westus2\",\r\n  },\r\n  {\r\n    label: \"West US 2 (Stage)\",\r\n    value: \"westus2stage\",\r\n  },\r\n  {\r\n    label: \"West US 3\",\r\n    value: \"westus3\",\r\n  },\r\n];\r\nexport default azureRegions;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\n\r\nimport { Autocomplete, Box, TextField } from \"@mui/material\";\r\n\r\nimport s3Regions from \"./s3-regions\";\r\nimport gcsRegions from \"./gcs-regions\";\r\nimport azRegions from \"./azure-regions\";\r\n\r\nconst getRegions = (type: string): any => {\r\n  if (type === \"s3\") {\r\n    return s3Regions;\r\n  }\r\n  if (type === \"gcs\") {\r\n    return gcsRegions;\r\n  }\r\n  if (type === \"azure\") {\r\n    return azRegions;\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nconst RegionSelect = ({\r\n  type,\r\n  onChange,\r\n  inputProps,\r\n}: {\r\n  type: \"minio\" | \"s3\" | \"gcs\" | \"azure\" | \"unsupported\";\r\n  onChange: (obj: any) => void;\r\n  inputProps?: any;\r\n}) => {\r\n  const regionList = getRegions(type);\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  return (\r\n    <Autocomplete\r\n      sx={{\r\n        \"& .MuiOutlinedInput-root\": {\r\n          padding: 0,\r\n          paddingLeft: \"10px\",\r\n          fontSize: 13,\r\n          fontWeight: 600,\r\n        },\r\n        \"& .MuiAutocomplete-inputRoot\": {\r\n          \"& .MuiOutlinedInput-notchedOutline\": {\r\n            borderColor: \"#e5e5e5\",\r\n            borderWidth: 1,\r\n          },\r\n          \"&:hover .MuiOutlinedInput-notchedOutline\": {\r\n            borderColor: \"#07193E\",\r\n            borderWidth: 1,\r\n          },\r\n          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n            borderColor: \"#07193E\",\r\n            borderWidth: 1,\r\n          },\r\n        },\r\n      }}\r\n      freeSolo\r\n      selectOnFocus\r\n      handleHomeEndKeys\r\n      onChange={(event, newValue) => {\r\n        let newVal: any = newValue;\r\n\r\n        if (typeof newValue === \"string\") {\r\n          newVal = {\r\n            label: newValue,\r\n          };\r\n        } else if (newValue && newValue.inputValue) {\r\n          // Create a new value from the user input\r\n          newVal = {\r\n            label: newValue.inputValue,\r\n          };\r\n        } else {\r\n          newVal = newValue;\r\n        }\r\n        setValue(newVal);\r\n        onChange(newVal?.value);\r\n      }}\r\n      value={value}\r\n      onInputChange={(e: any) => {\r\n        const { target: { value = \"\" } = {} } = e || {};\r\n        onChange(value);\r\n      }}\r\n      getOptionLabel={(option) => {\r\n        // Value selected with enter, right from the input\r\n        if (typeof option === \"string\") {\r\n          return option;\r\n        }\r\n        // Add \"xxx\" option created dynamically\r\n        if (option.inputValue) {\r\n          return option.inputValue;\r\n        }\r\n        // Regular option\r\n        return option.value;\r\n      }}\r\n      options={regionList}\r\n      filterOptions={(opts: any[], state: any) => {\r\n        const filterText = state.inputValue.toLowerCase();\r\n\r\n        return opts.filter((opt) =>\r\n          `${opt.label.toLowerCase()}${opt.value.toLowerCase()}`.includes(\r\n            filterText\r\n          )\r\n        );\r\n      }}\r\n      renderOption={(props: any, opt: any) => {\r\n        return (\r\n          <li {...props}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexFlow: \"column\",\r\n                alignItems: \"baseline\",\r\n                padding: \"4px\",\r\n                borderBottom: \"1px solid #eaeaea\",\r\n                cursor: \"pointer\",\r\n                width: \"100%\",\r\n\r\n                \"& .label\": {\r\n                  fontSize: \"13px\",\r\n                  fontWeight: 500,\r\n                },\r\n                \"& .value\": {\r\n                  fontSize: \"11px\",\r\n                  fontWeight: 400,\r\n                },\r\n              }}\r\n            >\r\n              <span className=\"label\">{opt.value}</span>\r\n              <span className=\"value\">{opt.label}</span>\r\n            </Box>\r\n          </li>\r\n        );\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField {...params} {...inputProps} fullWidth />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RegionSelect;\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React from \"react\";\r\nimport { Grid, IconButton, InputLabel, Tooltip } from \"@mui/material\";\r\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  fieldBasic,\r\n  inputFieldStyles,\r\n  tooltipHelper,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport HelpIcon from \"../../../../icons/HelpIcon\";\r\nimport clsx from \"clsx\";\r\nimport RegionSelect from \"./RegionSelect\";\r\n\r\ninterface RegionSelectBoxProps {\r\n  label: string;\r\n  classes?: any;\r\n  onChange: (value: string) => void;\r\n  onKeyPress?: (e: any) => void;\r\n  value?: string | boolean;\r\n  id: string;\r\n  name: string;\r\n  disabled?: boolean;\r\n  type: \"minio\" | \"s3\" | \"gcs\" | \"azure\";\r\n  tooltip?: string;\r\n  index?: number;\r\n  error?: string;\r\n  required?: boolean;\r\n  placeholder?: string;\r\n  overlayId?: string;\r\n  overlayIcon?: any;\r\n  overlayAction?: () => void;\r\n  overlayObject?: any;\r\n  extraInputProps?: StandardInputProps[\"inputProps\"];\r\n  noLabelMinWidth?: boolean;\r\n  pattern?: string;\r\n  autoFocus?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n    textBoxContainer: {\r\n      flexGrow: 1,\r\n      position: \"relative\",\r\n      minWidth: 160,\r\n    },\r\n    overlayAction: {\r\n      position: \"absolute\",\r\n      right: 5,\r\n      top: 6,\r\n      \"& svg\": {\r\n        maxWidth: 15,\r\n        maxHeight: 15,\r\n      },\r\n      \"&.withLabel\": {\r\n        top: 5,\r\n      },\r\n    },\r\n    inputLabel: {\r\n      ...fieldBasic.inputLabel,\r\n      fontWeight: \"normal\",\r\n    },\r\n  });\r\n\r\nconst inputStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    ...inputFieldStyles,\r\n  })\r\n);\r\n\r\nconst RegionSelectWrapper = ({\r\n  label,\r\n  onChange,\r\n  id,\r\n  name,\r\n  type,\r\n  tooltip = \"\",\r\n  index = 0,\r\n  error = \"\",\r\n  required = false,\r\n  overlayId,\r\n  overlayIcon = null,\r\n  overlayObject = null,\r\n  extraInputProps = {},\r\n  overlayAction,\r\n  noLabelMinWidth = false,\r\n  classes,\r\n  className = \"\",\r\n}: RegionSelectBoxProps) => {\r\n  const inputClasses = inputStyles();\r\n\r\n  let inputProps: any = {\r\n    \"data-index\": index,\r\n    ...extraInputProps,\r\n    name: name,\r\n    id: id,\r\n    classes: inputClasses,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        className={clsx(\r\n          className !== \"\" ? className : \"\",\r\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\r\n        )}\r\n      >\r\n        {label !== \"\" && (\r\n          <InputLabel\r\n            htmlFor={id}\r\n            className={\r\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\r\n            }\r\n          >\r\n            <span>\r\n              {label}\r\n              {required ? \"*\" : \"\"}\r\n            </span>\r\n            {tooltip !== \"\" && (\r\n              <div className={classes.tooltipContainer}>\r\n                <Tooltip title={tooltip} placement=\"top-start\">\r\n                  <div className={classes.tooltip}>\r\n                    <HelpIcon />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </InputLabel>\r\n        )}\r\n\r\n        <div className={classes.textBoxContainer}>\r\n          <RegionSelect\r\n            type={type}\r\n            inputProps={inputProps}\r\n            onChange={onChange}\r\n          />\r\n          {overlayIcon && (\r\n            <div\r\n              className={`${classes.overlayAction} ${\r\n                label !== \"\" ? \"withLabel\" : \"\"\r\n              }`}\r\n            >\r\n              <IconButton\r\n                onClick={\r\n                  overlayAction\r\n                    ? () => {\r\n                        overlayAction();\r\n                      }\r\n                    : () => null\r\n                }\r\n                id={overlayId}\r\n                size={\"small\"}\r\n                disableFocusRipple={false}\r\n                disableRipple={false}\r\n                disableTouchRipple={false}\r\n              >\r\n                {overlayIcon}\r\n              </IconButton>\r\n            </div>\r\n          )}\r\n          {overlayObject && (\r\n            <div\r\n              className={`${classes.overlayAction} ${\r\n                label !== \"\" ? \"withLabel\" : \"\"\r\n              }`}\r\n            >\r\n              {overlayObject}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(RegionSelectWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport get from \"lodash/get\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport {\r\n  fileInputStyles,\r\n  formFieldStyles,\r\n  modalBasic,\r\n  settingsCommon,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport api from \"../../../../common/api\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\r\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\r\nimport {\r\n  azureServiceName,\r\n  gcsServiceName,\r\n  minioServiceName,\r\n  s3ServiceName,\r\n  tierTypes,\r\n} from \"./utils\";\r\nimport BackLink from \"../../../../common/BackLink\";\r\nimport PageLayout from \"../../Common/Layout/PageLayout\";\r\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\r\n\r\nimport RegionSelectWrapper from \"./RegionSelectWrapper\";\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...modalBasic,\r\n    ...settingsCommon,\r\n    ...formFieldStyles,\r\n    lambdaNotifTitle: {\r\n      color: \"#07193E\",\r\n      fontSize: 16,\r\n      fontFamily: \"Lato,sans-serif\",\r\n      paddingLeft: 18,\r\n    },\r\n    fileInputFieldCss: {\r\n      margin: \"0\",\r\n    },\r\n    fileTextBoxContainer: {\r\n      maxWidth: \" 100%\",\r\n      flex: 1,\r\n    },\r\n    fileReselectCss: {\r\n      maxWidth: \" 100%\",\r\n      flex: 1,\r\n    },\r\n    ...fileInputStyles,\r\n  });\r\n\r\ninterface IAddNotificationEndpointProps {\r\n  classes: any;\r\n}\r\n\r\nconst AddTierConfiguration = ({ classes }: IAddNotificationEndpointProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  //Local States\r\n  const [saving, setSaving] = useState<boolean>(false);\r\n\r\n  // Form Items\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [endpoint, setEndpoint] = useState<string>(\"\");\r\n  const [bucket, setBucket] = useState<string>(\"\");\r\n  const [prefix, setPrefix] = useState<string>(\"\");\r\n  const [region, setRegion] = useState<string>(\"\");\r\n  const [storageClass, setStorageClass] = useState<string>(\"\");\r\n\r\n  const [accessKey, setAccessKey] = useState<string>(\"\");\r\n  const [secretKey, setSecretKey] = useState<string>(\"\");\r\n\r\n  const [creds, setCreds] = useState<string>(\"\");\r\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\r\n\r\n  const [accountName, setAccountName] = useState<string>(\"\");\r\n  const [accountKey, setAccountKey] = useState<string>(\"\");\r\n\r\n  const [titleSelection, setTitleSelection] = useState<string>(\"\");\r\n\r\n  const type = get(params, \"service\", \"s3\");\r\n\r\n  // Validations\r\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\r\n  const [nameInputError, setNameInputError] = useState<string>(\"\");\r\n\r\n  // Extra validation functions\r\n\r\n  const validName = useCallback(() => {\r\n    const patternAgainst = /^[A-Z0-9-_]+$/; // Only allow uppercase, numbers, dashes and underscores\r\n    if (patternAgainst.test(name)) {\r\n      setNameInputError(\"\");\r\n      return true;\r\n    }\r\n\r\n    setNameInputError(\r\n      \"Please verify that string is uppercase only and contains valid characters (numbers, dashes & underscores).\"\r\n    );\r\n    return false;\r\n  }, [name]);\r\n\r\n  //Effects\r\n\r\n  useEffect(() => {\r\n    if (saving) {\r\n      let request = {};\r\n      let fields = {\r\n        name,\r\n        endpoint,\r\n        bucket,\r\n        prefix,\r\n        region,\r\n      };\r\n\r\n      let tierType = type;\r\n\r\n      if (type === \"minio\") {\r\n        tierType = \"s3\";\r\n      }\r\n\r\n      switch (type) {\r\n        case \"minio\":\r\n        case \"s3\":\r\n          request = {\r\n            s3: {\r\n              ...fields,\r\n              accesskey: accessKey,\r\n              secretkey: secretKey,\r\n              storageclass: storageClass,\r\n            },\r\n          };\r\n          break;\r\n        case \"gcs\":\r\n          request = {\r\n            gcs: {\r\n              ...fields,\r\n              creds: encodedCreds,\r\n            },\r\n          };\r\n          break;\r\n        case \"azure\":\r\n          request = {\r\n            azure: {\r\n              ...fields,\r\n              accountname: accountName,\r\n              accountkey: accountKey,\r\n            },\r\n          };\r\n      }\r\n\r\n      let payload = {\r\n        type: tierType,\r\n        ...request,\r\n      };\r\n\r\n      api\r\n        .invoke(\"POST\", `/api/v1/admin/tiers`, payload)\r\n        .then(() => {\r\n          setSaving(false);\r\n\r\n          navigate(IAM_PAGES.TIERS);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setSaving(false);\r\n          dispatch(setErrorSnackMessage(err));\r\n        });\r\n    }\r\n  }, [\r\n    accessKey,\r\n    accountKey,\r\n    accountName,\r\n    bucket,\r\n    encodedCreds,\r\n    endpoint,\r\n    name,\r\n    prefix,\r\n    region,\r\n    saving,\r\n    secretKey,\r\n    dispatch,\r\n    storageClass,\r\n    type,\r\n    navigate,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let valid = true;\r\n    if (type === \"\") {\r\n      valid = false;\r\n    }\r\n    if (name === \"\" || !validName()) {\r\n      valid = false;\r\n    }\r\n    if (endpoint === \"\") {\r\n      valid = false;\r\n    }\r\n    if (bucket === \"\") {\r\n      valid = false;\r\n    }\r\n    if (prefix === \"\") {\r\n      valid = false;\r\n    }\r\n    if (region === \"\" && type !== \"minio\") {\r\n      valid = false;\r\n    }\r\n\r\n    if (type === \"s3\" || type === \"minio\") {\r\n      if (accessKey === \"\") {\r\n        valid = false;\r\n      }\r\n      if (secretKey === \"\") {\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    if (type === \"gcs\") {\r\n      if (encodedCreds === \"\") {\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    if (type === \"azure\") {\r\n      if (accountName === \"\") {\r\n        valid = false;\r\n      }\r\n      if (accountKey === \"\") {\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    setIsFormValid(valid);\r\n  }, [\r\n    accessKey,\r\n    accountKey,\r\n    accountName,\r\n    bucket,\r\n    encodedCreds,\r\n    endpoint,\r\n    isFormValid,\r\n    name,\r\n    prefix,\r\n    region,\r\n    secretKey,\r\n    storageClass,\r\n    type,\r\n    validName,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case \"gcs\":\r\n        setEndpoint(\"https://storage.googleapis.com/\");\r\n        setTitleSelection(\"Google Cloud\");\r\n        break;\r\n      case \"s3\":\r\n        setEndpoint(\"https://s3.amazonaws.com\");\r\n        setTitleSelection(\"Amazon S3\");\r\n        break;\r\n      case \"azure\":\r\n        setEndpoint(\"http://blob.core.windows.net\");\r\n        setTitleSelection(\"Azure\");\r\n        break;\r\n      case \"minio\":\r\n        setEndpoint(\"\");\r\n        setTitleSelection(\"MinIO\");\r\n    }\r\n  }, [type]);\r\n\r\n  //Fetch Actions\r\n  const submitForm = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    setSaving(true);\r\n  };\r\n\r\n  // Input actions\r\n  const updateTierName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value.toUpperCase());\r\n  };\r\n\r\n  const targetElement = tierTypes.find((item) => item.serviceName === type);\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageHeader\r\n        label={\r\n          <Fragment>\r\n            <BackLink to={IAM_PAGES.TIERS_ADD} label={\"Add Tier\"} />\r\n          </Fragment>\r\n        }\r\n        actions={<React.Fragment />}\r\n      />\r\n\r\n      <PageLayout>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sx={{\r\n            border: \"1px solid #eaeaea\",\r\n            padding: \"25px\",\r\n          }}\r\n        >\r\n          <form noValidate onSubmit={submitForm}>\r\n            {type !== \"\" && targetElement ? (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                key={`icon-${targetElement.targetTitle}`}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"start\",\r\n                  marginBottom: \"20px\",\r\n                }}\r\n              >\r\n                {targetElement.logo ? (\r\n                  <Box\r\n                    sx={{\r\n                      \"& .min-icon\": {\r\n                        height: \"60px\",\r\n                        width: \"60px\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    {targetElement.logo}\r\n                  </Box>\r\n                ) : null}\r\n\r\n                <div className={classes.lambdaNotifTitle}>\r\n                  <b>\r\n                    {titleSelection ? titleSelection : \"\"} - Add Tier\r\n                    Configuration\r\n                  </b>\r\n                </div>\r\n              </Grid>\r\n            ) : null}\r\n\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sx={{\r\n                display: \"grid\",\r\n                gridTemplateColumns: { xs: \"1fr\", sm: \"1fr 1fr\" },\r\n                gridAutoFlow: { xs: \"dense\", sm: \"row\" },\r\n                gridRowGap: 25,\r\n                gridColumnGap: 50,\r\n              }}\r\n            >\r\n              {type !== \"\" && (\r\n                <Fragment>\r\n                  <InputBoxWrapper\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name (Eg. REMOTE-TIER)\"\r\n                    value={name}\r\n                    onChange={updateTierName}\r\n                    error={nameInputError}\r\n                    required\r\n                  />\r\n                  <InputBoxWrapper\r\n                    id=\"endpoint\"\r\n                    name=\"endpoint\"\r\n                    label=\"Endpoint\"\r\n                    placeholder=\"Enter Endpoint\"\r\n                    value={endpoint}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setEndpoint(e.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                  {(type === s3ServiceName || type === minioServiceName) && (\r\n                    <Fragment>\r\n                      <InputBoxWrapper\r\n                        id=\"accessKey\"\r\n                        name=\"accessKey\"\r\n                        label=\"Access Key\"\r\n                        placeholder=\"Enter Access Key\"\r\n                        value={accessKey}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setAccessKey(e.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                      <InputBoxWrapper\r\n                        id=\"secretKey\"\r\n                        name=\"secretKey\"\r\n                        label=\"Secret Key\"\r\n                        placeholder=\"Enter Secret Key\"\r\n                        value={secretKey}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setSecretKey(e.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                    </Fragment>\r\n                  )}\r\n                  {type === gcsServiceName && (\r\n                    <FileSelector\r\n                      accept=\".json\"\r\n                      classes={{\r\n                        fileInputField: classes.fileInputFieldCss,\r\n                        textBoxContainer: classes.fileTextBoxContainer,\r\n                        fileReselect: classes.fileReselectCss,\r\n                      }}\r\n                      id=\"creds\"\r\n                      label=\"Credentials\"\r\n                      name=\"creds\"\r\n                      onChange={(encodedValue, fileName) => {\r\n                        setEncodedCreds(encodedValue);\r\n                        setCreds(fileName);\r\n                      }}\r\n                      value={creds}\r\n                      required\r\n                    />\r\n                  )}\r\n                  {type === azureServiceName && (\r\n                    <Fragment>\r\n                      <InputBoxWrapper\r\n                        id=\"accountName\"\r\n                        name=\"accountName\"\r\n                        label=\"Account Name\"\r\n                        placeholder=\"Enter Account Name\"\r\n                        value={accountName}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setAccountName(e.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                      <InputBoxWrapper\r\n                        id=\"accountKey\"\r\n                        name=\"accountKey\"\r\n                        label=\"Account Key\"\r\n                        placeholder=\"Enter Account Key\"\r\n                        value={accountKey}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setAccountKey(e.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                    </Fragment>\r\n                  )}\r\n                  <InputBoxWrapper\r\n                    id=\"bucket\"\r\n                    name=\"bucket\"\r\n                    label=\"Bucket\"\r\n                    placeholder=\"Enter Bucket\"\r\n                    value={bucket}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setBucket(e.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                  <InputBoxWrapper\r\n                    id=\"prefix\"\r\n                    name=\"prefix\"\r\n                    label=\"Prefix\"\r\n                    placeholder=\"Enter Prefix\"\r\n                    value={prefix}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setPrefix(e.target.value);\r\n                    }}\r\n                    required\r\n                  />\r\n                  <RegionSelectWrapper\r\n                    onChange={(value) => {\r\n                      setRegion(value);\r\n                    }}\r\n                    required={type !== \"minio\"}\r\n                    label={\"Region\"}\r\n                    id=\"region\"\r\n                    name=\"region\"\r\n                    type={type as \"azure\" | \"s3\" | \"minio\" | \"gcs\"}\r\n                  />\r\n                  {type === s3ServiceName ||\r\n                    (type === minioServiceName && (\r\n                      <InputBoxWrapper\r\n                        id=\"storageClass\"\r\n                        name=\"storageClass\"\r\n                        label=\"Storage Class\"\r\n                        placeholder=\"Enter Storage Class\"\r\n                        value={storageClass}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          setStorageClass(e.target.value);\r\n                        }}\r\n                      />\r\n                    ))}\r\n                </Fragment>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.settingsButtonContainer}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={saving || !isFormValid}\r\n              >\r\n                Save Tier Configuration\r\n              </Button>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </PageLayout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AddTierConfiguration);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport {\r\n  AzureTierIcon,\r\n  AzureTierIconXs,\r\n  GoogleTierIcon,\r\n  GoogleTierIconXs,\r\n  MinIOTierIcon,\r\n  MinIOTierIconXs,\r\n  S3TierIcon,\r\n  S3TierIconXs,\r\n} from \"../../../../icons\";\r\n\r\nexport const minioServiceName = \"minio\";\r\nexport const gcsServiceName = \"gcs\";\r\nexport const s3ServiceName = \"s3\";\r\nexport const azureServiceName = \"azure\";\r\n\r\nexport const tierTypes = [\r\n  {\r\n    serviceName: minioServiceName,\r\n    targetTitle: \"MinIO\",\r\n    logo: <MinIOTierIcon />,\r\n    logoXs: <MinIOTierIconXs />,\r\n  },\r\n  {\r\n    serviceName: gcsServiceName,\r\n    targetTitle: \"Google Cloud Storage\",\r\n    logo: <GoogleTierIcon />,\r\n    logoXs: <GoogleTierIconXs />,\r\n  },\r\n  {\r\n    serviceName: s3ServiceName,\r\n    targetTitle: \"AWS S3\",\r\n    logo: <S3TierIcon />,\r\n    logoXs: <S3TierIconXs />,\r\n  },\r\n  {\r\n    serviceName: azureServiceName,\r\n    targetTitle: \"Azure\",\r\n    logo: <AzureTierIcon />,\r\n    logoXs: <AzureTierIconXs />,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Theme } from \"@mui/material/styles\";\r\n\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    errorBlock: {\r\n      color: theme.palette?.error.main || \"#C83B51\",\r\n    },\r\n  });\r\n\r\ninterface IErrorBlockProps {\r\n  classes: any;\r\n  errorMessage: string;\r\n  withBreak?: boolean;\r\n}\r\n\r\nconst ErrorBlock = ({\r\n  classes,\r\n  errorMessage,\r\n  withBreak = true,\r\n}: IErrorBlockProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      {withBreak && <br />}\r\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\r\n        {errorMessage}\r\n      </Typography>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ErrorBlock);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","label","classes","onChange","id","name","disabled","tooltip","required","error","accept","value","useState","showFileSelector","setShowSelector","Grid","item","xs","className","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","color","component","onClick","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","inputProps","regionList","s3Regions","gcsRegions","azRegions","getRegions","React","setValue","Autocomplete","sx","padding","fontSize","borderColor","borderWidth","freeSolo","selectOnFocus","handleHomeEndKeys","event","newValue","newVal","inputValue","onInputChange","getOptionLabel","option","options","filterOptions","opts","state","filterText","toLowerCase","filter","opt","includes","renderOption","props","Box","display","alignItems","borderBottom","cursor","width","renderInput","params","TextField","fullWidth","inputStyles","makeStyles","inputFieldStyles","flexGrow","position","minWidth","overlayAction","right","top","maxHeight","index","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputClasses","container","clsx","inputBoxContainer","noMinWidthLabel","disableTouchRipple","modalBasic","settingsCommon","formFieldStyles","lambdaNotifTitle","fontFamily","fileInputFieldCss","fileTextBoxContainer","flex","fileReselectCss","dispatch","useAppDispatch","navigate","useNavigate","useParams","saving","setSaving","setName","endpoint","setEndpoint","bucket","setBucket","prefix","setPrefix","region","setRegion","storageClass","setStorageClass","accessKey","setAccessKey","secretKey","setSecretKey","creds","setCreds","encodedCreds","setEncodedCreds","accountName","setAccountName","accountKey","setAccountKey","titleSelection","setTitleSelection","isFormValid","setIsFormValid","nameInputError","setNameInputError","validName","useCallback","test","useEffect","request","fields","tierType","s3","accesskey","secretkey","storageclass","gcs","azure","accountname","accountkey","payload","api","then","IAM_PAGES","catch","err","setErrorSnackMessage","valid","targetElement","tierTypes","serviceName","Fragment","PageHeader","BackLink","to","actions","PageLayout","noValidate","onSubmit","preventDefault","justifyContent","marginBottom","logo","height","targetTitle","gridTemplateColumns","sm","gridAutoFlow","gridRowGap","gridColumnGap","InputBoxWrapper","placeholder","toUpperCase","s3ServiceName","minioServiceName","gcsServiceName","FileSelector","encodedValue","azureServiceName","settingsButtonContainer","Button","variant","logoXs","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
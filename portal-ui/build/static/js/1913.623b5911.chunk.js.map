{"version":3,"file":"static/js/1913.623b5911.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SetAccessPolicy.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Policies/utils.ts","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, SelectChangeEvent } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {\r\n  formFieldStyles,\r\n  modalStyleUtils,\r\n  spacingUtils,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport api from \"../../../../common/api\";\r\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\r\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\r\nimport { ChangeAccessPolicyIcon } from \"../../../../icons\";\r\nimport CodeMirrorWrapper from \"../../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\r\n\r\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\nimport { emptyPolicy } from \"../../Policies/utils\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    codeMirrorContainer: {\r\n      marginBottom: 20,\r\n      \"& label\": {\r\n        marginBottom: \".5rem\",\r\n      },\r\n      \"& label + div\": {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    ...formFieldStyles,\r\n    ...modalStyleUtils,\r\n    ...spacingUtils,\r\n  });\r\ncreateStyles({\r\n  ...modalStyleUtils,\r\n  ...spacingUtils,\r\n});\r\n\r\ninterface ISetAccessPolicyProps {\r\n  classes: any;\r\n  open: boolean;\r\n  bucketName: string;\r\n  actualPolicy: string;\r\n  actualDefinition: string;\r\n  closeModalAndRefresh: () => void;\r\n}\r\n\r\nconst SetAccessPolicy = ({\r\n  classes,\r\n  open,\r\n  bucketName,\r\n  actualPolicy,\r\n  actualDefinition,\r\n  closeModalAndRefresh,\r\n}: ISetAccessPolicyProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [addLoading, setAddLoading] = useState<boolean>(false);\r\n  const [accessPolicy, setAccessPolicy] = useState<string>(\"\");\r\n  const [policyDefinition, setPolicyDefinition] = useState<string>(emptyPolicy);\r\n  const addRecord = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (addLoading) {\r\n      return;\r\n    }\r\n    setAddLoading(true);\r\n    api\r\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/set-policy`, {\r\n        access: accessPolicy,\r\n        definition: policyDefinition,\r\n      })\r\n      .then((res) => {\r\n        setAddLoading(false);\r\n        closeModalAndRefresh();\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setAddLoading(false);\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAccessPolicy(actualPolicy);\r\n    setPolicyDefinition(\r\n      actualDefinition\r\n        ? JSON.stringify(JSON.parse(actualDefinition), null, 4)\r\n        : emptyPolicy\r\n    );\r\n  }, [setAccessPolicy, actualPolicy, setPolicyDefinition, actualDefinition]);\r\n\r\n  return (\r\n    <ModalWrapper\r\n      title=\"Change Access Policy\"\r\n      modalOpen={open}\r\n      onClose={() => {\r\n        closeModalAndRefresh();\r\n      }}\r\n      titleIcon={<ChangeAccessPolicyIcon />}\r\n    >\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\r\n          addRecord(e);\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12} className={classes.modalFormScrollable}>\r\n            <Grid item xs={12} className={classes.formFieldRow}>\r\n              <SelectWrapper\r\n                value={accessPolicy}\r\n                label=\"Access Policy\"\r\n                id=\"select-access-policy\"\r\n                name=\"select-access-policy\"\r\n                onChange={(e: SelectChangeEvent<string>) => {\r\n                  setAccessPolicy(e.target.value as string);\r\n                }}\r\n                options={[\r\n                  { value: \"PRIVATE\", label: \"Private\" },\r\n                  { value: \"PUBLIC\", label: \"Public\" },\r\n                  { value: \"CUSTOM\", label: \"Custom\" },\r\n                ]}\r\n              />\r\n            </Grid>\r\n            {accessPolicy === \"CUSTOM\" && (\r\n              <Grid item xs={12} className={classes.codeMirrorContainer}>\r\n                <CodeMirrorWrapper\r\n                  label={`Write Policy`}\r\n                  value={policyDefinition}\r\n                  onBeforeChange={(editor, data, value) => {\r\n                    setPolicyDefinition(value);\r\n                  }}\r\n                  editorHeight={\"350px\"}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.modalButtonBar}>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                closeModalAndRefresh();\r\n              }}\r\n              disabled={addLoading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={\r\n                addLoading || (accessPolicy === \"CUSTOM\" && !policyDefinition)\r\n              }\r\n            >\r\n              Set\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SetAccessPolicy);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\r\nimport { fieldBasic } from \"../common/styleLibrary\";\r\nimport { CopyIcon } from \"../../../../../icons\";\r\nimport RBIconButton from \"../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport CodeEditor from \"@uiw/react-textarea-code-editor\";\r\n\r\ninterface ICodeWrapper {\r\n  value: string;\r\n  label?: string;\r\n  mode?: string;\r\n  tooltip?: string;\r\n  classes: any;\r\n  onChange?: (editor: any, data: any, value: string) => any;\r\n  onBeforeChange: (editor: any, data: any, value: string) => any;\r\n  readOnly?: boolean;\r\n  editorHeight?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n  });\r\n\r\nconst CodeMirrorWrapper = ({\r\n  value,\r\n  label = \"\",\r\n  tooltip = \"\",\r\n  mode = \"json\",\r\n  classes,\r\n  onBeforeChange,\r\n  readOnly = false,\r\n  editorHeight = \"250px\",\r\n}: ICodeWrapper) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} sx={{ marginBottom: \"10px\" }}>\r\n        <InputLabel className={classes.inputLabel}>\r\n          <span>{label}</span>\r\n          {tooltip !== \"\" && (\r\n            <div className={classes.tooltipContainer}>\r\n              <Tooltip title={tooltip} placement=\"top-start\">\r\n                <div className={classes.tooltip}>\r\n                  <HelpIcon />\r\n                </div>\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n        </InputLabel>\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          maxHeight: editorHeight,\r\n          overflow: \"auto\",\r\n          border: \"1px solid #eaeaea\",\r\n        }}\r\n      >\r\n        <CodeEditor\r\n          value={value}\r\n          language={mode}\r\n          onChange={(evn) => {\r\n            onBeforeChange(null, null, evn.target.value);\r\n          }}\r\n          id={\"code_wrapper\"}\r\n          padding={15}\r\n          style={{\r\n            fontSize: 12,\r\n            backgroundColor: \"#fefefe\",\r\n            fontFamily:\r\n              \"ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace\",\r\n            minHeight: editorHeight || \"initial\",\r\n            color: \"#000000\",\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sx={{\r\n          background: \"#f7f7f7\",\r\n          border: \"1px solid #eaeaea\",\r\n          borderTop: 0,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            padding: \"2px\",\r\n            paddingRight: \"5px\",\r\n            justifyContent: \"flex-end\",\r\n            \"& button\": {\r\n              height: \"26px\",\r\n              width: \"26px\",\r\n              padding: \"2px\",\r\n              \" .min-icon\": {\r\n                marginLeft: \"0\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <CopyToClipboard text={value}>\r\n            <RBIconButton\r\n              tooltip={\"Copy to Clipboard\"}\r\n              onClick={() => {}}\r\n              text={\"\"}\r\n              icon={<CopyIcon />}\r\n              color={\"primary\"}\r\n              variant={\"outlined\"}\r\n            />\r\n          </CopyToClipboard>\r\n        </Box>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CodeMirrorWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nexport const emptyPolicy =\r\n  \"{\\n\" +\r\n  '    \"Version\": \"2012-10-17\",\\n' +\r\n  '    \"Statement\": [\\n' +\r\n  \"        \\n\" +\r\n  \"    ]\\n\" +\r\n  \"}\";\r\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}"],"names":["createStyles","modalStyleUtils","spacingUtils","withStyles","theme","codeMirrorContainer","marginBottom","display","formFieldStyles","classes","open","bucketName","actualPolicy","actualDefinition","closeModalAndRefresh","dispatch","useAppDispatch","useState","addLoading","setAddLoading","accessPolicy","setAccessPolicy","emptyPolicy","policyDefinition","setPolicyDefinition","useEffect","JSON","stringify","parse","title","modalOpen","onClose","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","api","access","definition","then","res","catch","err","setModalErrorSnackMessage","container","item","xs","className","modalFormScrollable","formFieldRow","value","label","id","name","onChange","target","options","onBeforeChange","editor","data","editorHeight","modalButtonBar","type","variant","color","onClick","disabled","fieldBasic","tooltip","mode","readOnly","sx","inputLabel","tooltipContainer","placement","style","maxHeight","overflow","border","language","evn","padding","fontSize","backgroundColor","fontFamily","minHeight","background","borderTop","alignItems","paddingRight","justifyContent","height","width","marginLeft","text","icon","deleteDialogStyles","content","paddingBottom","customDialogSize","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","length","scroll","event","reason","root","titleText","closeContainer","closeButton","disableRipple","size","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","bind","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","writable","configurable","defineProperty","_possibleConstructorReturn","self","call"],"sourceRoot":""}
{"version":3,"file":"static/js/402.56cf1d62.chunk.js","mappings":"yNAgGA,UA9D8B,SAAC,GAKD,IAJ5BA,EAI2B,EAJ3BA,+BACAC,EAG2B,EAH3BA,UACAC,EAE2B,EAF3BA,eACAC,EAC2B,EAD3BA,uBAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkDC,EAAAA,EAAAA,WAAkB,GAApE,eAAOC,EAAP,KAA0BC,EAA1B,KAsBA,OACE,SAAC,IAAD,CACEC,MAAK,uBACLC,YAAaP,EAAyB,UAAY,SAClDQ,OAAQV,EACRW,UAAWL,EACXM,WAAW,SAAC,MAAD,IACXC,UA3BqB,WACnBP,IAGJC,GAAqB,GAErBO,EAAAA,EAAAA,OACU,MADV,0BACoCb,EADpC,eACiE,CAC7Dc,YAAab,IAEdc,MAAK,WACJT,GAAqB,GACrBR,GAA+B,EAChC,IACAkB,OAAM,SAACC,GACNX,GAAqB,GACrBJ,GAASgB,EAAAA,EAAAA,IAAqBD,GAC/B,IACJ,EAUGE,mBAAoB,CAClBC,MAAO,UACPC,QAAS,aAEXC,QAAS,WACPxB,GAA+B,EAChC,EACDyB,qBACE,UAAC,IAAD,CAAmBC,GAAG,2BAAtB,qCAC2B,KACzB,4BAASvB,EAAyB,UAAY,WAAmB,IAFnE,8BAIGA,IACC,UAAC,EAAAwB,SAAD,YACE,mBACA,mBACA,qFAOb,C","sources":["screens/Console/Buckets/BucketDetails/EnableVersioningModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { DialogContentText } from \"@mui/material\";\r\nimport api from \"../../../../common/api\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\r\nimport { ConfirmModalIcon } from \"../../../../icons\";\r\n\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\ninterface IVersioningEventProps {\r\n  closeVersioningModalAndRefresh: (refresh: boolean) => void;\r\n  modalOpen: boolean;\r\n  selectedBucket: string;\r\n  versioningCurrentState: boolean;\r\n}\r\n\r\nconst EnableVersioningModal = ({\r\n  closeVersioningModalAndRefresh,\r\n  modalOpen,\r\n  selectedBucket,\r\n  versioningCurrentState,\r\n}: IVersioningEventProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [versioningLoading, setVersioningLoading] = useState<boolean>(false);\r\n\r\n  const enableVersioning = () => {\r\n    if (versioningLoading) {\r\n      return;\r\n    }\r\n    setVersioningLoading(true);\r\n\r\n    api\r\n      .invoke(\"PUT\", `/api/v1/buckets/${selectedBucket}/versioning`, {\r\n        versioning: !versioningCurrentState,\r\n      })\r\n      .then(() => {\r\n        setVersioningLoading(false);\r\n        closeVersioningModalAndRefresh(true);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setVersioningLoading(false);\r\n        dispatch(setErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ConfirmDialog\r\n      title={`Versioning on Bucket`}\r\n      confirmText={versioningCurrentState ? \"Disable\" : \"Enable\"}\r\n      isOpen={modalOpen}\r\n      isLoading={versioningLoading}\r\n      titleIcon={<ConfirmModalIcon />}\r\n      onConfirm={enableVersioning}\r\n      confirmButtonProps={{\r\n        color: \"primary\",\r\n        variant: \"contained\",\r\n      }}\r\n      onClose={() => {\r\n        closeVersioningModalAndRefresh(false);\r\n      }}\r\n      confirmationContent={\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          Are you sure you want to{\" \"}\r\n          <strong>{versioningCurrentState ? \"disable\" : \"enable\"}</strong>{\" \"}\r\n          versioning for this bucket?\r\n          {versioningCurrentState && (\r\n            <Fragment>\r\n              <br />\r\n              <br />\r\n              <strong>File versions won't be automatically deleted.</strong>\r\n            </Fragment>\r\n          )}\r\n        </DialogContentText>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default EnableVersioningModal;\r\n"],"names":["closeVersioningModalAndRefresh","modalOpen","selectedBucket","versioningCurrentState","dispatch","useAppDispatch","useState","versioningLoading","setVersioningLoading","title","confirmText","isOpen","isLoading","titleIcon","onConfirm","api","versioning","then","catch","err","setErrorSnackMessage","confirmButtonProps","color","variant","onClose","confirmationContent","id","Fragment"],"sourceRoot":""}
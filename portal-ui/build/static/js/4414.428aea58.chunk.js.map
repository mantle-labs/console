{"version":3,"file":"static/js/4414.428aea58.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Configurations/TiersConfiguration/UpdateTierCredentialsModal.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState } from \"react\";\r\nimport get from \"lodash/get\";\r\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  fieldBasic,\r\n  fileInputStyles,\r\n  tooltipHelper,\r\n} from \"../common/styleLibrary\";\r\nimport { fileProcess } from \"./utils\";\r\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\r\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\r\n\r\ninterface InputBoxProps {\r\n  label: string;\r\n  classes: any;\r\n  onChange: (e: string, i: string) => void;\r\n  id: string;\r\n  name: string;\r\n  disabled?: boolean;\r\n  tooltip?: string;\r\n  required?: boolean;\r\n  error?: string;\r\n  accept?: string;\r\n  value?: string;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n    valueString: {\r\n      maxWidth: 350,\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      marginTop: 2,\r\n    },\r\n    fileInputField: {\r\n      margin: \"13px 0\",\r\n      \"@media (max-width: 900px)\": {\r\n        flexFlow: \"column\",\r\n      },\r\n    },\r\n    ...fileInputStyles,\r\n    inputLabel: {\r\n      ...fieldBasic.inputLabel,\r\n      fontWeight: \"normal\",\r\n    },\r\n    textBoxContainer: {\r\n      ...fieldBasic.textBoxContainer,\r\n      maxWidth: \"100%\",\r\n      border: \"1px solid #eaeaea\",\r\n      paddingLeft: \"15px\",\r\n    },\r\n  });\r\n\r\nconst FileSelector = ({\r\n  label,\r\n  classes,\r\n  onChange,\r\n  id,\r\n  name,\r\n  disabled = false,\r\n  tooltip = \"\",\r\n  required,\r\n  error = \"\",\r\n  accept = \"\",\r\n  value = \"\",\r\n}: InputBoxProps) => {\r\n  const [showFileSelector, setShowSelector] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\r\n          classes.fieldContainer\r\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\r\n      >\r\n        {label !== \"\" && (\r\n          <InputLabel\r\n            htmlFor={id}\r\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\r\n              classes.inputLabel\r\n            }`}\r\n          >\r\n            <span>\r\n              {label}\r\n              {required ? \"*\" : \"\"}\r\n            </span>\r\n            {tooltip !== \"\" && (\r\n              <div className={classes.tooltipContainer}>\r\n                <Tooltip title={tooltip} placement=\"top-start\">\r\n                  <div className={classes.tooltip}>\r\n                    <HelpIcon />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </InputLabel>\r\n        )}\r\n\r\n        {showFileSelector || value === \"\" ? (\r\n          <div className={classes.textBoxContainer}>\r\n            <input\r\n              type=\"file\"\r\n              name={name}\r\n              onChange={(e) => {\r\n                const fileName = get(e, \"target.files[0].name\", \"\");\r\n                fileProcess(e, (data: any) => {\r\n                  onChange(data, fileName);\r\n                });\r\n              }}\r\n              accept={accept}\r\n              required={required}\r\n              disabled={disabled}\r\n              className={classes.fileInputField}\r\n            />\r\n\r\n            {value !== \"\" && (\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                onClick={() => {\r\n                  setShowSelector(false);\r\n                }}\r\n                disableRipple={false}\r\n                disableFocusRipple={false}\r\n                size=\"small\"\r\n              >\r\n                <CancelIcon />\r\n              </IconButton>\r\n            )}\r\n\r\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\r\n          </div>\r\n        ) : (\r\n          <div className={classes.fileReselect}>\r\n            <div className={classes.valueString}>{value}</div>\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n              onClick={() => {\r\n                setShowSelector(true);\r\n              }}\r\n              disableRipple={false}\r\n              disableFocusRipple={false}\r\n              size=\"small\"\r\n            >\r\n              <AttachFileIcon />\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(FileSelector);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nexport const fileProcess = (evt: any, callback: any) => {\r\n  const file = evt.target.files[0];\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(file);\r\n\r\n  reader.onload = () => {\r\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\r\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\r\n    const fileBase64 = reader.result;\r\n    if (fileBase64) {\r\n      const fileArray = fileBase64.toString().split(\"base64,\");\r\n\r\n      if (fileArray.length === 2) {\r\n        callback(fileArray[1]);\r\n      }\r\n    }\r\n  };\r\n};\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport get from \"lodash/get\";\r\n\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport { Button, LinearProgress } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {\r\n  formFieldStyles,\r\n  modalBasic,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\r\nimport api from \"../../../../common/api\";\r\nimport { ITierElement } from \"./types\";\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\r\nimport { LockIcon } from \"../../../../icons\";\r\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\ninterface ITierCredentialsModal {\r\n  open: boolean;\r\n  closeModalAndRefresh: (refresh: boolean) => any;\r\n  classes: any;\r\n  tierData: ITierElement;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    buttonContainer: {\r\n      textAlign: \"right\",\r\n    },\r\n    ...modalBasic,\r\n    ...formFieldStyles,\r\n  });\r\n\r\nconst UpdateTierCredentialsModal = ({\r\n  open,\r\n  closeModalAndRefresh,\r\n  classes,\r\n  tierData,\r\n}: ITierCredentialsModal) => {\r\n  const dispatch = useAppDispatch();\r\n  const [savingTiers, setSavingTiers] = useState<boolean>(false);\r\n  const [accessKey, setAccessKey] = useState<string>(\"\");\r\n  const [secretKey, setSecretKey] = useState<string>(\"\");\r\n\r\n  const [creds, setCreds] = useState<string>(\"\");\r\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\r\n\r\n  const [accountName, setAccountName] = useState<string>(\"\");\r\n  const [accountKey, setAccountKey] = useState<string>(\"\");\r\n\r\n  // Validations\r\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\r\n\r\n  const type = get(tierData, \"type\", \"\");\r\n  const name = get(tierData, `${type}.name`, \"\");\r\n\r\n  useEffect(() => {\r\n    let valid = true;\r\n\r\n    if (type === \"s3\" || type === \"azure\") {\r\n      if (accountName === \"\" || accountKey === \"\") {\r\n        valid = false;\r\n      }\r\n    } else if (type === \"gcs\") {\r\n      if (encodedCreds === \"\") {\r\n        valid = false;\r\n      }\r\n    }\r\n    setIsFormValid(valid);\r\n  }, [accountKey, accountName, encodedCreds, type]);\r\n\r\n  const addRecord = () => {\r\n    let rules = {};\r\n\r\n    if (type === \"s3\" || type === \"azure\") {\r\n      rules = {\r\n        access_key: accountName,\r\n        secret_key: accountKey,\r\n      };\r\n    } else if (type === \"gcs\") {\r\n      rules = {\r\n        creds: encodedCreds,\r\n      };\r\n    }\r\n    if (name !== \"\") {\r\n      api\r\n        .invoke(\"PUT\", `/api/v1/admin/tiers/${type}/${name}/credentials`, rules)\r\n        .then(() => {\r\n          setSavingTiers(false);\r\n          closeModalAndRefresh(true);\r\n        })\r\n        .catch((err: ErrorResponseHandler) => {\r\n          setSavingTiers(false);\r\n          dispatch(setModalErrorSnackMessage(err));\r\n        });\r\n    } else {\r\n      setModalErrorSnackMessage({\r\n        errorMessage: \"There was an error retrieving tier information\",\r\n        detailedError: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalWrapper\r\n      modalOpen={open}\r\n      titleIcon={<LockIcon />}\r\n      onClose={() => {\r\n        closeModalAndRefresh(false);\r\n      }}\r\n      title={`Update Credentials - ${type} / ${name}`}\r\n    >\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\r\n          e.preventDefault();\r\n          setSavingTiers(true);\r\n          addRecord();\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            {type === \"s3\" && (\r\n              <Fragment>\r\n                <div className={classes.formFieldRow}>\r\n                  <InputBoxWrapper\r\n                    id=\"accessKey\"\r\n                    name=\"accessKey\"\r\n                    label=\"Access Key\"\r\n                    placeholder=\"Enter Access Key\"\r\n                    value={accessKey}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setAccessKey(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={classes.formFieldRow}>\r\n                  <InputBoxWrapper\r\n                    id=\"secretKey\"\r\n                    name=\"secretKey\"\r\n                    label=\"Secret Key\"\r\n                    placeholder=\"Enter Secret Key\"\r\n                    value={secretKey}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setSecretKey(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n            {type === \"gcs\" && (\r\n              <Fragment>\r\n                <FileSelector\r\n                  accept=\".json\"\r\n                  id=\"creds\"\r\n                  label=\"Credentials\"\r\n                  name=\"creds\"\r\n                  onChange={(encodedValue, fileName) => {\r\n                    setEncodedCreds(encodedValue);\r\n                    setCreds(fileName);\r\n                  }}\r\n                  value={creds}\r\n                />\r\n              </Fragment>\r\n            )}\r\n            {type === \"azure\" && (\r\n              <Fragment>\r\n                <div className={classes.formFieldRow}>\r\n                  <InputBoxWrapper\r\n                    id=\"accountName\"\r\n                    name=\"accountName\"\r\n                    label=\"Account Name\"\r\n                    placeholder=\"Enter Account Name\"\r\n                    value={accountName}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setAccountName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={classes.formFieldRow}>\r\n                  <InputBoxWrapper\r\n                    id=\"accountKey\"\r\n                    name=\"accountKey\"\r\n                    label=\"Account Key\"\r\n                    placeholder=\"Enter Account Key\"\r\n                    value={accountKey}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      setAccountKey(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.buttonContainer}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={savingTiers || !isFormValid}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          {savingTiers && (\r\n            <Grid item xs={12}>\r\n              <LinearProgress />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(UpdateTierCredentialsModal);\r\n","import React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Theme } from \"@mui/material/styles\";\r\n\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    errorBlock: {\r\n      color: theme.palette?.error.main || \"#C83B51\",\r\n    },\r\n  });\r\n\r\ninterface IErrorBlockProps {\r\n  classes: any;\r\n  errorMessage: string;\r\n  withBreak?: boolean;\r\n}\r\n\r\nconst ErrorBlock = ({\r\n  classes,\r\n  errorMessage,\r\n  withBreak = true,\r\n}: IErrorBlockProps) => {\r\n  return (\r\n    <React.Fragment>\r\n      {withBreak && <br />}\r\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\r\n        {errorMessage}\r\n      </Typography>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ErrorBlock);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","label","classes","onChange","id","name","disabled","tooltip","required","error","accept","value","useState","showFileSelector","setShowSelector","Grid","item","xs","className","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","color","component","onClick","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","deleteDialogStyles","content","padding","paddingBottom","customDialogSize","width","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","open","scroll","event","reason","root","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","buttonContainer","textAlign","modalBasic","formFieldStyles","closeModalAndRefresh","tierData","savingTiers","setSavingTiers","accessKey","setAccessKey","secretKey","setSecretKey","creds","setCreds","encodedCreds","setEncodedCreds","accountName","setAccountName","accountKey","setAccountKey","isFormValid","setIsFormValid","valid","noValidate","autoComplete","onSubmit","preventDefault","rules","access_key","secret_key","api","then","catch","err","setModalErrorSnackMessage","detailedError","addRecord","container","Fragment","formFieldRow","placeholder","encodedValue","variant","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
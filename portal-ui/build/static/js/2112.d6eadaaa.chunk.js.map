{"version":3,"file":"static/js/2112.d6eadaaa.chunk.js","mappings":"8OAkGA,UA/DkB,SAAC,GAIA,IAHjBA,EAGgB,EAHhBA,WACAC,EAEgB,EAFhBA,YACAC,EACgB,EADhBA,2BAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAOA,GAAyCC,EAAAA,EAAAA,IALpB,kBAAMN,GAA2B,EAAjC,IACF,SAACO,GAAD,OACjBN,GAASO,EAAAA,EAAAA,IAAqBD,GADb,IAInB,eAAOE,EAAP,KAAsBC,EAAtB,KAkBA,OACE,SAAC,IAAD,CACEC,MAAK,aACLC,YAAa,SACbC,OAAQf,EACRgB,WAAW,SAAC,MAAD,IACXC,UAAWN,EACXO,UAvBoB,WAClBZ,IAAcL,EAAYkB,KAS9BP,EACE,SADa,6BAESX,EAAYmB,UAFrB,oBAE0CnB,EAAYoB,OAFtD,gBAEoEpB,EAAYkB,OAV7FhB,GACEO,EAAAA,EAAAA,IAAqB,CACnBY,aAAc,wBACdC,cAAe,KAStB,EAUGC,QA5BY,kBAAMtB,GAA2B,EAAjC,EA6BZuB,mBAAoB,CAClBC,SAAUpB,IAAcL,EAAYkB,MAAQR,GAE9CgB,qBACE,UAAC,IAAD,uCAC0B,uBAAI1B,EAAYkB,OAD1C,gBAEE,SAAC,KAAD,CAAMS,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,GAAG,aACHX,KAAK,aACLY,SAAU,SAACC,GACTzB,EAAayB,EAAMC,OAAOC,MAC3B,EACDC,MAAM,GACND,MAAO5B,UAOpB,C","sources":["screens/Console/Tenants/TenantDetails/DeletePVC.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { useState } from \"react\";\r\nimport { DialogContentText } from \"@mui/material\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport useApi from \"../../Common/Hooks/useApi\";\r\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\r\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\r\nimport { IStoragePVCs } from \"../../Storage/types\";\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\ninterface IDeletePVC {\r\n  deleteOpen: boolean;\r\n  selectedPVC: IStoragePVCs;\r\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\r\n}\r\n\r\nconst DeletePVC = ({\r\n  deleteOpen,\r\n  selectedPVC,\r\n  closeDeleteModalAndRefresh,\r\n}: IDeletePVC) => {\r\n  const dispatch = useAppDispatch();\r\n  const [retypePVC, setRetypePVC] = useState(\"\");\r\n\r\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\r\n  const onDelError = (err: ErrorResponseHandler) =>\r\n    dispatch(setErrorSnackMessage(err));\r\n  const onClose = () => closeDeleteModalAndRefresh(false);\r\n\r\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\r\n\r\n  const onConfirmDelete = () => {\r\n    if (retypePVC !== selectedPVC.name) {\r\n      dispatch(\r\n        setErrorSnackMessage({\r\n          errorMessage: \"PVC name is incorrect\",\r\n          detailedError: \"\",\r\n        })\r\n      );\r\n      return;\r\n    }\r\n    invokeDeleteApi(\r\n      \"DELETE\",\r\n      `/api/v1/namespaces/${selectedPVC.namespace}/tenants/${selectedPVC.tenant}/pvc/${selectedPVC.name}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ConfirmDialog\r\n      title={`Delete PVC`}\r\n      confirmText={\"Delete\"}\r\n      isOpen={deleteOpen}\r\n      titleIcon={<ConfirmDeleteIcon />}\r\n      isLoading={deleteLoading}\r\n      onConfirm={onConfirmDelete}\r\n      onClose={onClose}\r\n      confirmButtonProps={{\r\n        disabled: retypePVC !== selectedPVC.name || deleteLoading,\r\n      }}\r\n      confirmationContent={\r\n        <DialogContentText>\r\n          To continue please type <b>{selectedPVC.name}</b> in the box.\r\n          <Grid item xs={12}>\r\n            <InputBoxWrapper\r\n              id=\"retype-PVC\"\r\n              name=\"retype-PVC\"\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                setRetypePVC(event.target.value);\r\n              }}\r\n              label=\"\"\r\n              value={retypePVC}\r\n            />\r\n          </Grid>\r\n        </DialogContentText>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeletePVC;\r\n"],"names":["deleteOpen","selectedPVC","closeDeleteModalAndRefresh","dispatch","useAppDispatch","useState","retypePVC","setRetypePVC","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","name","namespace","tenant","errorMessage","detailedError","onClose","confirmButtonProps","disabled","confirmationContent","item","xs","id","onChange","event","target","value","label"],"sourceRoot":""}
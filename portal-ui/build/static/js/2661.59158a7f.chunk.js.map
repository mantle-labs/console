{"version":3,"file":"static/js/2661.59158a7f.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper.tsx","screens/Console/Buckets/BucketDetails/AddEvent.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInputProps,\r\n  TextField,\r\n  TextFieldProps,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport makeStyles from \"@mui/styles/makeStyles\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  fieldBasic,\r\n  inputFieldStyles,\r\n  tooltipHelper,\r\n} from \"../common/styleLibrary\";\r\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\r\n\r\ninterface selectorTypes {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface SelectProps {\r\n  options: selectorTypes[];\r\n  value: string;\r\n  label: string;\r\n  id: string;\r\n  name: string;\r\n  tooltip?: string;\r\n  onChange: (returnedValue: string) => void;\r\n  disabled?: boolean;\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...fieldBasic,\r\n    ...tooltipHelper,\r\n  });\r\n\r\nconst inputStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    ...inputFieldStyles,\r\n  })\r\n);\r\n\r\nfunction InputField(props: TextFieldProps) {\r\n  const classes = inputStyles();\r\n\r\n  return (\r\n    <TextField\r\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst AutocompleteWrapper = ({\r\n  classes,\r\n  id,\r\n  name,\r\n  onChange,\r\n  options,\r\n  label,\r\n  tooltip = \"\",\r\n  value,\r\n  disabled = false,\r\n}: SelectProps) => {\r\n  const [internalValue, setInternalValue] = useState<selectorTypes>(options[0]);\r\n\r\n  const executeOnSelect = (_: any, selectedValue: any) => {\r\n    if (selectedValue) {\r\n      onChange(selectedValue.value);\r\n      setInternalValue(selectedValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} className={classes.fieldContainer}>\r\n        {label !== \"\" && (\r\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\r\n            <span>{label}</span>\r\n            {tooltip !== \"\" && (\r\n              <div className={classes.tooltipContainer}>\r\n                <Tooltip title={tooltip} placement=\"top-start\">\r\n                  <div className={classes.tooltip}>\r\n                    <HelpIcon />\r\n                  </div>\r\n                </Tooltip>\r\n              </div>\r\n            )}\r\n          </InputLabel>\r\n        )}\r\n        <FormControl fullWidth>\r\n          <Autocomplete\r\n            id={id}\r\n            options={options}\r\n            getOptionLabel={(option) => option.label}\r\n            isOptionEqualToValue={(option) => option.value === value}\r\n            disabled={disabled}\r\n            renderInput={(params) => <InputField {...params} name={name} />}\r\n            value={internalValue}\r\n            onChange={executeOnSelect}\r\n            autoHighlight\r\n          />\r\n        </FormControl>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AutocompleteWrapper);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, { ChangeEvent, useCallback, useEffect, useState } from \"react\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Button } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport api from \"../../../../common/api\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Table from \"@mui/material/Table\";\r\nimport { ArnList } from \"../types\";\r\nimport {\r\n  formFieldStyles,\r\n  modalStyleUtils,\r\n} from \"../../Common/FormComponents/common/styleLibrary\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\r\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\r\nimport AutocompleteWrapper from \"../../Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper\";\r\nimport { EventSubscriptionIcon } from \"../../../../icons\";\r\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    arnField: {\r\n      \"& div div .MuiOutlinedInput-root\": {\r\n        padding: 0,\r\n      },\r\n    },\r\n    ...formFieldStyles,\r\n    ...modalStyleUtils,\r\n  });\r\n\r\ninterface IAddEventProps {\r\n  classes: any;\r\n  open: boolean;\r\n  selectedBucket: string;\r\n  closeModalAndRefresh: () => void;\r\n}\r\n\r\nconst AddEvent = ({\r\n  classes,\r\n  open,\r\n  selectedBucket,\r\n  closeModalAndRefresh,\r\n}: IAddEventProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [addLoading, setAddLoading] = useState<boolean>(false);\r\n  const [prefix, setPrefix] = useState<string>(\"\");\r\n  const [suffix, setSuffix] = useState<string>(\"\");\r\n  const [arn, setArn] = useState<string>(\"\");\r\n  const [selectedEvents, setSelectedEvents] = useState<string[]>([]);\r\n  const [arnList, setArnList] = useState<string[]>([]);\r\n\r\n  const addRecord = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (addLoading) {\r\n      return;\r\n    }\r\n    setAddLoading(true);\r\n    api\r\n      .invoke(\"POST\", `/api/v1/buckets/${selectedBucket}/events`, {\r\n        configuration: {\r\n          arn: arn,\r\n          events: selectedEvents,\r\n          prefix: prefix,\r\n          suffix: suffix,\r\n        },\r\n        ignoreExisting: true,\r\n      })\r\n      .then(() => {\r\n        setAddLoading(false);\r\n        closeModalAndRefresh();\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setAddLoading(false);\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  };\r\n\r\n  const fetchArnList = useCallback(() => {\r\n    setAddLoading(true);\r\n    api\r\n      .invoke(\"GET\", `/api/v1/admin/arns`)\r\n      .then((res: ArnList) => {\r\n        let arns: string[] = [];\r\n        if (res.arns !== null) {\r\n          arns = res.arns;\r\n        }\r\n        setAddLoading(false);\r\n        setArnList(arns);\r\n      })\r\n      .catch((err: ErrorResponseHandler) => {\r\n        setAddLoading(false);\r\n        dispatch(setModalErrorSnackMessage(err));\r\n      });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    fetchArnList();\r\n  }, [fetchArnList]);\r\n\r\n  const events = [\r\n    { label: \"PUT - Object Uploaded\", value: \"put\" },\r\n    { label: \"GET - Object accessed\", value: \"get\" },\r\n    { label: \"DELETE - Object Deleted\", value: \"delete\" },\r\n  ];\r\n\r\n  const handleClick = (\r\n    event: React.MouseEvent<unknown> | ChangeEvent<unknown>,\r\n    name: string\r\n  ) => {\r\n    const selectedIndex = selectedEvents.indexOf(name);\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selectedEvents, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selectedEvents.slice(1));\r\n    } else if (selectedIndex === selectedEvents.length - 1) {\r\n      newSelected = newSelected.concat(selectedEvents.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selectedEvents.slice(0, selectedIndex),\r\n        selectedEvents.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelectedEvents(newSelected);\r\n  };\r\n\r\n  const arnValues = arnList.map((arnConstant) => ({\r\n    label: arnConstant,\r\n    value: arnConstant,\r\n  }));\r\n\r\n  return (\r\n    <ModalWrapper\r\n      modalOpen={open}\r\n      onClose={() => {\r\n        closeModalAndRefresh();\r\n      }}\r\n      title=\"Subscribe To Bucket Events\"\r\n      titleIcon={<EventSubscriptionIcon />}\r\n    >\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\r\n          addRecord(e);\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12} className={classes.formScrollable}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              className={`${classes.arnField} ${classes.formFieldRow}`}\r\n            >\r\n              <AutocompleteWrapper\r\n                onChange={(value: string) => {\r\n                  setArn(value);\r\n                }}\r\n                id=\"select-access-policy\"\r\n                name=\"select-access-policy\"\r\n                label={\"ARN\"}\r\n                value={arn}\r\n                options={arnValues}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.formFieldRow}>\r\n              <InputBoxWrapper\r\n                id=\"prefix-input\"\r\n                name=\"prefix-input\"\r\n                label=\"Prefix\"\r\n                value={prefix}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setPrefix(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.formFieldRow}>\r\n              <InputBoxWrapper\r\n                id=\"suffix-input\"\r\n                name=\"suffix-input\"\r\n                label=\"Suffix\"\r\n                value={suffix}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setSuffix(e.target.value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.formFieldRow}>\r\n              <Table size=\"medium\">\r\n                <TableHead className={classes.minTableHeader}>\r\n                  <TableRow>\r\n                    <TableCell>Select</TableCell>\r\n                    <TableCell>Event</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {events.map((row) => (\r\n                    <TableRow\r\n                      key={`group-${row.value}`}\r\n                      onClick={(event) => handleClick(event, row.value)}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          value={row.value}\r\n                          color=\"primary\"\r\n                          inputProps={{\r\n                            \"aria-label\": \"secondary checkbox\",\r\n                          }}\r\n                          onChange={(event) => handleClick(event, row.value)}\r\n                          checked={selectedEvents.includes(row.value)}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell className={classes.wrapCell}>\r\n                        {row.label}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.modalButtonBar}>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              disabled={addLoading}\r\n              onClick={() => {\r\n                closeModalAndRefresh();\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={addLoading}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </ModalWrapper>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AddEvent);\r\n","// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { Theme } from \"@mui/material/styles\";\r\nimport createStyles from \"@mui/styles/createStyles\";\r\nimport withStyles from \"@mui/styles/withStyles\";\r\nimport {\r\n  deleteDialogStyles,\r\n  snackBarCommon,\r\n} from \"../FormComponents/common/styleLibrary\";\r\nimport { AppState, useAppDispatch } from \"../../../../store\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport MainError from \"../MainError/MainError\";\r\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\r\n\r\ninterface IModalProps {\r\n  classes: any;\r\n  onClose: () => void;\r\n  modalOpen: boolean;\r\n  title: string | React.ReactNode;\r\n  children: any;\r\n  wideLimit?: boolean;\r\n  noContentPadding?: boolean;\r\n  titleIcon?: React.ReactNode;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    ...deleteDialogStyles,\r\n    content: {\r\n      padding: 25,\r\n      paddingBottom: 0,\r\n    },\r\n    customDialogSize: {\r\n      width: \"100%\",\r\n      maxWidth: 765,\r\n    },\r\n    ...snackBarCommon,\r\n  });\r\n\r\nconst ModalWrapper = ({\r\n  onClose,\r\n  modalOpen,\r\n  title,\r\n  children,\r\n  classes,\r\n  wideLimit = true,\r\n  noContentPadding,\r\n  titleIcon = null,\r\n}: IModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\r\n\r\n  const modalSnackMessage = useSelector(\r\n    (state: AppState) => state.system.modalSnackBar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (modalSnackMessage) {\r\n      if (modalSnackMessage.message === \"\") {\r\n        setOpenSnackbar(false);\r\n        return;\r\n      }\r\n      // Open SnackBar\r\n      if (modalSnackMessage.type !== \"error\") {\r\n        setOpenSnackbar(true);\r\n      }\r\n    }\r\n  }, [modalSnackMessage]);\r\n\r\n  const closeSnackBar = () => {\r\n    setOpenSnackbar(false);\r\n    dispatch(setModalSnackMessage(\"\"));\r\n  };\r\n\r\n  const customSize = wideLimit\r\n    ? {\r\n        classes: {\r\n          paper: classes.customDialogSize,\r\n        },\r\n      }\r\n    : { maxWidth: \"lg\" as const, fullWidth: true };\r\n\r\n  let message = \"\";\r\n\r\n  if (modalSnackMessage) {\r\n    message = modalSnackMessage.detailedErrorMsg;\r\n    if (\r\n      modalSnackMessage.detailedErrorMsg === \"\" ||\r\n      modalSnackMessage.detailedErrorMsg.length < 5\r\n    ) {\r\n      message = modalSnackMessage.message;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={modalOpen}\r\n      classes={classes}\r\n      {...customSize}\r\n      scroll={\"paper\"}\r\n      onClose={(event, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n          onClose(); // close on Esc but not on click outside\r\n        }\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle className={classes.title}>\r\n        <div className={classes.titleText}>\r\n          {titleIcon} {title}\r\n        </div>\r\n        <div className={classes.closeContainer}>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            id={\"close\"}\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n            disableRipple\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <MainError isModal={true} />\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        className={classes.snackBarModal}\r\n        onClose={() => {\r\n          closeSnackBar();\r\n        }}\r\n        message={message}\r\n        ContentProps={{\r\n          className: `${classes.snackBar} ${\r\n            modalSnackMessage && modalSnackMessage.type === \"error\"\r\n              ? classes.errorSnackBar\r\n              : \"\"\r\n          }`,\r\n        }}\r\n        autoHideDuration={\r\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\r\n        }\r\n      />\r\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(ModalWrapper);\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","TextField","InputProps","withStyles","fieldBasic","tooltipHelper","id","name","onChange","options","label","tooltip","value","disabled","useState","internalValue","setInternalValue","Grid","item","xs","className","fieldContainer","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","FormControl","fullWidth","Autocomplete","getOptionLabel","option","isOptionEqualToValue","renderInput","params","_","selectedValue","autoHighlight","arnField","padding","formFieldStyles","modalStyleUtils","open","selectedBucket","closeModalAndRefresh","dispatch","useAppDispatch","addLoading","setAddLoading","prefix","setPrefix","suffix","setSuffix","arn","setArn","selectedEvents","setSelectedEvents","arnList","setArnList","fetchArnList","useCallback","api","then","res","arns","catch","err","setModalErrorSnackMessage","useEffect","handleClick","event","selectedIndex","indexOf","newSelected","concat","slice","length","arnValues","map","arnConstant","ModalWrapper","modalOpen","onClose","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","configuration","events","ignoreExisting","container","formScrollable","formFieldRow","InputBoxWrapper","target","Table","size","TableHead","minTableHeader","TableRow","TableCell","TableBody","row","onClick","Checkbox","color","inputProps","checked","includes","wrapCell","modalButtonBar","Button","type","variant","deleteDialogStyles","content","paddingBottom","customDialogSize","width","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","setModalSnackMessage","message","customSize","paper","detailedErrorMsg","scroll","reason","root","titleText","closeContainer","closeButton","disableRipple","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","overridesResolver","styles","display","tablelvl2","defaultComponent","React","inProps","ref","useThemeProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","useUtilityClasses","_jsx","Tablelvl2Context","as","clsx","role"],"sourceRoot":""}
{"version":3,"file":"static/js/455.ae9e0193.chunk.js","mappings":"4OA4FA,UAxDoB,SAAC,GAKK,IAJxBA,EAIuB,EAJvBA,2BACAC,EAGuB,EAHvBA,WACAC,EAEuB,EAFvBA,eACAC,EACuB,EADvBA,YAEMC,GAAWC,EAAAA,EAAAA,MAMjB,GAAyCC,EAAAA,EAAAA,IALpB,kBAAMN,GAA2B,EAAjC,IACF,SAACO,GAAD,OACjBH,GAASI,EAAAA,EAAAA,IAAqBD,GADb,IAInB,eAAOE,EAAP,KAAsBC,EAAtB,KAEA,IAAKR,EACH,OAAO,KAuBT,OACE,SAAC,IAAD,CACES,MAAK,eACLC,YAAa,SACbC,OAAQZ,EACRa,WAAW,SAAC,MAAD,IACXC,UAAWN,EACXO,UA3BoB,WACtB,GAAoB,OAAhBb,EAAJ,CAIA,IAAMc,EAASC,IAAIf,EAAa,SAAU,IACpCgB,EAASD,IAAIf,EAAa,SAAU,IACpCiB,EAASF,IAAIf,EAAa,SAAU,IAE1CO,EACE,SADa,0BAEMR,EAFN,mBAE+BC,EAAYkB,KACxD,CACEJ,OAAAA,EACAE,OAAAA,EACAC,OAAAA,GAZH,CAeF,EAUGE,QApCY,kBAAMtB,GAA2B,EAAjC,EAqCZuB,qBACE,SAAC,IAAD,2DAMP,C","sources":["screens/Console/Buckets/BucketDetails/DeleteEvent.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\r\n// Copyright (c) 2021 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport get from \"lodash/get\";\r\n\r\nimport { DialogContentText } from \"@mui/material\";\r\nimport { BucketEvent } from \"../types\";\r\n\r\nimport { ErrorResponseHandler } from \"../../../../common/types\";\r\nimport useApi from \"../../Common/Hooks/useApi\";\r\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\r\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\r\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\r\nimport { useAppDispatch } from \"../../../../store\";\r\n\r\ninterface IDeleteEventProps {\r\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\r\n  deleteOpen: boolean;\r\n  selectedBucket: string;\r\n  bucketEvent: BucketEvent | null;\r\n}\r\n\r\nconst DeleteEvent = ({\r\n  closeDeleteModalAndRefresh,\r\n  deleteOpen,\r\n  selectedBucket,\r\n  bucketEvent,\r\n}: IDeleteEventProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\r\n  const onDelError = (err: ErrorResponseHandler) =>\r\n    dispatch(setErrorSnackMessage(err));\r\n  const onClose = () => closeDeleteModalAndRefresh(false);\r\n\r\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\r\n\r\n  if (!selectedBucket) {\r\n    return null;\r\n  }\r\n\r\n  const onConfirmDelete = () => {\r\n    if (bucketEvent === null) {\r\n      return;\r\n    }\r\n\r\n    const events = get(bucketEvent, \"events\", []);\r\n    const prefix = get(bucketEvent, \"prefix\", \"\");\r\n    const suffix = get(bucketEvent, \"suffix\", \"\");\r\n\r\n    invokeDeleteApi(\r\n      \"DELETE\",\r\n      `/api/v1/buckets/${selectedBucket}/events/${bucketEvent.arn}`,\r\n      {\r\n        events,\r\n        prefix,\r\n        suffix,\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ConfirmDialog\r\n      title={`Delete Event`}\r\n      confirmText={\"Delete\"}\r\n      isOpen={deleteOpen}\r\n      titleIcon={<ConfirmDeleteIcon />}\r\n      isLoading={deleteLoading}\r\n      onConfirm={onConfirmDelete}\r\n      onClose={onClose}\r\n      confirmationContent={\r\n        <DialogContentText>\r\n          Are you sure you want to delete this event?\r\n        </DialogContentText>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeleteEvent;\r\n"],"names":["closeDeleteModalAndRefresh","deleteOpen","selectedBucket","bucketEvent","dispatch","useAppDispatch","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","events","get","prefix","suffix","arn","onClose","confirmationContent"],"sourceRoot":""}